{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerlogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// export default function Customerlogin() {\n//  const [name, setName] = useState(\"\");\n//  const [gmail, setGmail] = useState(\"\");\n//  const [password, setPassword] = useState(\"\");\n//  const [nameTouched, setNameTouched] = useState(false);\n//  const [gmailTouched, setGmailTouched] = useState(false);\n//  const [passwordTouched, setPasswordTouched] = useState(false);\n//  const isNameValid = name.length >= 3;\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\n//  const isPasswordValid = password.length > 6;\n//  const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid) {\n//     alert(\"name is error\");\n//     return;\n//     }\n//     if (!isGmailValid) {\n//     alert(\"gmail is error\");\n//     return;\n//     }\n//     if (!isPasswordValid) {\n//     alert(\"password is error\");\n//     return;\n//     }\n//     alert(`${name} ${gmail} ${password}`);\n//  };\n//  const nameChange = (e) => {\n//  setName(e.target.value);\n//  };\n//  const gmailChange = (e) => {\n//  setGmail(e.target.value);\n//  };\n//  const passwordChange = (e) => {\n//  setPassword(e.target.value);\n//  };\n//  return (\n//     <div>\n//     <form onSubmit={handleSubmit}>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={name}\n//     onChange={nameChange}\n//     onFocus={() => setNameTouched(true)}\n//     />\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={gmail}\n//     onChange={gmailChange}\n//     onFocus={() => setGmailTouched(true)}\n//     />\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={password}\n//     onChange={passwordChange}\n//     onFocus={() => setPasswordTouched(true)}\n//     />\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\n// }}>password is error</span>}\n//  </div>\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\n// !isPasswordValid}>\n//  submit\n//  </button>\n//  </form>\n//  </div>\n//  );\n// }\n\n// ......................original code .......................................................\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n\n// export default function Customerlogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//  const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix the errors in the form\");\n//       return;\n//     }\n\n//     const data = { name, gmail, password };\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         alert(result.message);\n//         navigate(\"/Productpage\");\n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div>\n//       <h1>Customer LOGIN </h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail must include '@gmail.com'</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Password must be longer than 6 characters</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       <button onClick={() => navigate(\"/Customergmail\")}>\n//         {/* New code: Navigate to Customergmail when clicked */}\n//         Forget password\n//       </button>\n\n//     </div>\n//   );\n// }\n\n// .......................perfect original code..............................................\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n\n// export default function Customerlogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix the errors in the form\");\n//       return;\n//     }\n\n//     const data = { name, gmail, password };\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         alert(result.message);\n//         navigate(\"/Productpage\");\n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           height: \"500px\",\n//           background: \"rgba(255, 255, 255, 0.1)\",\n//           borderRadius: \"50%\",\n//           boxShadow:\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\n//           padding: \"30px\",\n//           backdropFilter: \"blur(10px)\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"name\"\n//               type=\"text\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Name must be at least 3 characters long\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"@gmail.com\"\n//               type=\"text\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Gmail must include \"@gmail.com\"\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"PASSWORD\"\n//               type=\"text\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Password must be longer than 6 characters\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(0, 0, 0, 0.7)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n\n//         <button\n//           onClick={() => navigate(\"/Customergmail\")}\n//           style={{\n//             marginTop: \"20px\",\n//             padding: \"10px 20px\",\n//             borderRadius: \"25px\",\n//             background: \"rgba(0, 0, 0, 0.7)\",\n//             color: \"green\",\n//             fontWeight: \"bold\",\n//             cursor: \"pointer\"\n\n//           }}\n//         >\n//           Forget password\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ......................testing......................................\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n\n// export default function Customerlogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix the errors in the form\");\n//       return;\n//     }\n\n//     const data = { name, gmail, password };\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         // Store the JWT token in localStorage\n//         localStorage.setItem(\"customerToken\", result.token);\n//         alert(result.message);\n//         navigate(\"/Productpage\");\n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           height: \"500px\",\n//           background: \"rgba(255, 255, 255, 0.1)\",\n//           borderRadius: \"50%\",\n//           boxShadow:\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\n//           padding: \"30px\",\n//           backdropFilter: \"blur(10px)\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               placeholder=\"name\"\n//               type=\"text\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Name must be at least 3 characters long\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               placeholder=\"@gmail.com\"\n//               type=\"text\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Gmail must include \"@gmail.com\"\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               placeholder=\"PASSWORD\"\n//               type=\"text\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Password must be longer than 6 characters\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(0, 0, 0, 0.7)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n\n//         <button\n//           onClick={() => navigate(\"/Customergmail\")}\n//           style={{\n//             marginTop: \"20px\",\n//             padding: \"10px 20px\",\n//             borderRadius: \"25px\",\n//             background: \"rgba(0, 0, 0, 0.7)\",\n//             color: \"green\",\n//             fontWeight: \"bold\",\n//             cursor: \"pointer\",\n//           }}\n//         >\n//           Forget password\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Productpage() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"http://localhost:5000/products\").then(response => response.json()).then(data => {\n      setProducts(data);\n      setFilteredProducts(data);\n    }).catch(error => console.error(\"Error fetching products:\", error));\n  }, []);\n  const handleSearch = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (value === \"\") {\n      setFilteredProducts(products);\n    } else {\n      const filtered = products.filter(product => {\n        return product.productName.toLowerCase().includes(value.toLowerCase()) || product.price.toString().includes(value);\n      });\n      setFilteredProducts(filtered);\n    }\n  };\n  const handleAddToCart = product => {\n    const formData = new FormData();\n    formData.append(\"productName\", product.productName);\n    formData.append(\"price\", product.price);\n    if (product.imageUrl) {\n      fetch(product.imageUrl).then(res => res.blob()).then(blob => {\n        const file = new File([blob], \"image.jpg\", {\n          type: blob.type\n        });\n        formData.append(\"imageUrl\", file);\n        fetch(\"http://localhost:5000/addToCart\", {\n          method: \"POST\",\n          body: formData\n        }).then(response => response.json()).then(data => {\n          alert(data.message || `Added ${product.productName} to cart!`);\n        }).catch(error => console.error(\"Error adding to cart:\", error));\n      });\n    }\n  };\n  const handleBuyNow = product => {\n    alert(`Buying ${product.productName} for $${product.price}`);\n  };\n  const handleCustomerLogout = () => {\n    // Delete JWT token from local storage\n    localStorage.removeItem(\"customerToken\");\n    alert(\"Successfully logged out!\");\n\n    // Navigate to Customerlogin component\n    // navigate(\"/Customerlogin\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PRODUCT PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginBottom: \"20px\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search products by name or price...\",\n        value: searchTerm,\n        onChange: handleSearch,\n        style: {\n          padding: \"10px 20px\",\n          borderRadius: \"25px\",\n          border: \"solid red\",\n          background: \"rgba(255, 255, 255, 0.2)\",\n          backdropFilter: \"blur(10px)\",\n          color: \"#333\",\n          width: \"300px\",\n          marginRight: \"10px\",\n          fontSize: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSearchTerm(\"\"),\n        style: {\n          padding: \"10px 20px\",\n          borderRadius: \"50px\",\n          backgroundColor: \"#32CD32\",\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Clear Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCustomerLogout,\n      style: {\n        backgroundColor: \"#d9534f\",\n        color: \"white\",\n        padding: \"10px 15px\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        marginBottom: \"20px\"\n      },\n      children: \"Customer Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this), filteredProducts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\",\n        padding: \"10px\"\n      },\n      children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: \"200px\",\n          textAlign: \"center\",\n          flex: \"1 0 calc(14.28% - 20px)\",\n          maxWidth: \"14.28%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.imageUrl,\n          alt: product.productName,\n          style: {\n            width: \"200px\",\n            height: \"200px\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(product),\n            style: {\n              marginRight: \"10px\",\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              backgroundColor: \"#d90166\",\n              borderRadius: \"15px\"\n            },\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBuyNow(product),\n            style: {\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              backgroundColor: \"#006400\",\n              borderRadius: \"15px\"\n            },\n            children: \"Buy Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }, this)]\n      }, product.productId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 700,\n    columnNumber: 5\n  }, this);\n}\n_s(Productpage, \"4+dupcMnDZB3Wlk9RciwYHpmy68=\", false, function () {\n  return [useNavigate];\n});\n_c = Productpage;\nvar _c;\n$RefreshReg$(_c, \"Productpage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Productpage","_s","products","setProducts","searchTerm","setSearchTerm","filteredProducts","setFilteredProducts","navigate","fetch","then","response","json","data","catch","error","console","handleSearch","e","value","target","filtered","filter","product","productName","toLowerCase","includes","price","toString","handleAddToCart","formData","FormData","append","imageUrl","res","blob","file","File","type","method","body","alert","message","handleBuyNow","handleCustomerLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","marginBottom","position","placeholder","onChange","padding","borderRadius","border","background","backdropFilter","color","width","marginRight","fontSize","onClick","backgroundColor","cursor","length","flexWrap","gap","map","minWidth","textAlign","flex","maxWidth","src","alt","height","objectFit","marginTop","productId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerlogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// export default function Customerlogin() {\r\n//  const [name, setName] = useState(\"\");\r\n//  const [gmail, setGmail] = useState(\"\");\r\n//  const [password, setPassword] = useState(\"\");\r\n//  const [nameTouched, setNameTouched] = useState(false);\r\n//  const [gmailTouched, setGmailTouched] = useState(false);\r\n//  const [passwordTouched, setPasswordTouched] = useState(false);\r\n//  const isNameValid = name.length >= 3;\r\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//  const isPasswordValid = password.length > 6;\r\n//  const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid) {\r\n//     alert(\"name is error\");\r\n//     return;\r\n//     }\r\n//     if (!isGmailValid) {\r\n//     alert(\"gmail is error\");\r\n//     return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//     alert(\"password is error\");\r\n//     return;\r\n//     }\r\n//     alert(`${name} ${gmail} ${password}`);\r\n//  };\r\n//  const nameChange = (e) => {\r\n//  setName(e.target.value);\r\n//  };\r\n//  const gmailChange = (e) => {\r\n//  setGmail(e.target.value);\r\n//  };\r\n//  const passwordChange = (e) => {\r\n//  setPassword(e.target.value);\r\n//  };\r\n//  return (\r\n//     <div>\r\n//     <form onSubmit={handleSubmit}>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={name}\r\n//     onChange={nameChange}\r\n//     onFocus={() => setNameTouched(true)}\r\n//     />\r\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={gmail}\r\n//     onChange={gmailChange}\r\n//     onFocus={() => setGmailTouched(true)}\r\n//     />\r\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={password}\r\n//     onChange={passwordChange}\r\n//     onFocus={() => setPasswordTouched(true)}\r\n//     />\r\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\r\n// }}>password is error</span>}\r\n//  </div>\r\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\r\n// !isPasswordValid}>\r\n//  submit\r\n//  </button>\r\n//  </form>\r\n//  </div>\r\n//  );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ......................original code .......................................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// export default function Customerlogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n\r\n//  const navigate = useNavigate();\r\n\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix the errors in the form\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = { name, gmail, password };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(result.message);\r\n//         navigate(\"/Productpage\");\r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Customer LOGIN </h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail must include '@gmail.com'</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Password must be longer than 6 characters</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n\r\n//       <button onClick={() => navigate(\"/Customergmail\")}>\r\n//         {/* New code: Navigate to Customergmail when clicked */}\r\n//         Forget password\r\n//       </button>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......................perfect original code..............................................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// export default function Customerlogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix the errors in the form\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = { name, gmail, password };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(result.message);\r\n//         navigate(\"/Productpage\");\r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           height: \"500px\",\r\n//           background: \"rgba(255, 255, 255, 0.1)\",\r\n//           borderRadius: \"50%\",\r\n//           boxShadow:\r\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n//           padding: \"30px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\r\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"name\"\r\n//               type=\"text\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Name must be at least 3 characters long\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"@gmail.com\"\r\n//               type=\"text\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Gmail must include \"@gmail.com\"\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"PASSWORD\"\r\n//               type=\"text\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Password must be longer than 6 characters\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(0, 0, 0, 0.7)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n\r\n//         <button\r\n//           onClick={() => navigate(\"/Customergmail\")}\r\n//           style={{\r\n//             marginTop: \"20px\",\r\n//             padding: \"10px 20px\",\r\n//             borderRadius: \"25px\",\r\n//             background: \"rgba(0, 0, 0, 0.7)\",\r\n//             color: \"green\",\r\n//             fontWeight: \"bold\",\r\n//             cursor: \"pointer\"\r\n            \r\n//           }}\r\n//         >\r\n//           Forget password\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ......................testing......................................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// export default function Customerlogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix the errors in the form\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = { name, gmail, password };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         // Store the JWT token in localStorage\r\n//         localStorage.setItem(\"customerToken\", result.token);\r\n//         alert(result.message);\r\n//         navigate(\"/Productpage\");\r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           height: \"500px\",\r\n//           background: \"rgba(255, 255, 255, 0.1)\",\r\n//           borderRadius: \"50%\",\r\n//           boxShadow:\r\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n//           padding: \"30px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\r\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               placeholder=\"name\"\r\n//               type=\"text\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Name must be at least 3 characters long\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               placeholder=\"@gmail.com\"\r\n//               type=\"text\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Gmail must include \"@gmail.com\"\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               placeholder=\"PASSWORD\"\r\n//               type=\"text\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Password must be longer than 6 characters\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(0, 0, 0, 0.7)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n\r\n//         <button\r\n//           onClick={() => navigate(\"/Customergmail\")}\r\n//           style={{\r\n//             marginTop: \"20px\",\r\n//             padding: \"10px 20px\",\r\n//             borderRadius: \"25px\",\r\n//             background: \"rgba(0, 0, 0, 0.7)\",\r\n//             color: \"green\",\r\n//             fontWeight: \"bold\",\r\n//             cursor: \"pointer\",\r\n//           }}\r\n//         >\r\n//           Forget password\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Productpage() {\r\n  const [products, setProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/products\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProducts(data);\r\n        setFilteredProducts(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching products:\", error));\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n\r\n    if (value === \"\") {\r\n      setFilteredProducts(products);\r\n    } else {\r\n      const filtered = products.filter((product) => {\r\n        return (\r\n          product.productName.toLowerCase().includes(value.toLowerCase()) ||\r\n          product.price.toString().includes(value)\r\n        );\r\n      });\r\n      setFilteredProducts(filtered);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (product) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", product.productName);\r\n    formData.append(\"price\", product.price);\r\n\r\n    if (product.imageUrl) {\r\n      fetch(product.imageUrl)\r\n        .then((res) => res.blob())\r\n        .then((blob) => {\r\n          const file = new File([blob], \"image.jpg\", { type: blob.type });\r\n          formData.append(\"imageUrl\", file);\r\n\r\n          fetch(\"http://localhost:5000/addToCart\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              alert(data.message || `Added ${product.productName} to cart!`);\r\n            })\r\n            .catch((error) => console.error(\"Error adding to cart:\", error));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBuyNow = (product) => {\r\n    alert(`Buying ${product.productName} for $${product.price}`);\r\n  };\r\n\r\n  const handleCustomerLogout = () => {\r\n    // Delete JWT token from local storage\r\n    localStorage.removeItem(\"customerToken\");\r\n    alert(\"Successfully logged out!\");\r\n\r\n    // Navigate to Customerlogin component\r\n    // navigate(\"/Customerlogin\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PRODUCT PAGE</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"20px\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search products by name or price...\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            borderRadius: \"25px\",\r\n            border: \"solid red\",\r\n            background: \"rgba(255, 255, 255, 0.2)\",\r\n            backdropFilter: \"blur(10px)\",\r\n            color: \"#333\",\r\n            width: \"300px\",\r\n            marginRight: \"10px\",\r\n            fontSize: \"16px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => setSearchTerm(\"\")}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            borderRadius: \"50px\",\r\n            backgroundColor: \"#32CD32\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Clear Search\r\n        </button>\r\n      </div>\r\n      <button\r\n        onClick={handleCustomerLogout}\r\n        style={{\r\n          backgroundColor: \"#d9534f\",\r\n          color: \"white\",\r\n          padding: \"10px 15px\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        Customer Logout\r\n      </button>\r\n      {filteredProducts.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"20px\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          {filteredProducts.map((product) => (\r\n            <div\r\n              key={product.productId}\r\n              style={{\r\n                minWidth: \"200px\",\r\n                textAlign: \"center\",\r\n                flex: \"1 0 calc(14.28% - 20px)\",\r\n                maxWidth: \"14.28%\",\r\n              }}\r\n            >\r\n              <h3>{product.productName}</h3>\r\n              <p>Price: ${product.price}</p>\r\n              <img\r\n                src={product.imageUrl}\r\n                alt={product.productName}\r\n                style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\r\n              />\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <button\r\n                  onClick={() => handleAddToCart(product)}\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    padding: \"5px 10px\",\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#d90166\",\r\n                    borderRadius: \"15px\",\r\n                  }}\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n                <button\r\n                  onClick={() => handleBuyNow(product)}\r\n                  style={{\r\n                    padding: \"5px 10px\",\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#006400\",\r\n                    borderRadius: \"15px\",\r\n                  }}\r\n                >\r\n                  Buy Now\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No products available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AASA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAceA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdV,WAAW,CAACU,IAAI,CAAC;MACjBN,mBAAmB,CAACM,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}