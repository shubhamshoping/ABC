{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     setPhone(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (at least 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"name\">Name:</label>\n//           <input\n//             id=\"name\"\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"phone\">Phone Number:</label>\n//           <input\n//             id=\"phone\"\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (exactly 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"gmail\">Gmail:</label>\n//           <input\n//             id=\"gmail\"\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(to right, #434343, #000000)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           padding: \"20px\",\n//           borderRadius: \"50%\",\n//           background: \"#fff\",\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\n//             <input\n//               id=\"name\"\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\n//             <input\n//               id=\"phone\"\n//               type=\"text\"\n//               placeholder=\"Enter your phone number\"\n//               value={phone}\n//               onChange={phoneChange}\n//               onFocus={() => setPhoneTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {phoneTouched && !isPhoneValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid phone number (exactly 10 digits)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\n//             <input\n//               id=\"gmail\"\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"20px\" }}>\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\n//             <input\n//               id=\"password\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               autoComplete=\"off\"\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter the password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//             }\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"linear-gradient(to right, #434343, #000000)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ...........................original code.............................................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n//   const isPhoneValid = /^\\d{10}$/.test(phone);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(\"Form submitted successfully!\");\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload();\n//   };\n\n//   const reverseText = (text) => text.split(\"\").reverse().join(\"\");\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\n//         padding: \"0 50px\",\n//       }}\n//     >\n//       {/* Original Form */}\n//       <div\n//         style={{\n//           width: \"350px\",\n//           height: \"auto\",\n//           background: \"rgba(255, 255, 255, 0.1)\",\n//           borderRadius: \"50%\",\n//           boxShadow:\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\n//           padding: \"30px\",\n//           backdropFilter: \"blur(10px)\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>ADMIN REGISTER</h1>\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\n//           {/* Name Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\n//               Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n\n//           {/* Phone Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\n//               Phone Number\n//             </label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your phone number\"\n//               value={phone}\n//               onChange={(e) => setPhone(e.target.value)}\n//               onFocus={() => setPhoneTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {phoneTouched && !isPhoneValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid phone number (exactly 10 digits)\n//               </span>\n//             )}\n//           </div>\n\n//           {/* Gmail Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\n//               Gmail\n//             </label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={(e) => setGmail(e.target.value)}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n\n//           {/* Password Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onFocus={() => setPasswordTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(0, 0, 0, 0.7)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Mirrored Form */}\n//       <div\n//         style={{\n//           width: \"350px\",\n//           height: \"auto\",\n//           transform: \"scaleX(-1)\",\n//           background: \"rgba(255, 255, 255, 0.1)\",\n//           borderRadius: \"50%\",\n//           boxShadow:\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\n//           padding: \"30px\",\n//           backdropFilter: \"blur(10px)\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <h1\n//           style={{\n//             color: \"#fff\",\n//             marginBottom: \"20px\",\n//             transform: \"scaleX(-1)\",\n//           }}\n//         >\n//           ADMIN REGISTER\n//         </h1>\n//         <div style={{ width: \"100%\", textAlign: \"center\" }}>\n//           {/* Name Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label\n//               style={{\n//                 color: \"#fff\",\n//                 display: \"block\",\n//                 marginBottom: \"5px\",\n//                 transform: \"scaleX(-1)\",\n//               }}\n//             >\n//               Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={reverseText(name)}\n//               readOnly\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//           </div>\n\n//           {/* Phone Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label\n//               style={{\n//                 color: \"#fff\",\n//                 display: \"block\",\n//                 marginBottom: \"5px\",\n//                 transform: \"scaleX(-1)\",\n//               }}\n//             >\n//               Phone Number\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={reverseText(phone)}\n//               readOnly\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//           </div>\n\n//           {/* Gmail Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label\n//               style={{\n//                 color: \"#fff\",\n//                 display: \"block\",\n//                 marginBottom: \"5px\",\n//                 transform: \"scaleX(-1)\",\n//               }}\n//             >\n//               Gmail\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={reverseText(gmail)}\n//               readOnly\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//           </div>\n\n//           {/* Password Field */}\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label\n//               style={{\n//                 color: \"#fff\",\n//                 display: \"block\",\n//                 marginBottom: \"5px\",\n//                 transform: \"scaleX(-1)\",\n//               }}\n//             >\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               value={reverseText(password)}\n//               readOnly\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(\"Form submitted successfully!\");\n//     console.log({ name, gmail, password });\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div>\n//       <h1>ADMIN REGISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         {/* Name Field */}\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n\n//         {/* Gmail Field */}\n//         <div>\n//           <label>Gmail</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n\n//         {/* Password Field */}\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span>Enter a valid password (at least 5 characters)</span>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert(data.message);\n//       } else {\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\n//       }\n//     } catch (err) {\n//       console.error(\"Error during registration:\", err);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>ADMIN REGISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Gmail</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span>Enter a valid password (at least 5 characters)</span>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert(data.message);\n//         window.location.reload(); // Auto-refresh the page\n//       } else {\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\n//       }\n//     } catch (err) {\n//       console.error(\"Error during registration:\", err);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>ADMIN REGISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Gmail</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span>Enter a valid password (at least 5 characters)</span>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRegister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store the JWT token in localStorage\n        localStorage.setItem(\"adminToken\", data.token);\n        alert(data.message);\n        window.location.reload(); // Auto-refresh the page\n      } else {\n        alert(data.message); // Alert if \"adminresister is full, no space\"\n      }\n    } catch (err) {\n      console.error(\"Error during registration:\", err);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADMIN REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          onFocus: () => setNameTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gmail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Gmail\",\n          value: gmail,\n          onChange: e => setGmail(e.target.value),\n          onFocus: () => setGmailTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 11\n        }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter a valid Gmail (must include @gmail.com)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onFocus: () => setPasswordTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 11\n        }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter a valid password (at least 5 characters)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1245,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminRegister, \"kBWS/GnLIbPLLtl1lzWHEjDCyno=\");\n_c = AdminRegister;\nvar _c;\n$RefreshReg$(_c, \"AdminRegister\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminRegister","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","message","window","location","reload","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onFocus","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     setPhone(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (at least 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             id=\"name\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"phone\">Phone Number:</label>\r\n//           <input\r\n//             id=\"phone\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (exactly 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"gmail\">Gmail:</label>\r\n//           <input\r\n//             id=\"gmail\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input\r\n//             id=\"password\"\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(to right, #434343, #000000)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"50%\",\r\n//           background: \"#fff\",\r\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\r\n//             <input\r\n//               id=\"name\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\r\n//             <input\r\n//               id=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your phone number\"\r\n//               value={phone}\r\n//               onChange={phoneChange}\r\n//               onFocus={() => setPhoneTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {phoneTouched && !isPhoneValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid phone number (exactly 10 digits)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\r\n//             <input\r\n//               id=\"gmail\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"20px\" }}>\r\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\r\n//             <input\r\n//               id=\"password\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               autoComplete=\"off\"\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter the password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={\r\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//             }\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"linear-gradient(to right, #434343, #000000)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ...........................original code.............................................\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(\"Form submitted successfully!\");\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   const reverseText = (text) => text.split(\"\").reverse().join(\"\");\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n//         padding: \"0 50px\",\r\n//       }}\r\n//     >\r\n//       {/* Original Form */}\r\n//       <div\r\n//         style={{\r\n//           width: \"350px\",\r\n//           height: \"auto\",\r\n//           background: \"rgba(255, 255, 255, 0.1)\",\r\n//           borderRadius: \"50%\",\r\n//           boxShadow:\r\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n//           padding: \"30px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>ADMIN REGISTER</h1>\r\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n//           {/* Name Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n//               Name\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Phone Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n//               Phone Number\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your phone number\"\r\n//               value={phone}\r\n//               onChange={(e) => setPhone(e.target.value)}\r\n//               onFocus={() => setPhoneTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {phoneTouched && !isPhoneValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid phone number (exactly 10 digits)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Gmail Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n//               Gmail\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={(e) => setGmail(e.target.value)}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Password Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(0, 0, 0, 0.7)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Mirrored Form */}\r\n//       <div\r\n//         style={{\r\n//           width: \"350px\",\r\n//           height: \"auto\",\r\n//           transform: \"scaleX(-1)\",\r\n//           background: \"rgba(255, 255, 255, 0.1)\",\r\n//           borderRadius: \"50%\",\r\n//           boxShadow:\r\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n//           padding: \"30px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1\r\n//           style={{\r\n//             color: \"#fff\",\r\n//             marginBottom: \"20px\",\r\n//             transform: \"scaleX(-1)\",\r\n//           }}\r\n//         >\r\n//           ADMIN REGISTER\r\n//         </h1>\r\n//         <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n//           {/* Name Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label\r\n//               style={{\r\n//                 color: \"#fff\",\r\n//                 display: \"block\",\r\n//                 marginBottom: \"5px\",\r\n//                 transform: \"scaleX(-1)\",\r\n//               }}\r\n//             >\r\n//               Name\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={reverseText(name)}\r\n//               readOnly\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Phone Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label\r\n//               style={{\r\n//                 color: \"#fff\",\r\n//                 display: \"block\",\r\n//                 marginBottom: \"5px\",\r\n//                 transform: \"scaleX(-1)\",\r\n//               }}\r\n//             >\r\n//               Phone Number\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={reverseText(phone)}\r\n//               readOnly\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Gmail Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label\r\n//               style={{\r\n//                 color: \"#fff\",\r\n//                 display: \"block\",\r\n//                 marginBottom: \"5px\",\r\n//                 transform: \"scaleX(-1)\",\r\n//               }}\r\n//             >\r\n//               Gmail\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={reverseText(gmail)}\r\n//               readOnly\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Password Field */}\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label\r\n//               style={{\r\n//                 color: \"#fff\",\r\n//                 display: \"block\",\r\n//                 marginBottom: \"5px\",\r\n//                 transform: \"scaleX(-1)\",\r\n//               }}\r\n//             >\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={reverseText(password)}\r\n//               readOnly\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(\"Form submitted successfully!\");\r\n//     console.log({ name, gmail, password });\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ADMIN REGISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {/* Name Field */}\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Gmail Field */}\r\n//         <div>\r\n//           <label>Gmail</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Password Field */}\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span>Enter a valid password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//       } else {\r\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during registration:\", err);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ADMIN REGISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Gmail</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span>Enter a valid password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//         window.location.reload(); // Auto-refresh the page\r\n//       } else {\r\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during registration:\", err);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ADMIN REGISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Gmail</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span>Enter a valid password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function AdminRegister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, gmail, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Store the JWT token in localStorage\r\n        localStorage.setItem(\"adminToken\", data.token);\r\n        alert(data.message);\r\n        window.location.reload(); // Auto-refresh the page\r\n      } else {\r\n        alert(data.message); // Alert if \"adminresister is full, no space\"\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during registration:\", err);\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>ADMIN REGISTER</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            onFocus={() => setNameTouched(true)}\r\n          />\r\n          {nameTouched && !isNameValid && (\r\n            <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Gmail</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your Gmail\"\r\n            value={gmail}\r\n            onChange={(e) => setGmail(e.target.value)}\r\n            onFocus={() => setGmailTouched(true)}\r\n          />\r\n          {gmailTouched && !isGmailValid && (\r\n            <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onFocus={() => setPasswordTouched(true)}\r\n          />\r\n          {passwordTouched && !isPasswordValid && (\r\n            <span>Enter a valid password (at least 5 characters)</span>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAGA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAscamCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA2BA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMiB,WAAW,GAAG,eAAe,CAACC,IAAI,CAACb,IAAI,CAAC,IAAIA,IAAI,CAACc,MAAM,IAAI,CAAC;EAClE,MAAMC,YAAY,GAAGb,KAAK,CAACc,QAAQ,CAAC,YAAY,CAAC;EACjD,MAAMC,eAAe,GAAGb,QAAQ,CAACU,MAAM,GAAG,CAAC;EAE3C,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACR,WAAW,IAAI,CAACG,YAAY,IAAI,CAACE,eAAe,EAAE;MACrDI,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE5B,IAAI;UAAEE,KAAK;UAAEE;QAAS,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMyB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,IAAI,CAACK,KAAK,CAAC;QAC9Cb,KAAK,CAACQ,IAAI,CAACM,OAAO,CAAC;QACnBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACLjB,KAAK,CAACQ,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MACvB;IACF,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAChDlB,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,oBACExB,OAAA;IAAA6C,QAAA,gBACE7C,OAAA;MAAA6C,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjD,OAAA;MAAMkD,QAAQ,EAAE7B,YAAa;MAAAwB,QAAA,gBAC3B7C,OAAA;QAAA6C,QAAA,gBACE7C,OAAA;UAAA6C,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBjD,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,iBAAiB;UAC7BC,KAAK,EAAElD,IAAK;UACZmD,QAAQ,EAAGhC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;UACzCG,OAAO,EAAEA,CAAA,KAAM9C,cAAc,CAAC,IAAI;QAAE;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,EACDxC,WAAW,IAAI,CAACM,WAAW,iBAC1Bf,OAAA;UAAA6C,QAAA,EAAM;QAAmE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAChF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENjD,OAAA;QAAA6C,QAAA,gBACE7C,OAAA;UAAA6C,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBjD,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEhD,KAAM;UACbiD,QAAQ,EAAGhC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;UAC1CG,OAAO,EAAEA,CAAA,KAAM5C,eAAe,CAAC,IAAI;QAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACDtC,YAAY,IAAI,CAACO,YAAY,iBAC5BlB,OAAA;UAAA6C,QAAA,EAAM;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC1D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENjD,OAAA;QAAA6C,QAAA,gBACE7C,OAAA;UAAA6C,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBjD,OAAA;UACEmD,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,qBAAqB;UACjCC,KAAK,EAAE9C,QAAS;UAChB+C,QAAQ,EAAGhC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;UAC7CG,OAAO,EAAEA,CAAA,KAAM1C,kBAAkB,CAAC,IAAI;QAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,EACDpC,eAAe,IAAI,CAACO,eAAe,iBAClCpB,OAAA;UAAA6C,QAAA,EAAM;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENjD,OAAA;QACEmD,IAAI,EAAC,QAAQ;QACbM,QAAQ,EAAE,CAAC1C,WAAW,IAAI,CAACG,YAAY,IAAI,CAACE,eAAgB;QAAAyB,QAAA,EAC7D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC/C,EAAA,CAnGuBD,aAAa;AAAAyD,EAAA,GAAbzD,aAAa;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}