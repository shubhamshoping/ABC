{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\n\n// import React, { useState } from \"react\";\n// import PhoneInput from \"react-phone-input-2\";\n// import \"react-phone-input-2/lib/style.css\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = phone.length >= 10;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n//         <div>\n//           <PhoneInput\n//             country={\"in\"}\n//             value={phone}\n//             onChange={(phone) => setPhone(phone)}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import PhoneInput from \"react-phone-input-2\";\n// import \"react-phone-input-2/lib/style.css\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = phone.length >= 10;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n//         <div>\n//           <PhoneInput\n//             country={\"in\"}\n//             value={phone}\n//             onChange={(phone) => setPhone(phone)}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import PhoneInput from \"react-phone-input-2\";\n// import \"react-phone-input-2/lib/style.css\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n//   const isPhoneValid = phone.length >= 10;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload();\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div\n//       style={{\n//         height: \"100vh\",\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         background: \"linear-gradient(120deg, #3a3d40, #18191a)\",\n//         position: \"relative\",\n//         overflow: \"hidden\",\n//       }}\n//     >\n//       {/* Floating background circles */}\n//       <div\n//         style={{\n//           position: \"absolute\",\n//           width: \"200px\",\n//           height: \"200px\",\n//           background: \"linear-gradient(to bottom, #ff7b00, #ff4500)\",\n//           borderRadius: \"50%\",\n//           top: \"10%\",\n//           left: \"15%\",\n//           zIndex: 0,\n//           filter: \"blur(100px)\",\n//         }}\n//       ></div>\n//       <div\n//         style={{\n//           position: \"absolute\",\n//           width: \"150px\",\n//           height: \"150px\",\n//           background: \"linear-gradient(to bottom, #ffdd00, #ff7b00)\",\n//           borderRadius: \"50%\",\n//           bottom: \"15%\",\n//           right: \"20%\",\n//           zIndex: 0,\n//           filter: \"blur(100px)\",\n//         }}\n//       ></div>\n\n//       {/* Glass effect container */}\n//       <form\n//         onSubmit={handleSubmit}\n//         style={{\n//           zIndex: 1,\n//           width: \"350px\",\n//           padding: \"30px\",\n//           background: \"rgba(255, 255, 255, 0.15)\",\n//           borderRadius: \"15px\",\n//           backdropFilter: \"blur(10px)\",\n//           WebkitBackdropFilter: \"blur(10px)\",\n//           border: \"1px solid rgba(255, 255, 255, 0.3)\",\n//           boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.5)\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h1\n//           style={{\n//             marginBottom: \"20px\",\n//             fontSize: \"24px\",\n//             color: \"#ffffff\",\n//             letterSpacing: \"2px\",\n//           }}\n//         >\n//           ADMIN REGISTER\n//         </h1>\n\n//         {/* Name Field */}\n//         <div style={{ marginBottom: \"15px\" }}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(255, 255, 255, 0.2)\",\n//               color: \"#fff\",\n//               outline: \"none\",\n//               fontSize: \"14px\",\n//             }}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//               Enter a valid name (at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n\n//         {/* Phone Field */}\n//         <div style={{ marginBottom: \"15px\" }}>\n//           <PhoneInput\n//             country={\"in\"}\n//             value={phone}\n//             onChange={(phone) => setPhone(phone)}\n//             onFocus={() => setPhoneTouched(true)}\n//             inputStyle={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               background: \"rgba(255, 255, 255, 0.2)\",\n//               border: \"none\",\n//               color: \"#fff\",\n//               fontSize: \"14px\",\n//             }}\n//             buttonStyle={{\n//               background: \"rgba(255, 255, 255, 0.2)\",\n//               border: \"none\",\n//             }}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//               Enter a valid phone number\n//             </span>\n//           )}\n//         </div>\n\n//         {/* Gmail Field */}\n//         <div style={{ marginBottom: \"15px\" }}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(255, 255, 255, 0.2)\",\n//               color: \"#fff\",\n//               outline: \"none\",\n//               fontSize: \"14px\",\n//             }}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//               Enter a valid Gmail\n//             </span>\n//           )}\n//         </div>\n\n//         {/* Password Field */}\n//         <div style={{ marginBottom: \"20px\" }}>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\"\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(255, 255, 255, 0.2)\",\n//               color: \"#fff\",\n//               outline: \"none\",\n//               fontSize: \"14px\",\n//             }}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//               Enter a valid password\n//             </span>\n//           )}\n//         </div>\n\n//         {/* Submit Button */}\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//           style={{\n//             padding: \"10px\",\n//             borderRadius: \"5px\",\n//             border: \"none\",\n//             background:\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//                 ? \"gray\"\n//                 : \"#4CAF50\",\n//             color: \"white\",\n//             cursor:\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//                 ? \"not-allowed\"\n//                 : \"pointer\",\n//             fontSize: \"14px\",\n//             fontWeight: \"bold\",\n//             letterSpacing: \"1px\",\n//           }}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminResister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const [phoneTouched, setPhoneTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const isPhoneValid = phone.length >= 10;\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    alert(`Form submitted successfully!`);\n    console.log({\n      name,\n      gmail,\n      password,\n      phone\n    });\n    window.location.reload();\n  };\n  const nameChange = e => {\n    setName(e.target.value);\n  };\n  const gmailChange = e => {\n    setGmail(e.target.value);\n  };\n  const passwordChange = e => {\n    setPassword(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(to right, #434343, #000000)\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"400px\",\n        padding: \"30px\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 0 20px rgba(255, 255, 255, 0.2)\",\n        backdropFilter: \"blur(10px)\",\n        color: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          marginBottom: \"20px\",\n          fontSize: \"24px\",\n          color: \"#fff\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: nameChange,\n            onFocus: () => setNameTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              background: \"rgba(255, 255, 255, 0.2)\",\n              color: \"#fff\",\n              outline: \"none\",\n              fontSize: \"14px\"\n            }\n            // Inline style for placeholder\n            ,\n            placeholder: \"Enter your name\",\n            placeholderStyle: {\n              color: \"black\" // Apply black color to placeholder\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n            country: \"in\",\n            value: phone,\n            onChange: phone => setPhone(phone),\n            onFocus: () => setPhoneTouched(true),\n            inputStyle: {\n              width: \"100%\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              background: \"rgba(255, 255, 255, 0.2)\",\n              color: \"#fff\",\n              fontSize: \"14px\",\n              outline: \"none\"\n            },\n            inputProps: {\n              placeholder: \"Enter your phone number\",\n              style: {\n                color: \"black\" // Fully black placeholder text\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), phoneTouched && !isPhoneValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter the phone number (at least 10 digits)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your Gmail\",\n            value: gmail,\n            onChange: gmailChange,\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              background: \"rgba(255, 255, 255, 0.2)\",\n              color: \"#fff\",\n              outline: \"none\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid Gmail (must include @gmail.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: passwordChange,\n            onFocus: () => setPasswordTouched(true),\n            autoComplete: \"off\",\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              background: \"rgba(255, 255, 255, 0.2)\",\n              color: \"#fff\",\n              outline: \"none\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter the password (at least 5 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"#4CAF50\",\n            color: \"#fff\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            transition: \"background 0.3s ease\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminResister, \"T+kegp1StLWImINPj5xdXMvesEE=\");\n_c = AdminResister;\nvar _c;\n$RefreshReg$(_c, \"AdminResister\");","map":{"version":3,"names":["React","useState","PhoneInput","jsxDEV","_jsxDEV","AdminResister","_s","name","setName","gmail","setGmail","password","setPassword","phone","setPhone","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","phoneTouched","setPhoneTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","isPhoneValid","handleSubmit","e","preventDefault","alert","console","log","window","location","reload","nameChange","target","value","gmailChange","passwordChange","style","display","justifyContent","alignItems","height","background","position","overflow","children","top","left","transform","width","padding","borderRadius","boxShadow","backdropFilter","color","textAlign","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onFocus","border","outline","placeholderStyle","country","inputStyle","inputProps","autoComplete","disabled","cursor","transition","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = phone.length >= 10;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <PhoneInput\r\n//             country={\"in\"}\r\n//             value={phone}\r\n//             onChange={(phone) => setPhone(phone)}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = phone.length >= 10;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <PhoneInput\r\n//             country={\"in\"}\r\n//             value={phone}\r\n//             onChange={(phone) => setPhone(phone)}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n//   const isPhoneValid = phone.length >= 10;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         height: \"100vh\",\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         background: \"linear-gradient(120deg, #3a3d40, #18191a)\",\r\n//         position: \"relative\",\r\n//         overflow: \"hidden\",\r\n//       }}\r\n//     >\r\n//       {/* Floating background circles */}\r\n//       <div\r\n//         style={{\r\n//           position: \"absolute\",\r\n//           width: \"200px\",\r\n//           height: \"200px\",\r\n//           background: \"linear-gradient(to bottom, #ff7b00, #ff4500)\",\r\n//           borderRadius: \"50%\",\r\n//           top: \"10%\",\r\n//           left: \"15%\",\r\n//           zIndex: 0,\r\n//           filter: \"blur(100px)\",\r\n//         }}\r\n//       ></div>\r\n//       <div\r\n//         style={{\r\n//           position: \"absolute\",\r\n//           width: \"150px\",\r\n//           height: \"150px\",\r\n//           background: \"linear-gradient(to bottom, #ffdd00, #ff7b00)\",\r\n//           borderRadius: \"50%\",\r\n//           bottom: \"15%\",\r\n//           right: \"20%\",\r\n//           zIndex: 0,\r\n//           filter: \"blur(100px)\",\r\n//         }}\r\n//       ></div>\r\n\r\n//       {/* Glass effect container */}\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         style={{\r\n//           zIndex: 1,\r\n//           width: \"350px\",\r\n//           padding: \"30px\",\r\n//           background: \"rgba(255, 255, 255, 0.15)\",\r\n//           borderRadius: \"15px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           WebkitBackdropFilter: \"blur(10px)\",\r\n//           border: \"1px solid rgba(255, 255, 255, 0.3)\",\r\n//           boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.5)\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1\r\n//           style={{\r\n//             marginBottom: \"20px\",\r\n//             fontSize: \"24px\",\r\n//             color: \"#ffffff\",\r\n//             letterSpacing: \"2px\",\r\n//           }}\r\n//         >\r\n//           ADMIN REGISTER\r\n//         </h1>\r\n\r\n//         {/* Name Field */}\r\n//         <div style={{ marginBottom: \"15px\" }}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(255, 255, 255, 0.2)\",\r\n//               color: \"#fff\",\r\n//               outline: \"none\",\r\n//               fontSize: \"14px\",\r\n//             }}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//               Enter a valid name (at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Phone Field */}\r\n//         <div style={{ marginBottom: \"15px\" }}>\r\n//           <PhoneInput\r\n//             country={\"in\"}\r\n//             value={phone}\r\n//             onChange={(phone) => setPhone(phone)}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//             inputStyle={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               background: \"rgba(255, 255, 255, 0.2)\",\r\n//               border: \"none\",\r\n//               color: \"#fff\",\r\n//               fontSize: \"14px\",\r\n//             }}\r\n//             buttonStyle={{\r\n//               background: \"rgba(255, 255, 255, 0.2)\",\r\n//               border: \"none\",\r\n//             }}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//               Enter a valid phone number\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Gmail Field */}\r\n//         <div style={{ marginBottom: \"15px\" }}>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(255, 255, 255, 0.2)\",\r\n//               color: \"#fff\",\r\n//               outline: \"none\",\r\n//               fontSize: \"14px\",\r\n//             }}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//               Enter a valid Gmail\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Password Field */}\r\n//         <div style={{ marginBottom: \"20px\" }}>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\"\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(255, 255, 255, 0.2)\",\r\n//               color: \"#fff\",\r\n//               outline: \"none\",\r\n//               fontSize: \"14px\",\r\n//             }}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//               Enter a valid password\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Submit Button */}\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             borderRadius: \"5px\",\r\n//             border: \"none\",\r\n//             background:\r\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//                 ? \"gray\"\r\n//                 : \"#4CAF50\",\r\n//             color: \"white\",\r\n//             cursor:\r\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//                 ? \"not-allowed\"\r\n//                 : \"pointer\",\r\n//             fontSize: \"14px\",\r\n//             fontWeight: \"bold\",\r\n//             letterSpacing: \"1px\",\r\n//           }}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nexport default function AdminResister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n  const isPhoneValid = phone.length >= 10;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n    alert(`Form submitted successfully!`);\r\n    console.log({ name, gmail, password, phone });\r\n    window.location.reload();\r\n  };\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const gmailChange = (e) => {\r\n    setGmail(e.target.value);\r\n  };\r\n\r\n  const passwordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(to right, #434343, #000000)\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"400px\",\r\n          padding: \"30px\",\r\n          background: \"rgba(255, 255, 255, 0.1)\",\r\n          borderRadius: \"15px\",\r\n          boxShadow: \"0 0 20px rgba(255, 255, 255, 0.2)\",\r\n          backdropFilter: \"blur(10px)\",\r\n          color: \"#fff\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginBottom: \"20px\",\r\n            fontSize: \"24px\",\r\n            color: \"#fff\",\r\n          }}\r\n        >\r\n          ADMIN REGISTER\r\n        </h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={nameChange}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.2)\",\r\n                color: \"#fff\",\r\n                outline: \"none\",\r\n                fontSize: \"14px\",\r\n              }}\r\n              // Inline style for placeholder\r\n              placeholder=\"Enter your name\"\r\n              placeholderStyle={{\r\n                color: \"black\", // Apply black color to placeholder\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid name (only letters and spaces, at least 3\r\n                characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <PhoneInput\r\n              country={\"in\"}\r\n              value={phone}\r\n              onChange={(phone) => setPhone(phone)}\r\n              onFocus={() => setPhoneTouched(true)}\r\n              inputStyle={{\r\n                width: \"100%\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.2)\",\r\n                color: \"#fff\",\r\n                fontSize: \"14px\",\r\n                outline: \"none\",\r\n              }}\r\n              inputProps={{\r\n                placeholder: \"Enter your phone number\",\r\n                style: {\r\n                  color: \"black\", // Fully black placeholder text\r\n                },\r\n              }}\r\n            />\r\n            {phoneTouched && !isPhoneValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter the phone number (at least 10 digits)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={gmail}\r\n              onChange={gmailChange}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.2)\",\r\n                color: \"#fff\",\r\n                outline: \"none\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid Gmail (must include @gmail.com)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={passwordChange}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              autoComplete=\"off\"\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.2)\",\r\n                color: \"#fff\",\r\n                outline: \"none\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter the password (at least 5 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={\r\n              !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n            }\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"#4CAF50\",\r\n              color: \"#fff\",\r\n              fontSize: \"16px\",\r\n              cursor: \"pointer\",\r\n              transition: \"background 0.3s ease\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}