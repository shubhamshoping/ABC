{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// .......... correct code .........\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]); // New state for table data\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n\n//     // Fetch existing products from the database\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(response.data); // Assuming the server returns an array of products\n//       } catch (error) {\n//         console.error(\"Error fetching products:\", error);\n//         alert(\"Failed to fetch products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n\n//       // Fetch updated product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Existing form code */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Add some spacing */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>{product.productName}</td>\n//                   <td>{product.price}</td>\n//                   <td>\n//                     <img\n//                       src={product.imageUrl}\n//                       alt={product.productName}\n//                       style={{ width: \"100px\", height: \"100px\" }}\n//                     />\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching products:\", error);\n//         alert(\"Failed to fetch products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n\n//       // Refresh the product list\n//       const response = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(response.data);\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product deleted successfully!\");\n\n//       // Refresh the product list\n//       const response = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(response.data);\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {products.length === 0 ? (\n//         <p>No products available</p>\n//       ) : (\n//         <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//           <thead>\n//             <tr>\n//               <th>Product ID</th>\n//               <th>Product Name</th>\n//               <th>Price</th>\n//               <th>Image</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) => (\n//               <tr key={product.productId}>\n//                 <td>{product.productId}</td>\n//                 <td>\n//                   {editingId === product.productId ? (\n//                     <input\n//                       type=\"text\"\n//                       value={productName}\n//                       onChange={(e) => setProductName(e.target.value)}\n//                     />\n//                   ) : (\n//                     product.productName\n//                   )}\n//                 </td>\n//                 <td>\n//                   {editingId === product.productId ? (\n//                     <input\n//                       type=\"text\"\n//                       value={price}\n//                       onChange={(e) => setPrice(e.target.value)}\n//                     />\n//                   ) : (\n//                     product.price\n//                   )}\n//                 </td>\n//                 <td>\n//                   {editingId === product.productId ? (\n//                     <input\n//                       type=\"file\"\n//                       accept=\"image/*\"\n//                       onChange={(e) => setImage(e.target.files[0])}\n//                     />\n//                   ) : (\n//                     <img\n//                       src={product.imageUrl}\n//                       alt={product.productName}\n//                       style={{ width: \"100px\", height: \"100px\" }}\n//                     />\n//                   )}\n//                 </td>\n//                 <td>\n//                   {editingId === product.productId ? (\n//                     <button onClick={() => handleUpdate(product.productId)}>Save</button>\n//                   ) : (\n//                     <button onClick={() => handleEdit(product)}>Edit</button>\n//                   )}\n//                   <button onClick={() => handleDelete(product.productId)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// ..................... perfect code....................................................................\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n\n//       // Refresh product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product deleted successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Product Form */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Product Table */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// ................perfect code.......................................\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n\n//       // Refresh product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Product Form */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Product Table */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n\n//       // Refresh product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n\n//       // Refresh the product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Product Form */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//             disabled={editingId !== null} // Disable image input if editing\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price\"\n//             disabled={editingId !== null} // Disable price input if editing\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//             disabled={editingId !== null} // Disable product name input if editing\n//           />\n//         </div>\n//         <button type=\"submit\" disabled={editingId !== null}>Submit</button> {/* Disable submit if editing */}\n//       </form>\n\n//       {/* Product Table */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// ...............................last original code..........................................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Product Form */}\n\n// <h1 style={{marginLeft:\"600px\"}}>ADMIN HOME</h1>\n\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//             disabled={editingId !== null} // Disable image input if editing\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price\"\n//             disabled={editingId !== null} // Disable price input if editing\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//             disabled={editingId !== null} // Disable product name input if editing\n//           />\n//         </div>\n//         <button type=\"submit\" disabled={editingId !== null}>Submit</button> {/* Disable submit if editing */}\n//       </form>\n\n//       {/* Product Table */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\nimport axios from \"axios\"; // Import axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n  // Fetch product data and the next productId on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n        setProductId(productIdResponse.data.productId);\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\n        setProducts(productsResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        alert(\"Failed to fetch initial data\");\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Handle form input changes\n  const handleChange = (e, setter) => setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n  // Handle form submission to add a new product\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !price || !productName) {\n      return alert(\"Please fill all fields.\");\n    }\n    const formData = new FormData();\n    formData.append(\"image\", e.target.image.files[0]);\n    formData.append(\"price\", price);\n    formData.append(\"productName\", productName);\n    try {\n      await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product added successfully!\");\n      window.location.reload(); // Auto refresh after successful submit\n\n      // Reset form fields\n      setImage(null);\n      setPrice(\"\");\n      setProductName(\"\");\n    } catch (error) {\n      console.error(\"Error adding product:\", error);\n      alert(\"Failed to add product\");\n    }\n  };\n\n  // Handle edit and update of a product\n  const handleEdit = product => {\n    setEditingId(product.productId);\n    setProductName(product.productName);\n    setPrice(product.price);\n    setImage(product.imageUrl);\n  };\n  const handleUpdate = async id => {\n    const formData = new FormData();\n    formData.append(\"productName\", productName);\n    formData.append(\"price\", price);\n    if (image && image instanceof File) {\n      formData.append(\"image\", image);\n    }\n    try {\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product updated successfully!\");\n      window.location.reload(); // Auto refresh after successful update\n\n      setEditingId(null); // Exit edit mode\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n      alert(\"Failed to update product\");\n    }\n  };\n\n  // Handle deletion of a product\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/products/${id}`);\n      alert(\"Product and image deleted successfully!\");\n      window.location.reload(); // Auto refresh after successful delete\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      alert(\"Failed to delete product\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginLeft: \"600px\",\n        color: \"#333\"\n      },\n      children: \"ADMIN HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        backgroundColor: \"#fff\",\n        padding: \"20px\",\n        maxWidth: \"600px\",\n        margin: \"0 auto\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: productId,\n          readOnly: true,\n          placeholder: \"Product ID\",\n          style: {\n            marginBottom: \"10px\",\n            cursor: \"not-allowed\",\n            backgroundColor: \"#f0f0f0\",\n            width: \"100%\",\n            padding: \"10px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1649,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          name: \"image\",\n          onChange: e => handleChange(e, setImage),\n          disabled: editingId !== null // Disable image input if editing\n          ,\n          style: {\n            padding: \"10px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1658,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Selected\",\n          style: {\n            width: 100,\n            height: 100,\n            marginTop: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1666,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1657,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: e => handleChange(e, setPrice),\n          placeholder: \"Enter price\",\n          disabled: editingId !== null // Disable price input if editing\n          ,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginTop: \"5px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1669,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: productName,\n          onChange: e => handleChange(e, setProductName),\n          placeholder: \"Enter product name\",\n          disabled: editingId !== null // Disable product name input if editing\n          ,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            marginTop: \"5px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: editingId !== null,\n        style: {\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          width: \"100%\",\n          marginTop: \"10px\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1688,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1647,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 9\n      }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"No products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1697,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"80%\",\n          margin: \"0 auto\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1701,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: product.productId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1712,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: productName,\n                onChange: e => setProductName(e.target.value),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1715,\n                columnNumber: 23\n              }, this) : product.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1713,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: price,\n                onChange: e => setPrice(e.target.value),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1727,\n                columnNumber: 23\n              }, this) : product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => setImage(e.target.files[0]),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1739,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: product.imageUrl,\n                alt: product.productName,\n                style: {\n                  width: \"100px\",\n                  height: \"100px\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1746,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1737,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: [editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdate(product.productId),\n                style: {\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\"\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1755,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(product),\n                style: {\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\"\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1759,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.productId),\n                style: {\n                  backgroundColor: \"#ff6347\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                  marginLeft: \"5px\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1763,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1753,\n              columnNumber: 19\n            }, this)]\n          }, product.productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1711,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1699,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1694,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1643,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"YXJxEbIHsiTk4yGECm3IMMhyeIk=\");\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Adminhome","_s","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editingId","setEditingId","fetchInitialData","productIdResponse","get","data","productsResponse","error","console","alert","handleChange","e","setter","target","type","URL","createObjectURL","files","value","handleSubmit","preventDefault","formData","FormData","append","post","headers","window","location","reload","handleEdit","product","imageUrl","handleUpdate","id","File","put","handleDelete","delete","children","style","marginLeft","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","backgroundColor","padding","maxWidth","margin","borderRadius","boxShadow","readOnly","placeholder","marginBottom","cursor","width","border","accept","name","onChange","disabled","src","alt","height","marginTop","fontSize","textAlign","length","cellPadding","cellSpacing","borderCollapse","map","objectFit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......... correct code .........\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]); // New state for table data\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n\r\n//     // Fetch existing products from the database\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(response.data); // Assuming the server returns an array of products\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products:\", error);\r\n//         alert(\"Failed to fetch products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n\r\n//       // Fetch updated product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Existing form code */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Add some spacing */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>{product.productName}</td>\r\n//                   <td>{product.price}</td>\r\n//                   <td>\r\n//                     <img\r\n//                       src={product.imageUrl}\r\n//                       alt={product.productName}\r\n//                       style={{ width: \"100px\", height: \"100px\" }}\r\n//                     />\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products:\", error);\r\n//         alert(\"Failed to fetch products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const response = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(response.data);\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product deleted successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const response = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Product List</h2>\r\n//       {products.length === 0 ? (\r\n//         <p>No products available</p>\r\n//       ) : (\r\n//         <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Product ID</th>\r\n//               <th>Product Name</th>\r\n//               <th>Price</th>\r\n//               <th>Image</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) => (\r\n//               <tr key={product.productId}>\r\n//                 <td>{product.productId}</td>\r\n//                 <td>\r\n//                   {editingId === product.productId ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={productName}\r\n//                       onChange={(e) => setProductName(e.target.value)}\r\n//                     />\r\n//                   ) : (\r\n//                     product.productName\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   {editingId === product.productId ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={price}\r\n//                       onChange={(e) => setPrice(e.target.value)}\r\n//                     />\r\n//                   ) : (\r\n//                     product.price\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   {editingId === product.productId ? (\r\n//                     <input\r\n//                       type=\"file\"\r\n//                       accept=\"image/*\"\r\n//                       onChange={(e) => setImage(e.target.files[0])}\r\n//                     />\r\n//                   ) : (\r\n//                     <img\r\n//                       src={product.imageUrl}\r\n//                       alt={product.productName}\r\n//                       style={{ width: \"100px\", height: \"100px\" }}\r\n//                     />\r\n//                   )}\r\n//                 </td>\r\n//                 <td>\r\n//                   {editingId === product.productId ? (\r\n//                     <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n//                   ) : (\r\n//                     <button onClick={() => handleEdit(product)}>Edit</button>\r\n//                   )}\r\n//                   <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..................... perfect code....................................................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n\r\n//       // Refresh product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product deleted successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Product Form */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ................perfect code.......................................\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n\r\n//       // Refresh product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Product Form */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n\r\n//       // Refresh product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n\r\n//       // Refresh the product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Product Form */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//             disabled={editingId !== null} // Disable image input if editing\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price\"\r\n//             disabled={editingId !== null} // Disable price input if editing\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//             disabled={editingId !== null} // Disable product name input if editing\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" disabled={editingId !== null}>Submit</button> {/* Disable submit if editing */}\r\n//       </form>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ...............................last original code..........................................................................\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Product Form */}\r\n\r\n// <h1 style={{marginLeft:\"600px\"}}>ADMIN HOME</h1>\r\n\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//             disabled={editingId !== null} // Disable image input if editing\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price\"\r\n//             disabled={editingId !== null} // Disable price input if editing\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//             disabled={editingId !== null} // Disable product name input if editing\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" disabled={editingId !== null}>Submit</button> {/* Disable submit if editing */}\r\n//       </form>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//                 <th>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)}>Edit</button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\nimport axios from \"axios\"; // Import axios\r\n\r\nexport default function Adminhome() {\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n  // Fetch product data and the next productId on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n        setProductId(productIdResponse.data.productId);\r\n\r\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n        setProducts(productsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        alert(\"Failed to fetch initial data\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e, setter) =>\r\n    setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n  // Handle form submission to add a new product\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!image || !price || !productName) {\r\n      return alert(\"Please fill all fields.\");\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.image.files[0]);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"productName\", productName);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product added successfully!\");\r\n      window.location.reload();  // Auto refresh after successful submit\r\n\r\n      // Reset form fields\r\n      setImage(null);\r\n      setPrice(\"\");\r\n      setProductName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      alert(\"Failed to add product\");\r\n    }\r\n  };\r\n\r\n  // Handle edit and update of a product\r\n  const handleEdit = (product) => {\r\n    setEditingId(product.productId);\r\n    setProductName(product.productName);\r\n    setPrice(product.price);\r\n    setImage(product.imageUrl);\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", productName);\r\n    formData.append(\"price\", price);\r\n    if (image && image instanceof File) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product updated successfully!\");\r\n      window.location.reload();  // Auto refresh after successful update\r\n\r\n      setEditingId(null); // Exit edit mode\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  // Handle deletion of a product\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/products/${id}`);\r\n      alert(\"Product and image deleted successfully!\");\r\n      window.location.reload();  // Auto refresh after successful delete\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Product Form */}\r\n      <h1 style={{ marginLeft: \"600px\", color: \"#333\" }}>ADMIN HOME</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", maxWidth: \"600px\", margin: \"0 auto\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={productId}\r\n            readOnly\r\n            placeholder=\"Product ID\"\r\n            style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            name=\"image\"\r\n            onChange={(e) => handleChange(e, setImage)}\r\n            disabled={editingId !== null} // Disable image input if editing\r\n            style={{ padding: \"10px\", width: \"100%\" }}\r\n          />\r\n          {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={price}\r\n            onChange={(e) => handleChange(e, setPrice)}\r\n            placeholder=\"Enter price\"\r\n            disabled={editingId !== null} // Disable price input if editing\r\n            style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={productName}\r\n            onChange={(e) => handleChange(e, setProductName)}\r\n            placeholder=\"Enter product name\"\r\n            disabled={editingId !== null} // Disable product name input if editing\r\n            style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {/* Product Table */}\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n        {products.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n        ) : (\r\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"80%\", margin: \"0 auto\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.productId}>\r\n                  <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={productName}\r\n                        onChange={(e) => setProductName(e.target.value)}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      product.productName\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      product.price\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={product.imageUrl}\r\n                        alt={product.productName}\r\n                        style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                        Save\r\n                      </button>\r\n                    ) : (\r\n                      <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                    <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA4BA;;AAagCA;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgcA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}