{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerlogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// export default function Customerlogin() {\n//  const [name, setName] = useState(\"\");\n//  const [gmail, setGmail] = useState(\"\");\n//  const [password, setPassword] = useState(\"\");\n//  const [nameTouched, setNameTouched] = useState(false);\n//  const [gmailTouched, setGmailTouched] = useState(false);\n//  const [passwordTouched, setPasswordTouched] = useState(false);\n//  const isNameValid = name.length >= 3;\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\n//  const isPasswordValid = password.length > 6;\n//  const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid) {\n//     alert(\"name is error\");\n//     return;\n//     }\n//     if (!isGmailValid) {\n//     alert(\"gmail is error\");\n//     return;\n//     }\n//     if (!isPasswordValid) {\n//     alert(\"password is error\");\n//     return;\n//     }\n//     alert(`${name} ${gmail} ${password}`);\n//  };\n//  const nameChange = (e) => {\n//  setName(e.target.value);\n//  };\n//  const gmailChange = (e) => {\n//  setGmail(e.target.value);\n//  };\n//  const passwordChange = (e) => {\n//  setPassword(e.target.value);\n//  };\n//  return (\n//     <div>\n//     <form onSubmit={handleSubmit}>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={name}\n//     onChange={nameChange}\n//     onFocus={() => setNameTouched(true)}\n//     />\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={gmail}\n//     onChange={gmailChange}\n//     onFocus={() => setGmailTouched(true)}\n//     />\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={password}\n//     onChange={passwordChange}\n//     onFocus={() => setPasswordTouched(true)}\n//     />\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\n// }}>password is error</span>}\n//  </div>\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\n// !isPasswordValid}>\n//  submit\n//  </button>\n//  </form>\n//  </div>\n//  );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customerlogin() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const isNameValid = name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fix the errors in the form\");\n      return;\n    }\n    const data = {\n      name,\n      gmail,\n      password\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/customerlogin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message);\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while submitting the form.\");\n    }\n  };\n  const nameChange = e => setName(e.target.value);\n  const gmailChange = e => setGmail(e.target.value);\n  const passwordChange = e => setPassword(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer LOGIN \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: nameChange,\n          onFocus: () => setNameTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Name must be at least 3 characters long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: gmail,\n          onChange: gmailChange,\n          onFocus: () => setGmailTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Gmail must include '@gmail.com'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: passwordChange,\n          onFocus: () => setPasswordTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Password must be longer than 6 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(Customerlogin, \"kBWS/GnLIbPLLtl1lzWHEjDCyno=\");\n_c = Customerlogin;\nvar _c;\n$RefreshReg$(_c, \"Customerlogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Customerlogin","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","isNameValid","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","data","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","console","nameChange","target","value","gmailChange","passwordChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","onFocus","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerlogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// export default function Customerlogin() {\r\n//  const [name, setName] = useState(\"\");\r\n//  const [gmail, setGmail] = useState(\"\");\r\n//  const [password, setPassword] = useState(\"\");\r\n//  const [nameTouched, setNameTouched] = useState(false);\r\n//  const [gmailTouched, setGmailTouched] = useState(false);\r\n//  const [passwordTouched, setPasswordTouched] = useState(false);\r\n//  const isNameValid = name.length >= 3;\r\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//  const isPasswordValid = password.length > 6;\r\n//  const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid) {\r\n//     alert(\"name is error\");\r\n//     return;\r\n//     }\r\n//     if (!isGmailValid) {\r\n//     alert(\"gmail is error\");\r\n//     return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//     alert(\"password is error\");\r\n//     return;\r\n//     }\r\n//     alert(`${name} ${gmail} ${password}`);\r\n//  };\r\n//  const nameChange = (e) => {\r\n//  setName(e.target.value);\r\n//  };\r\n//  const gmailChange = (e) => {\r\n//  setGmail(e.target.value);\r\n//  };\r\n//  const passwordChange = (e) => {\r\n//  setPassword(e.target.value);\r\n//  };\r\n//  return (\r\n//     <div>\r\n//     <form onSubmit={handleSubmit}>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={name}\r\n//     onChange={nameChange}\r\n//     onFocus={() => setNameTouched(true)}\r\n//     />\r\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={gmail}\r\n//     onChange={gmailChange}\r\n//     onFocus={() => setGmailTouched(true)}\r\n//     />\r\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={password}\r\n//     onChange={passwordChange}\r\n//     onFocus={() => setPasswordTouched(true)}\r\n//     />\r\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\r\n// }}>password is error</span>}\r\n//  </div>\r\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\r\n// !isPasswordValid}>\r\n//  submit\r\n//  </button>\r\n//  </form>\r\n//  </div>\r\n//  );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Customerlogin() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const isNameValid = name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fix the errors in the form\");\r\n      return;\r\n    }\r\n\r\n    const data = { name, gmail, password };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(result.message);\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"An error occurred while submitting the form.\");\r\n    }\r\n  };\r\n\r\n  const nameChange = (e) => setName(e.target.value);\r\n  const gmailChange = (e) => setGmail(e.target.value);\r\n  const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Customer LOGIN </h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={nameChange}\r\n            onFocus={() => setNameTouched(true)}\r\n          />\r\n          {nameTouched && !isNameValid && (\r\n            <span style={{ color: \"red\" }}>Name must be at least 3 characters long</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={gmail}\r\n            onChange={gmailChange}\r\n            onFocus={() => setGmailTouched(true)}\r\n          />\r\n          {gmailTouched && !isGmailValid && (\r\n            <span style={{ color: \"red\" }}>Gmail must include '@gmail.com'</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            onChange={passwordChange}\r\n            onFocus={() => setPasswordTouched(true)}\r\n          />\r\n          {passwordTouched && !isPasswordValid && (\r\n            <span style={{ color: \"red\" }}>Password must be longer than 6 characters</span>\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}