{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// ..............................original code.........................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// .......................... copy of above original code.......................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// ....................................testing................................................................\n\nimport React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\nimport axios from \"axios\"; // Import axios\n\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome({\n  addData,\n  deleteData\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleAdd = () => {\n    if (inputValue.trim()) {\n      addData(inputValue);\n      setInputValue(\"\"); // Clear input\n    } else {\n      alert(\"Input field cannot be empty!\");\n    }\n  };\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n  const navigate = useNavigate();\n\n  // Fetch product data and the next productId on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n        setProductId(productIdResponse.data.productId);\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\n        setProducts(productsResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        alert(\"Failed to fetch initial data\");\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Handle form input changes\n  const handleChange = (e, setter) => setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n  // Handle form submission to add a new product\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !price || !productName) {\n      return alert(\"Please fill all fields.\");\n    }\n    const formData = new FormData();\n    formData.append(\"image\", e.target.image.files[0]);\n    formData.append(\"price\", price);\n    formData.append(\"productName\", productName);\n    try {\n      await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product added successfully!\");\n      window.location.reload(); // Auto refresh after successful submit\n\n      // Reset form fields\n      setImage(null);\n      setPrice(\"\");\n      setProductName(\"\");\n    } catch (error) {\n      console.error(\"Error adding product:\", error);\n      alert(\"Failed to add product\");\n    }\n  };\n\n  // Handle edit and update of a product\n  const handleEdit = product => {\n    setEditingId(product.productId);\n    setProductName(product.productName);\n    setPrice(product.price);\n    setImage(product.imageUrl);\n  };\n  const handleUpdate = async id => {\n    const formData = new FormData();\n    formData.append(\"productName\", productName);\n    formData.append(\"price\", price);\n    if (image && image instanceof File) {\n      formData.append(\"image\", image);\n    }\n    try {\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product updated successfully!\");\n      window.location.reload(); // Auto refresh after successful update\n\n      setEditingId(null); // Exit edit mode\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n      alert(\"Failed to update product\");\n    }\n  };\n\n  // Handle deletion of a product\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/products/${id}`);\n      alert(\"Product and image deleted successfully!\");\n      window.location.reload(); // Auto refresh after successful delete\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      alert(\"Failed to delete product\");\n    }\n  };\n\n  // Handle Logout (Token deletion)\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwtToken\"); // Delete the token from localStorage\n    window.location.href = \"/Mainpage\"; // Navigate to Mainpage component\n  };\n  const handledelete = () => {\n    // Navigate to the Admindelete component\n    navigate(\"/admindelete\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      gap: \"50px\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#333\",\n          textAlign: \"center\"\n        },\n        children: \"ADMIN HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          backgroundColor: \"#fff\",\n          padding: \"20px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: productId,\n            readOnly: true,\n            placeholder: \"Product ID\",\n            style: {\n              marginBottom: \"10px\",\n              cursor: \"not-allowed\",\n              backgroundColor: \"#f0f0f0\",\n              width: \"100%\",\n              padding: \"10px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            name: \"image\",\n            onChange: e => handleChange(e, setImage),\n            disabled: editingId !== null // Disable image input if editing\n            ,\n            style: {\n              padding: \"10px\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Selected\",\n            style: {\n              width: 100,\n              height: 100,\n              marginTop: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: price,\n            onChange: e => handleChange(e, setPrice),\n            placeholder: \"Enter price\",\n            disabled: editingId !== null // Disable price input if editing\n            ,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginTop: \"5px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: productName,\n            onChange: e => handleChange(e, setProductName),\n            placeholder: \"Enter product name\",\n            disabled: editingId !== null // Disable product name input if editing\n            ,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginTop: \"5px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: editingId !== null,\n          style: {\n            backgroundColor: \"#4CAF50\",\n            color: \"white\",\n            padding: \"10px 20px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n            marginTop: \"10px\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2,\n        overflowY: \"auto\",\n        maxHeight: \"600px\",\n        backgroundColor: \"rgba(135, 206, 250, 0.7)\",\n        padding: \"20px\",\n        borderRadius: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"No products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"left\",\n                backgroundColor: \"#f2f2f2\",\n                color: \"#333\",\n                padding: \"10px\"\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: product.productId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: productName,\n                onChange: e => setProductName(e.target.value),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 23\n              }, this) : product.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: price,\n                onChange: e => setPrice(e.target.value),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 23\n              }, this) : product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => setImage(e.target.files[0]),\n                style: {\n                  padding: \"5px\",\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: product.imageUrl,\n                alt: product.productName,\n                style: {\n                  width: \"100px\",\n                  height: \"100px\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\"\n              },\n              children: [editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdate(product.productId),\n                style: {\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\"\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(product),\n                style: {\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\"\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.productId),\n                style: {\n                  backgroundColor: \"#ff6347\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                  marginLeft: \"5px\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this)]\n          }, product.productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          backgroundColor: \"#f44336\",\n          color: \"white\",\n          padding: \"5px 10px\",\n          border: \"none\",\n          borderRadius: \"15px\",\n          fontSize: \"15px\",\n          cursor: \"pointer\",\n          height: \"40px\",\n          marginBottom: \"10px\",\n          // Space between the buttons\n          boxShadow: \"0 0 15px 5px rgba(244, 67, 54, 0.8)\",\n          // Glowing effect\n          textShadow: \"0 0 10px rgba(244, 67, 54, 0.8)\",\n          // Glowing text effect\n          transition: \"all 0.3s ease-in-out\"\n        },\n        onMouseOver: e => e.target.style.boxShadow = \"0 0 25px 8px rgba(244, 67, 54, 1)\" // Brighter glow on hover\n        ,\n        onMouseOut: e => e.target.style.boxShadow = \"0 0 15px 5px rgba(244, 67, 54, 0.8)\" // Reset glow when not hovering\n        ,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handledelete,\n        style: {\n          width: \"auto\",\n          backgroundColor: \"#006400\",\n          color: \"white\",\n          padding: \"5px 10px\",\n          border: \"none\",\n          borderRadius: \"15px\",\n          fontSize: \"15px\",\n          cursor: \"pointer\",\n          height: \"40px\",\n          boxShadow: \"0 0 15px 5px rgba(0, 100, 0, 0.8)\",\n          // Glowing effect\n          textShadow: \"0 0 10px rgba(0, 100, 0, 0.8)\",\n          // Glowing text effect\n          transition: \"all 0.3s ease-in-out\"\n        },\n        onMouseOver: e => e.target.style.boxShadow = \"0 0 25px 8px rgba(0, 100, 0, 1)\" // Brighter glow on hover\n        ,\n        onMouseOut: e => e.target.style.boxShadow = \"0 0 15px 5px rgba(0, 100, 0, 0.8)\" // Reset glow when not hovering\n        ,\n        children: \"Delete admin account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/Addtocartpage\"),\n      style: {\n        width: \"180px\",\n        backgroundColor: \"red\",\n        color: \"white\",\n        padding: \"15px 10px\",\n        border: \"none\",\n        borderRadius: \"15px\",\n        fontSize: \"15px\",\n        cursor: \"pointer\",\n        height: \"50px\",\n        boxShadow: \"0 0 15px 5px rgba(0, 100, 0, 0.8)\",\n        // Glowing effect\n        textShadow: \"0 0 10px rgba(0, 100, 0, 0.8)\",\n        // Glowing text effect\n        transition: \"all 0.3s ease-in-out\",\n        marginTop: \"150px\",\n        position: \"absolute\",\n        marginLeft: \"1300px\"\n      },\n      children: \"Add to Cart page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"Enter data to add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteData(0),\n      children: \"Delete First Data Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 680,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"/l9A+BE4LXI+0HWxhqjMGxDDr+g=\", false, function () {\n  return [useNavigate];\n});\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Adminhome","addData","deleteData","_s","inputValue","setInputValue","handleAdd","trim","alert","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editingId","setEditingId","navigate","fetchInitialData","productIdResponse","get","data","productsResponse","error","console","handleChange","e","setter","target","type","URL","createObjectURL","files","value","handleSubmit","preventDefault","formData","FormData","append","post","headers","window","location","reload","handleEdit","product","imageUrl","handleUpdate","id","File","put","handleDelete","delete","handleLogout","localStorage","removeItem","href","handledelete","style","display","justifyContent","gap","padding","children","flex","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","backgroundColor","borderRadius","boxShadow","readOnly","placeholder","marginBottom","cursor","width","border","accept","name","onChange","disabled","src","alt","height","marginTop","fontSize","overflowY","maxHeight","length","cellPadding","cellSpacing","borderCollapse","map","objectFit","onClick","marginLeft","flexDirection","alignItems","textShadow","transition","onMouseOver","onMouseOut","position","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n// ..............................original code.........................................................\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......................... copy of above original code.......................................................\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ....................................testing................................................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\nimport axios from \"axios\"; // Import axios\r\n\r\n\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\n\r\nexport default function Adminhome(      { addData, deleteData }             ) {\r\n\r\n\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleAdd = () => {\r\n    if (inputValue.trim()) {\r\n      addData(inputValue);\r\n      setInputValue(\"\"); // Clear input\r\n    } else {\r\n      alert(\"Input field cannot be empty!\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // Fetch product data and the next productId on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n        setProductId(productIdResponse.data.productId);\r\n\r\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n        setProducts(productsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        alert(\"Failed to fetch initial data\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e, setter) =>\r\n    setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n  // Handle form submission to add a new product\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!image || !price || !productName) {\r\n      return alert(\"Please fill all fields.\");\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.image.files[0]);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"productName\", productName);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product added successfully!\");\r\n      window.location.reload();  // Auto refresh after successful submit\r\n\r\n      // Reset form fields\r\n      setImage(null);\r\n      setPrice(\"\");\r\n      setProductName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      alert(\"Failed to add product\");\r\n    }\r\n  };\r\n\r\n  // Handle edit and update of a product\r\n  const handleEdit = (product) => {\r\n    setEditingId(product.productId);\r\n    setProductName(product.productName);\r\n    setPrice(product.price);\r\n    setImage(product.imageUrl);\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", productName);\r\n    formData.append(\"price\", price);\r\n    if (image && image instanceof File) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product updated successfully!\");\r\n      window.location.reload();  // Auto refresh after successful update\r\n\r\n      setEditingId(null); // Exit edit mode\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  // Handle deletion of a product\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/products/${id}`);\r\n      alert(\"Product and image deleted successfully!\");\r\n      window.location.reload();  // Auto refresh after successful delete\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n\r\n// Handle Logout (Token deletion)\r\nconst handleLogout = () => {\r\n  localStorage.removeItem(\"jwtToken\"); // Delete the token from localStorage\r\n  window.location.href = \"/Mainpage\"; // Navigate to Mainpage component\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst handledelete = () => {\r\n  // Navigate to the Admindelete component\r\n  navigate(\"/admindelete\");\r\n};\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n      {/* Product Form */}\r\n      <div style={{ flex: 1 }}>\r\n        <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n        <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={productId}\r\n              readOnly\r\n              placeholder=\"Product ID\"\r\n              style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name=\"image\"\r\n              onChange={(e) => handleChange(e, setImage)}\r\n              disabled={editingId !== null} // Disable image input if editing\r\n              style={{ padding: \"10px\", width: \"100%\" }}\r\n            />\r\n            {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={price}\r\n              onChange={(e) => handleChange(e, setPrice)}\r\n              placeholder=\"Enter price\"\r\n              disabled={editingId !== null} // Disable price input if editing\r\n              style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={productName}\r\n              onChange={(e) => handleChange(e, setProductName)}\r\n              placeholder=\"Enter product name\"\r\n              disabled={editingId !== null} // Disable product name input if editing\r\n              style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Product Table */}\r\n      <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n        <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n        {products.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n        ) : (\r\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n                <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.productId}>\r\n                  <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={productName}\r\n                        onChange={(e) => setProductName(e.target.value)}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      product.productName\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      product.price\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={product.imageUrl}\r\n                        alt={product.productName}\r\n                        style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                  <td style={{ padding: \"10px\" }}>\r\n                    {editingId === product.productId ? (\r\n                      <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                        Save\r\n                      </button>\r\n                    ) : (\r\n                      <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                    <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n\r\n\r\n{/* <button onClick={handleLogout} style={{ backgroundColor: \"#f44336\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", marginTop: \"10px\" }}>\r\n        Logout\r\n      </button>\r\n      <button onClick={handledelete} style={{width:\"100px\", backgroundColor: \"green\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", marginTop: \"10px\" }} >\r\n                Delete admin account\r\n            </button>  */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"20px\" }}>\r\n  {/* Logout Button */}\r\n  <button \r\n    onClick={handleLogout} \r\n    style={{\r\n      backgroundColor: \"#f44336\", \r\n      color: \"white\", \r\n      padding: \"5px 10px\", \r\n      border: \"none\", \r\n      borderRadius: \"15px\", \r\n      fontSize: \"15px\", \r\n      cursor: \"pointer\", \r\n      height: \"40px\", \r\n      marginBottom: \"10px\", // Space between the buttons\r\n      boxShadow: \"0 0 15px 5px rgba(244, 67, 54, 0.8)\", // Glowing effect\r\n      textShadow: \"0 0 10px rgba(244, 67, 54, 0.8)\", // Glowing text effect\r\n      transition: \"all 0.3s ease-in-out\",\r\n    }}\r\n    onMouseOver={(e) => e.target.style.boxShadow = \"0 0 25px 8px rgba(244, 67, 54, 1)\"} // Brighter glow on hover\r\n    onMouseOut={(e) => e.target.style.boxShadow = \"0 0 15px 5px rgba(244, 67, 54, 0.8)\"} // Reset glow when not hovering\r\n  >\r\n    Logout\r\n  </button>\r\n\r\n  {/* Delete admin account Button */}\r\n  <button \r\n    onClick={handledelete} \r\n    style={{\r\n      width: \"auto\", \r\n      backgroundColor: \"#006400\", \r\n      color: \"white\", \r\n      padding: \"5px 10px\", \r\n      border: \"none\", \r\n      borderRadius: \"15px\", \r\n      fontSize: \"15px\", \r\n      cursor: \"pointer\", \r\n      height: \"40px\", \r\n      boxShadow: \"0 0 15px 5px rgba(0, 100, 0, 0.8)\", // Glowing effect\r\n      textShadow: \"0 0 10px rgba(0, 100, 0, 0.8)\", // Glowing text effect\r\n      transition: \"all 0.3s ease-in-out\",\r\n    }}\r\n    onMouseOver={(e) => e.target.style.boxShadow = \"0 0 25px 8px rgba(0, 100, 0, 1)\"} // Brighter glow on hover\r\n    onMouseOut={(e) => e.target.style.boxShadow = \"0 0 15px 5px rgba(0, 100, 0, 0.8)\"} // Reset glow when not hovering\r\n  >\r\n    Delete admin account\r\n  </button>\r\n</div>\r\n\r\n\r\n<button onClick={() => navigate(\"/Addtocartpage\")}  style={{\r\n      width: \"180px\", \r\n      backgroundColor: \"red\", \r\n      color: \"white\", \r\n      padding: \"15px 10px\", \r\n      border: \"none\", \r\n      borderRadius: \"15px\", \r\n      fontSize: \"15px\", \r\n      cursor: \"pointer\", \r\n      height: \"50px\", \r\n      boxShadow: \"0 0 15px 5px rgba(0, 100, 0, 0.8)\", // Glowing effect\r\n      textShadow: \"0 0 10px rgba(0, 100, 0, 0.8)\", // Glowing text effect\r\n      transition: \"all 0.3s ease-in-out\",\r\n      marginTop:\"150px\",\r\n    position:\"absolute\",\r\n    marginLeft:\"1300px\"\r\n\r\n    }} >\r\nAdd to Cart page\r\n</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h2>Admin Home</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        placeholder=\"Enter data to add\"\r\n      />\r\n      <button onClick={handleAdd}>Add Data</button>\r\n      <button onClick={() => deleteData(0)}>Delete First Data Entry</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAGA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAG3B,SAASC,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}