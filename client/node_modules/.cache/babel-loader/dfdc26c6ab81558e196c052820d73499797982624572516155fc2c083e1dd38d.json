{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customerpassword() {\n  _s();\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isGmailValid) {\n      alert(\"gmail is error\");\n      return;\n    }\n    if (!isPasswordValid) {\n      alert(\"password is error\");\n      return;\n    }\n    alert(`${gmail} ${password}`);\n  };\n  const gmailChange = e => {\n    setGmail(e.target.value);\n  };\n  const passwordChange = e => {\n    setPassword(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: gmail,\n          onChange: gmailChange,\n          onFocus: () => setGmailTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"gmail is error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: passwordChange,\n          onFocus: () => setPasswordTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"password is error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isGmailValid || !isPasswordValid,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Customerpassword, \"JH56gwXSMDEOGomqI+4K3D+2LAQ=\");\n_c = Customerpassword;\nvar _c;\n$RefreshReg$(_c, \"Customerpassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Customerpassword","_s","gmail","setGmail","password","setPassword","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","isGmailValid","includes","isPasswordValid","length","handleSubmit","e","preventDefault","alert","gmailChange","target","value","passwordChange","children","onSubmit","type","onChange","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerpassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Customerpassword() {\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isGmailValid) {\r\n      alert(\"gmail is error\");\r\n      return;\r\n    }\r\n    if (!isPasswordValid) {\r\n      alert(\"password is error\");\r\n      return;\r\n    }\r\n    alert(`${gmail} ${password}`);\r\n  };\r\n\r\n  const gmailChange = (e) => {\r\n    setGmail(e.target.value);\r\n  };\r\n\r\n  const passwordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={gmail}\r\n            onChange={gmailChange}\r\n            onFocus={() => setGmailTouched(true)}\r\n          />\r\n          {gmailTouched && !isGmailValid && (\r\n            <span style={{ color: 'red' }}>gmail is error</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            onChange={passwordChange}\r\n            onFocus={() => setPasswordTouched(true)}\r\n          />\r\n          {passwordTouched && !isPasswordValid && (\r\n            <span style={{ color: 'red' }}>password is error</span>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" disabled={!isGmailValid || !isPasswordValid}>\r\n          submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}