{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// ..............................original code.........................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// .......................... copy of above original code.......................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n  // Fetch product data and the next productId on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n        setProductId(productIdResponse.data.productId);\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\n        setProducts(productsResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        alert(\"Failed to fetch initial data\");\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Handle form input changes\n  const handleChange = (e, setter) => setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n  // Handle form submission to add a new product\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !price || !productName) {\n      return alert(\"Please fill all fields.\");\n    }\n    const formData = new FormData();\n    formData.append(\"image\", e.target.image.files[0]);\n    formData.append(\"price\", price);\n    formData.append(\"productName\", productName);\n    try {\n      await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product added successfully!\");\n      window.location.reload(); // Auto refresh after successful submit\n\n      // Reset form fields\n      setImage(null);\n      setPrice(\"\");\n      setProductName(\"\");\n    } catch (error) {\n      console.error(\"Error adding product:\", error);\n      alert(\"Failed to add product\");\n    }\n  };\n\n  // Handle edit and update of a product\n  const handleEdit = product => {\n    setEditingId(product.productId);\n    setProductName(product.productName);\n    setPrice(product.price);\n    setImage(product.imageUrl);\n  };\n  const handleUpdate = async id => {\n    const formData = new FormData();\n    formData.append(\"productName\", productName);\n    formData.append(\"price\", price);\n    if (image && image instanceof File) {\n      formData.append(\"image\", image);\n    }\n    try {\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product updated successfully!\");\n      window.location.reload(); // Auto refresh after successful update\n\n      setEditingId(null); // Exit edit mode\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n      alert(\"Failed to update product\");\n    }\n  };\n\n  // Handle deletion of a product\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/products/${id}`);\n      alert(\"Product and image deleted successfully!\");\n      window.location.reload(); // Auto refresh after successful delete\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      alert(\"Failed to delete product\");\n    }\n  };\n\n  // Handle logout functionality\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // Remove token from local storage\n    alert(\"Logged out successfully!\");\n    window.location.href = \"/login\"; // Redirect to login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"20px\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#333\",\n          textAlign: \"center\"\n        },\n        children: \"ADMIN HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          backgroundColor: \"#ff6347\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            backgroundColor: \"#fff\",\n            padding: \"20px\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: productId,\n              readOnly: true,\n              placeholder: \"Product ID\",\n              style: {\n                marginBottom: \"10px\",\n                cursor: \"not-allowed\",\n                backgroundColor: \"#f0f0f0\",\n                width: \"100%\",\n                padding: \"10px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              name: \"image\",\n              onChange: e => handleChange(e, setImage),\n              disabled: editingId !== null // Disable image input if editing\n              ,\n              style: {\n                padding: \"10px\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"Selected\",\n              style: {\n                width: 100,\n                height: 100,\n                marginTop: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: price,\n              onChange: e => handleChange(e, setPrice),\n              placeholder: \"Enter price\",\n              disabled: editingId !== null // Disable price input if editing\n              ,\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                marginTop: \"5px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: productName,\n              onChange: e => handleChange(e, setProductName),\n              placeholder: \"Enter product name\",\n              disabled: editingId !== null // Disable product name input if editing\n              ,\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                marginTop: \"5px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: editingId !== null,\n            style: {\n              backgroundColor: \"#4CAF50\",\n              color: \"white\",\n              padding: \"10px 20px\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              fontSize: \"16px\",\n              cursor: \"pointer\",\n              width: \"100%\",\n              marginTop: \"10px\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 2,\n          overflowY: \"auto\",\n          maxHeight: \"600px\",\n          backgroundColor: \"rgba(135, 206, 250, 0.7)\",\n          padding: \"20px\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Product List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#333\"\n          },\n          children: \"No products available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          style: {\n            width: \"100%\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Product ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Product Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: product.productId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: productName,\n                  onChange: e => setProductName(e.target.value),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 25\n                }, this) : product.productName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 25\n                }, this) : product.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: e => setImage(e.target.files[0]),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.imageUrl,\n                  alt: product.productName,\n                  style: {\n                    width: \"100px\",\n                    height: \"100px\",\n                    objectFit: \"cover\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: [editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdate(product.productId),\n                  style: {\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\"\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(product),\n                  style: {\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\"\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(product.productId),\n                  style: {\n                    backgroundColor: \"#ff6347\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\",\n                    marginLeft: \"5px\"\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 21\n              }, this)]\n            }, product.productId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 634,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"YXJxEbIHsiTk4yGECm3IMMhyeIk=\");\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Adminhome","_s","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editingId","setEditingId","fetchInitialData","productIdResponse","get","data","productsResponse","error","console","alert","handleChange","e","setter","target","type","URL","createObjectURL","files","value","handleSubmit","preventDefault","formData","FormData","append","post","headers","window","location","reload","handleEdit","product","imageUrl","handleUpdate","id","File","put","handleDelete","delete","handleLogout","localStorage","removeItem","href","style","display","flexDirection","gap","padding","children","justifyContent","alignItems","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","border","borderRadius","fontSize","cursor","flex","onSubmit","boxShadow","readOnly","placeholder","marginBottom","width","accept","name","onChange","disabled","src","alt","height","marginTop","overflowY","maxHeight","length","cellPadding","cellSpacing","borderCollapse","map","objectFit","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n// ..............................original code.........................................................\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......................... copy of above original code.......................................................\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Adminhome() {\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n  // Fetch product data and the next productId on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n        setProductId(productIdResponse.data.productId);\r\n\r\n        const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n        setProducts(productsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        alert(\"Failed to fetch initial data\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e, setter) =>\r\n    setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n  // Handle form submission to add a new product\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!image || !price || !productName) {\r\n      return alert(\"Please fill all fields.\");\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.image.files[0]);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"productName\", productName);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product added successfully!\");\r\n      window.location.reload(); // Auto refresh after successful submit\r\n\r\n      // Reset form fields\r\n      setImage(null);\r\n      setPrice(\"\");\r\n      setProductName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      alert(\"Failed to add product\");\r\n    }\r\n  };\r\n\r\n  // Handle edit and update of a product\r\n  const handleEdit = (product) => {\r\n    setEditingId(product.productId);\r\n    setProductName(product.productName);\r\n    setPrice(product.price);\r\n    setImage(product.imageUrl);\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", productName);\r\n    formData.append(\"price\", price);\r\n    if (image && image instanceof File) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product updated successfully!\");\r\n      window.location.reload(); // Auto refresh after successful update\r\n\r\n      setEditingId(null); // Exit edit mode\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  // Handle deletion of a product\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/products/${id}`);\r\n      alert(\"Product and image deleted successfully!\");\r\n      window.location.reload(); // Auto refresh after successful delete\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n  // Handle logout functionality\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\"); // Remove token from local storage\r\n    alert(\"Logged out successfully!\");\r\n    window.location.href = \"/login\"; // Redirect to login page\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\", padding: \"20px\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          style={{\r\n            backgroundColor: \"#ff6347\",\r\n            color: \"white\",\r\n            padding: \"10px 20px\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            fontSize: \"16px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\" }}>\r\n        {/* Product Form */}\r\n        <div style={{ flex: 1 }}>\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: \"20px\",\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n          >\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={productId}\r\n                readOnly\r\n                placeholder=\"Product ID\"\r\n                style={{\r\n                  marginBottom: \"10px\",\r\n                  cursor: \"not-allowed\",\r\n                  backgroundColor: \"#f0f0f0\",\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  border: \"1px solid #ccc\",\r\n                  borderRadius: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                onChange={(e) => handleChange(e, setImage)}\r\n                disabled={editingId !== null} // Disable image input if editing\r\n                style={{ padding: \"10px\", width: \"100%\" }}\r\n              />\r\n              {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={price}\r\n                onChange={(e) => handleChange(e, setPrice)}\r\n                placeholder=\"Enter price\"\r\n                disabled={editingId !== null} // Disable price input if editing\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  marginTop: \"5px\",\r\n                  border: \"1px solid #ccc\",\r\n                  borderRadius: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={productName}\r\n                onChange={(e) => handleChange(e, setProductName)}\r\n                placeholder=\"Enter product name\"\r\n                disabled={editingId !== null} // Disable product name input if editing\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\",\r\n                  marginTop: \"5px\",\r\n                  border: \"1px solid #ccc\",\r\n                  borderRadius: \"4px\",\r\n                }}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={editingId !== null}\r\n              style={{\r\n                backgroundColor: \"#4CAF50\",\r\n                color: \"white\",\r\n                padding: \"10px 20px\",\r\n                border: \"none\",\r\n                borderRadius: \"4px\",\r\n                fontSize: \"16px\",\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Product Table */}\r\n        <div\r\n          style={{\r\n            flex: 2,\r\n            overflowY: \"auto\",\r\n            maxHeight: \"600px\",\r\n            backgroundColor: \"rgba(135, 206, 250, 0.7)\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n          {products.length === 0 ? (\r\n            <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n          ) : (\r\n            <table\r\n              border=\"1\"\r\n              cellPadding=\"10\"\r\n              cellSpacing=\"0\"\r\n              style={{ width: \"100%\", borderCollapse: \"collapse\" }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>\r\n                    Product ID\r\n                  </th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>\r\n                    Product Name\r\n                  </th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>\r\n                    Price\r\n                  </th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>\r\n                    Image\r\n                  </th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.map((product) => (\r\n                  <tr key={product.productId}>\r\n                    <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={productName}\r\n                          onChange={(e) => setProductName(e.target.value)}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        product.productName\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        product.price\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={(e) => setImage(e.target.files[0])}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={product.imageUrl}\r\n                          alt={product.productName}\r\n                          style={{\r\n                            width: \"100px\",\r\n                            height: \"100px\",\r\n                            objectFit: \"cover\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <button\r\n                          onClick={() => handleUpdate(product.productId)}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            padding: \"5px 10px\",\r\n                            border: \"none\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            fontSize: \"14px\",\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleEdit(product)}\r\n                          style={{\r\n                            backgroundColor: \"#4CAF50\",\r\n                            color: \"white\",\r\n                            padding: \"5px 10px\",\r\n                            border: \"none\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            fontSize: \"14px\",\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        onClick={() => handleDelete(product.productId)}\r\n                        style={{\r\n                          backgroundColor: \"#ff6347\",\r\n                          color: \"white\",\r\n                          padding: \"5px 10px\",\r\n                          border: \"none\",\r\n                          borderRadius: \"4px\",\r\n                          cursor: \"pointer\",\r\n                          fontSize: \"14px\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAGA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAoBA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}