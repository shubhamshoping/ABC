{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     setPhone(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (at least 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"name\">Name:</label>\n//           <input\n//             id=\"name\"\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"phone\">Phone Number:</label>\n//           <input\n//             id=\"phone\"\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (exactly 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"gmail\">Gmail:</label>\n//           <input\n//             id=\"gmail\"\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(to right, #434343, #000000)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           padding: \"20px\",\n//           borderRadius: \"50%\",\n//           background: \"#fff\",\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\n//             <input\n//               id=\"name\"\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\n//             <input\n//               id=\"phone\"\n//               type=\"text\"\n//               placeholder=\"Enter your phone number\"\n//               value={phone}\n//               onChange={phoneChange}\n//               onFocus={() => setPhoneTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {phoneTouched && !isPhoneValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid phone number (exactly 10 digits)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\n//             <input\n//               id=\"gmail\"\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"20px\" }}>\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\n//             <input\n//               id=\"password\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               autoComplete=\"off\"\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter the password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//             }\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"linear-gradient(to right, #434343, #000000)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminResister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const [phoneTouched, setPhoneTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4; // Updated condition for password validation\n  const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    alert(`Form submitted successfully!`);\n    console.log({\n      name,\n      gmail,\n      password,\n      phone\n    });\n    window.location.reload(); // Refresh the page after successful submission\n  };\n  const nameChange = e => {\n    setName(e.target.value);\n  };\n  const gmailChange = e => {\n    setGmail(e.target.value);\n  };\n  const passwordChange = e => {\n    setPassword(e.target.value);\n  };\n  const phoneChange = e => {\n    const value = e.target.value;\n    if (/^\\d{0,10}$/.test(value)) {\n      setPhone(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(to right, #434343, #000000)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        padding: \"20px\",\n        borderRadius: \"50%\",\n        background: \"#fff\",\n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n        textAlign: \"center\",\n        border: \"10px solid\",\n        borderImage: \"linear-gradient(to right, red, green, blue) 1\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: \"20px\",\n          color: \"#333\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: nameChange,\n            onFocus: () => setNameTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone\",\n            type: \"text\",\n            placeholder: \"Enter your phone number\",\n            value: phone,\n            onChange: phoneChange,\n            onFocus: () => setPhoneTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), phoneTouched && !isPhoneValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid phone number (exactly 10 digits)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gmail\",\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Gmail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gmail\",\n            type: \"text\",\n            placeholder: \"Enter your Gmail\",\n            value: gmail,\n            onChange: gmailChange,\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid Gmail (must include @gmail.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: passwordChange,\n            onFocus: () => setPasswordTouched(true),\n            autoComplete: \"off\",\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter the password (at least 5 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"linear-gradient(to right, #434343, #000000)\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 531,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminResister, \"T+kegp1StLWImINPj5xdXMvesEE=\");\n_c = AdminResister;\nvar _c;\n$RefreshReg$(_c, \"AdminResister\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminResister","_s","name","setName","gmail","setGmail","password","setPassword","phone","setPhone","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","phoneTouched","setPhoneTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","isPhoneValid","handleSubmit","e","preventDefault","alert","console","log","window","location","reload","nameChange","target","value","gmailChange","passwordChange","phoneChange","style","display","justifyContent","alignItems","height","background","children","width","padding","borderRadius","boxShadow","textAlign","border","borderImage","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","onChange","onFocus","fontSize","autoComplete","disabled","fontWeight","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     setPhone(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (at least 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             id=\"name\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"phone\">Phone Number:</label>\r\n//           <input\r\n//             id=\"phone\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (exactly 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"gmail\">Gmail:</label>\r\n//           <input\r\n//             id=\"gmail\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input\r\n//             id=\"password\"\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(to right, #434343, #000000)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"50%\",\r\n//           background: \"#fff\",\r\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\r\n//             <input\r\n//               id=\"name\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\r\n//             <input\r\n//               id=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your phone number\"\r\n//               value={phone}\r\n//               onChange={phoneChange}\r\n//               onFocus={() => setPhoneTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {phoneTouched && !isPhoneValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid phone number (exactly 10 digits)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\r\n//             <input\r\n//               id=\"gmail\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"20px\" }}>\r\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\r\n//             <input\r\n//               id=\"password\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               autoComplete=\"off\"\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter the password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={\r\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//             }\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"linear-gradient(to right, #434343, #000000)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function AdminResister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n  const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n    alert(`Form submitted successfully!`);\r\n    console.log({ name, gmail, password, phone });\r\n    window.location.reload(); // Refresh the page after successful submission\r\n  };\r\n\r\n  const nameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const gmailChange = (e) => {\r\n    setGmail(e.target.value);\r\n  };\r\n\r\n  const passwordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const phoneChange = (e) => {\r\n    const value = e.target.value;\r\n    if (/^\\d{0,10}$/.test(value)) {\r\n      setPhone(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(to right, #434343, #000000)\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          padding: \"20px\",\r\n          borderRadius: \"50%\",\r\n          background: \"#fff\",\r\n          boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\r\n          textAlign: \"center\",\r\n          border: \"10px solid\",\r\n          borderImage: \"linear-gradient(to right, red, green, blue) 1\",\r\n        }}\r\n      >\r\n        <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={nameChange}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid name (only letters and spaces, at least 3 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\r\n            <input\r\n              id=\"phone\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              value={phone}\r\n              onChange={phoneChange}\r\n              onFocus={() => setPhoneTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            />\r\n            {phoneTouched && !isPhoneValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid phone number (exactly 10 digits)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\r\n            <input\r\n              id=\"gmail\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={gmail}\r\n              onChange={gmailChange}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid Gmail (must include @gmail.com)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={passwordChange}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              autoComplete=\"off\"\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter the password (at least 5 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={\r\n              !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n            }\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"linear-gradient(to right, #434343, #000000)\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}