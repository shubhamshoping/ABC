{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminlogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function AdminLogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password });\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <div className=\"form-container\">\n//         <h1>ADMIN LOGIN</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"input-group\">\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               onFocus={() => setNameTouched(true)}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span className=\"error\">\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Gmail</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={(e) => setGmail(e.target.value)}\n//               onFocus={() => setGmailTouched(true)}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span className=\"error\">\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Password</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onFocus={() => setPasswordTouched(true)}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span className=\"error\">\n//                 Enter a valid password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// .............................................original code.....................................................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminLogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         alert(\"Login successful!\");\n//         console.log(\"Submitted Data:\", data);\n//       } else {\n//         alert(data.message || \"Error occurred while logging in.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting login:\", error);\n//       alert(\"An error occurred. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <div className=\"form-container\">\n//         <h1>ADMIN LOGIN</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"input-group\">\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               onFocus={() => setNameTouched(true)}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span className=\"error\">\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Gmail</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={(e) => setGmail(e.target.value)}\n//               onFocus={() => setGmailTouched(true)}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span className=\"error\">\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n//           <div className=\"input-group\">\n//             <label>Password</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onFocus={() => setPasswordTouched(true)}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span className=\"error\">\n//                 Enter a valid password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/adminlogin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Login successful!\");\n        console.log(\"Submitted Data:\", data);\n        window.location.reload(); // Refreshes the page\n      } else {\n        alert(data.message || \"Error occurred while logging in.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting login:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.heading,\n        children: \"ADMIN LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: styles.label,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            onFocus: () => setNameTouched(true),\n            style: {\n              ...styles.input,\n              borderColor: nameTouched && !isNameValid ? \"red\" : \"#ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.error,\n            children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: styles.label,\n            children: \"Gmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your Gmail\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            style: {\n              ...styles.input,\n              borderColor: gmailTouched && !isGmailValid ? \"red\" : \"#ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.error,\n            children: \"Enter a valid Gmail (must include @gmail.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: styles.label,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onFocus: () => setPasswordTouched(true),\n            style: {\n              ...styles.input,\n              borderColor: passwordTouched && !isPasswordValid ? \"red\" : \"#ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.error,\n            children: \"Enter a valid password (at least 5 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n          style: styles.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"kBWS/GnLIbPLLtl1lzWHEjDCyno=\");\n_c = AdminLogin;\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"rgba(0, 0, 255, 0.3)\" // Transparent blue background\n  },\n  formContainer: {\n    backgroundColor: \"#fff\",\n    padding: \"40px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    width: \"400px\",\n    textAlign: \"center\"\n  },\n  heading: {\n    marginBottom: \"30px\",\n    fontFamily: \"'Arial', sans-serif\",\n    color: \"#333\"\n  },\n  inputGroup: {\n    marginBottom: \"20px\",\n    textAlign: \"left\"\n  },\n  label: {\n    display: \"block\",\n    fontWeight: \"bold\",\n    marginBottom: \"5px\",\n    color: \"#333\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"12px\",\n    borderRadius: \"5px\",\n    border: \"2px solid #ccc\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    fontSize: \"16px\",\n    transition: \"all 0.3s ease\"\n  },\n  error: {\n    color: \"red\",\n    fontSize: \"12px\",\n    marginTop: \"5px\"\n  },\n  button: {\n    backgroundColor: \"#ff4d4d\",\n    color: \"#fff\",\n    padding: \"12px\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    border: \"none\",\n    transition: \"all 0.3s ease\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminLogin","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","window","location","reload","message","error","style","styles","container","children","formContainer","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","inputGroup","label","type","placeholder","value","onChange","target","onFocus","input","borderColor","disabled","button","_c","display","justifyContent","alignItems","height","backgroundColor","padding","borderRadius","boxShadow","width","textAlign","marginBottom","fontFamily","color","fontWeight","border","boxSizing","fontSize","transition","marginTop","cursor","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminlogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export default function AdminLogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password });\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <div className=\"form-container\">\r\n//         <h1>ADMIN LOGIN</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"input-group\">\r\n//             <label>Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               onFocus={() => setNameTouched(true)}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Gmail</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={(e) => setGmail(e.target.value)}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .............................................original code.....................................................\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminLogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         alert(\"Login successful!\");\r\n//         console.log(\"Submitted Data:\", data);\r\n//       } else {\r\n//         alert(data.message || \"Error occurred while logging in.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting login:\", error);\r\n//       alert(\"An error occurred. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <div className=\"form-container\">\r\n//         <h1>ADMIN LOGIN</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"input-group\">\r\n//             <label>Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               onFocus={() => setNameTouched(true)}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Gmail</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={(e) => setGmail(e.target.value)}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"input-group\">\r\n//             <label>Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span className=\"error\">\r\n//                 Enter a valid password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function AdminLogin() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/adminlogin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, gmail, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Login successful!\");\r\n        console.log(\"Submitted Data:\", data);\r\n        window.location.reload(); // Refreshes the page\r\n      } else {\r\n        alert(data.message || \"Error occurred while logging in.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting login:\", error);\r\n      alert(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.formContainer}>\r\n        <h1 style={styles.heading}>ADMIN LOGIN</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={styles.inputGroup}>\r\n            <label style={styles.label}>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                ...styles.input,\r\n                borderColor: nameTouched && !isNameValid ? \"red\" : \"#ccc\",\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={styles.error}>\r\n                Enter a valid name (only letters and spaces, at least 3 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={styles.inputGroup}>\r\n            <label style={styles.label}>Gmail</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                ...styles.input,\r\n                borderColor: gmailTouched && !isGmailValid ? \"red\" : \"#ccc\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={styles.error}>\r\n                Enter a valid Gmail (must include @gmail.com)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={styles.inputGroup}>\r\n            <label style={styles.label}>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              style={{\r\n                ...styles.input,\r\n                borderColor: passwordTouched && !isPasswordValid ? \"red\" : \"#ccc\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={styles.error}>\r\n                Enter a valid password (at least 5 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n            style={styles.button}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"rgba(0, 0, 255, 0.3)\", // Transparent blue background\r\n  },\r\n  formContainer: {\r\n    backgroundColor: \"#fff\",\r\n    padding: \"40px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n    width: \"400px\",\r\n    textAlign: \"center\",\r\n  },\r\n  heading: {\r\n    marginBottom: \"30px\",\r\n    fontFamily: \"'Arial', sans-serif\",\r\n    color: \"#333\",\r\n  },\r\n  inputGroup: {\r\n    marginBottom: \"20px\",\r\n    textAlign: \"left\",\r\n  },\r\n  label: {\r\n    display: \"block\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5px\",\r\n    color: \"#333\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    padding: \"12px\",\r\n    borderRadius: \"5px\",\r\n    border: \"2px solid #ccc\",\r\n    boxSizing: \"border-box\",\r\n    marginBottom: \"5px\",\r\n    fontSize: \"16px\",\r\n    transition: \"all 0.3s ease\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: \"12px\",\r\n    marginTop: \"5px\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#ff4d4d\",\r\n    color: \"#fff\",\r\n    padding: \"12px\",\r\n    borderRadius: \"5px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    transition: \"all 0.3s ease\",\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAoBA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAyCA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}