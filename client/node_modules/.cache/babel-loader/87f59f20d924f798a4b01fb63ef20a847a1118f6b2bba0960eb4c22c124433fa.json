{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// .......... correct code .........\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]); // New state for table data\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n\n//     // Fetch existing products from the database\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(response.data); // Assuming the server returns an array of products\n//       } catch (error) {\n//         console.error(\"Error fetching products:\", error);\n//         alert(\"Failed to fetch products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n\n//       // Fetch updated product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Existing form code */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Add some spacing */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>{product.productName}</td>\n//                   <td>{product.price}</td>\n//                   <td>\n//                     <img\n//                       src={product.imageUrl}\n//                       alt={product.productName}\n//                       style={{ width: \"100px\", height: \"100px\" }}\n//                     />\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editing, setEditing] = useState(null); // Track currently edited product\n\n  useEffect(() => {\n    const fetchProductId = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/nextProductId\");\n        setProductId(response.data.productId);\n      } catch (error) {\n        console.error(\"Error fetching product ID:\", error);\n        alert(\"Failed to fetch product ID\");\n      }\n    };\n    fetchProductId();\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/products\");\n        setProducts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        alert(\"Failed to fetch products\");\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleUpdate = async product => {\n    try {\n      const formData = new FormData();\n      formData.append(\"productName\", productName || product.productName);\n      formData.append(\"price\", price || product.price);\n      if (image) formData.append(\"image\", image);\n      await axios.put(`http://localhost:5000/products/${product.productId}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product updated successfully!\");\n      setEditing(null);\n      const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n      setProducts(updatedProducts.data);\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n      alert(\"Failed to update product\");\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      await axios.delete(`http://localhost:5000/products/${productId}`);\n      alert(\"Product deleted successfully!\");\n      setProducts(products.filter(product => product.productId !== productId));\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      alert(\"Failed to delete product\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: productId,\n          readOnly: true,\n          placeholder: \"Product ID\",\n          style: {\n            marginBottom: \"10px\",\n            cursor: \"not-allowed\",\n            backgroundColor: \"#f0f0f0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          name: \"image\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          placeholder: \"Enter price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: productName,\n          onChange: e => setProductName(e.target.value),\n          placeholder: \"Enter product name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        cellSpacing: \"0\",\n        style: {\n          width: \"100%\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.productId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editing === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: product.productName,\n                onChange: e => setProductName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this) : product.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editing === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: product.price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this) : product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editing === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => setImage(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: product.imageUrl,\n                alt: product.productName,\n                style: {\n                  width: \"100px\",\n                  height: \"100px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [editing === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdate(product),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditing(product.productId),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.productId),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)]\n          }, product.productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"h/R7pTrICeSRcR7niqNzrDC7k04=\");\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Adminhome","_s","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editing","setEditing","fetchProductId","response","get","data","error","console","alert","fetchProducts","handleUpdate","product","formData","FormData","append","put","headers","updatedProducts","handleDelete","delete","filter","children","onSubmit","handleSubmit","type","value","readOnly","placeholder","style","marginBottom","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","accept","name","onChange","e","target","files","marginTop","border","cellPadding","cellSpacing","width","textAlign","map","defaultValue","src","imageUrl","alt","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......... correct code .........\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]); // New state for table data\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n\r\n//     // Fetch existing products from the database\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(response.data); // Assuming the server returns an array of products\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products:\", error);\r\n//         alert(\"Failed to fetch products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n\r\n//       // Fetch updated product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Existing form code */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Add some spacing */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>{product.productName}</td>\r\n//                   <td>{product.price}</td>\r\n//                   <td>\r\n//                     <img\r\n//                       src={product.imageUrl}\r\n//                       alt={product.productName}\r\n//                       style={{ width: \"100px\", height: \"100px\" }}\r\n//                     />\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Adminhome() {\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editing, setEditing] = useState(null); // Track currently edited product\r\n\r\n  useEffect(() => {\r\n    const fetchProductId = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n        setProductId(response.data.productId);\r\n      } catch (error) {\r\n        console.error(\"Error fetching product ID:\", error);\r\n        alert(\"Failed to fetch product ID\");\r\n      }\r\n    };\r\n\r\n    fetchProductId();\r\n\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/products\");\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n        alert(\"Failed to fetch products\");\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleUpdate = async (product) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"productName\", productName || product.productName);\r\n      formData.append(\"price\", price || product.price);\r\n      if (image) formData.append(\"image\", image);\r\n\r\n      await axios.put(`http://localhost:5000/products/${product.productId}`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product updated successfully!\");\r\n      setEditing(null);\r\n      const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n      setProducts(updatedProducts.data);\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (productId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/products/${productId}`);\r\n      alert(\"Product deleted successfully!\");\r\n      setProducts(products.filter((product) => product.productId !== productId));\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={productId}\r\n            readOnly\r\n            placeholder=\"Product ID\"\r\n            style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            name=\"image\"\r\n            onChange={(e) => setImage(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            placeholder=\"Enter price\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            placeholder=\"Enter product name\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <h2>Product List</h2>\r\n        <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Product ID</th>\r\n              <th>Product Name</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.productId}>\r\n                <td>{product.productId}</td>\r\n                <td>\r\n                  {editing === product.productId ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={product.productName}\r\n                      onChange={(e) => setProductName(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    product.productName\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editing === product.productId ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={product.price}\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    product.price\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editing === product.productId ? (\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={product.imageUrl}\r\n                      alt={product.productName}\r\n                      style={{ width: \"100px\", height: \"100px\" }}\r\n                    />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editing === product.productId ? (\r\n                    <button onClick={() => handleUpdate(product)}>Save</button>\r\n                  ) : (\r\n                    <button onClick={() => setEditing(product.productId)}>Edit</button>\r\n                  )}\r\n                  <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}