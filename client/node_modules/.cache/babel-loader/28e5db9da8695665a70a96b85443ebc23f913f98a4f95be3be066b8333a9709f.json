{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminresister.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function Adminresister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [responseMessage, setResponseMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix validation errors before submitting.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n//       setResponseMessage(data.message);\n\n//       if (data.success) {\n//         setName(\"\");\n//         setGmail(\"\");\n//         setPassword(\"\");\n//         setNameTouched(false);\n//         setGmailTouched(false);\n//         setPasswordTouched(false);\n\n//         navigate(\"/Adminlogin\");\n\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting data:\", error);\n//       setResponseMessage(\"An error occurred. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Admin Resister</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long.</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail must include \"@gmail.com\".</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Password must be more than 6 characters long.</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//       {responseMessage && <p>{responseMessage}</p>}\n//     </div>\n//   );\n// }\n\n// ..............................Original code.....................................\n\n// import React, { useState } from \"react\";\n\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function Adminresister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [responseMessage, setResponseMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix validation errors before submitting.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n//       setResponseMessage(data.message);\n\n//       if (data.success) {\n//         setName(\"\");\n//         setGmail(\"\");\n//         setPassword(\"\");\n//         setNameTouched(false);\n//         setGmailTouched(false);\n//         setPasswordTouched(false);\n\n//         navigate(\"/Adminlogin\");\n\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting data:\", error);\n//       setResponseMessage(\"An error occurred. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Admin Resister</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long.</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail must include \"@gmail.com\".</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Password must be more than 6 characters long.</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//       {responseMessage && <p>{responseMessage}</p>}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminresister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const isNameValid = name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fix validation errors before submitting.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          password\n        })\n      });\n      const data = await response.json();\n      setResponseMessage(data.message);\n      if (data.success) {\n        setName(\"\");\n        setGmail(\"\");\n        setPassword(\"\");\n        setNameTouched(false);\n        setGmailTouched(false);\n        setPasswordTouched(false);\n        navigate(\"/Adminlogin\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      setResponseMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      background: \"linear-gradient(145deg, rgba(4, 85, 191, 0.7), rgba(4, 85, 191, 0.5))\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"40px\",\n        borderRadius: \"15px\",\n        background: \"rgba(4, 85, 191, 0.15)\",\n        boxShadow: \"0 8px 32px 0 rgba(4, 85, 191, 0.37)\",\n        backdropFilter: \"blur(10px)\",\n        WebkitBackdropFilter: \"blur(10px)\",\n        border: \"1px solid rgba(4, 85, 191, 0.18)\",\n        maxWidth: \"400px\",\n        width: \"100%\",\n        animation: \"shine 3s infinite\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#fff\"\n        },\n        children: \"Admin Resister\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            variant: \"outlined\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            onFocus: () => setNameTouched(true),\n            error: nameTouched && !isNameValid,\n            helperText: nameTouched && !isNameValid && \"Name must be at least 3 characters long.\",\n            InputProps: {\n              style: {\n                color: \"white\"\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: \"white\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Gmail\",\n            variant: \"outlined\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            error: gmailTouched && !isGmailValid,\n            helperText: gmailTouched && !isGmailValid && \"Gmail must include '@gmail.com'.\",\n            InputProps: {\n              style: {\n                color: \"white\"\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: \"white\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"password\",\n            label: \"Password\",\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onFocus: () => setPasswordTouched(true),\n            error: passwordTouched && !isPasswordValid,\n            helperText: passwordTouched && !isPasswordValid && \"Password must be more than 6 characters long.\",\n            InputProps: {\n              style: {\n                color: \"white\"\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: \"white\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n          style: {\n            backgroundColor: \"rgba(4, 85, 191, 0.3)\",\n            color: \"#fff\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          color: \"#fff\"\n        },\n        children: responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes shine {\n            0% {\n              box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);\n            }\n            50% {\n              box-shadow: 0 0 40px rgba(255, 255, 255, 0.4);\n            }\n            100% {\n              box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminresister, \"wYpSLK5tsZ/78oHiDnjUnWOq4JI=\", false, function () {\n  return [useNavigate];\n});\n_c = Adminresister;\nvar _c;\n$RefreshReg$(_c, \"Adminresister\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","jsxDEV","_jsxDEV","Adminresister","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","responseMessage","setResponseMessage","navigate","isNameValid","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","message","success","error","console","style","display","justifyContent","alignItems","minHeight","background","children","padding","borderRadius","boxShadow","backdropFilter","WebkitBackdropFilter","border","maxWidth","width","animation","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","fullWidth","label","variant","value","onChange","target","onFocus","helperText","InputProps","InputLabelProps","type","disabled","backgroundColor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminresister.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// export default function Adminresister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix validation errors before submitting.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       setResponseMessage(data.message);\r\n\r\n//       if (data.success) {\r\n//         setName(\"\");\r\n//         setGmail(\"\");\r\n//         setPassword(\"\");\r\n//         setNameTouched(false);\r\n//         setGmailTouched(false);\r\n//         setPasswordTouched(false);\r\n\r\n//         navigate(\"/Adminlogin\");\r\n\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting data:\", error);\r\n//       setResponseMessage(\"An error occurred. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Admin Resister</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long.</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail must include \"@gmail.com\".</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Password must be more than 6 characters long.</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//       {responseMessage && <p>{responseMessage}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..............................Original code.....................................\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// export default function Adminresister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix validation errors before submitting.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       setResponseMessage(data.message);\r\n\r\n//       if (data.success) {\r\n//         setName(\"\");\r\n//         setGmail(\"\");\r\n//         setPassword(\"\");\r\n//         setNameTouched(false);\r\n//         setGmailTouched(false);\r\n//         setPasswordTouched(false);\r\n\r\n//         navigate(\"/Adminlogin\");\r\n\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting data:\", error);\r\n//       setResponseMessage(\"An error occurred. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Admin Resister</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long.</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail must include \"@gmail.com\".</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Password must be more than 6 characters long.</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//       {responseMessage && <p>{responseMessage}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TextField, Button } from \"@mui/material\";\r\n\r\nexport default function Adminresister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isNameValid = name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fix validation errors before submitting.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, gmail, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message);\r\n\r\n      if (data.success) {\r\n        setName(\"\");\r\n        setGmail(\"\");\r\n        setPassword(\"\");\r\n        setNameTouched(false);\r\n        setGmailTouched(false);\r\n        setPasswordTouched(false);\r\n\r\n        navigate(\"/Adminlogin\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      setResponseMessage(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        minHeight: \"100vh\",\r\n        background: \"linear-gradient(145deg, rgba(4, 85, 191, 0.7), rgba(4, 85, 191, 0.5))\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          padding: \"40px\",\r\n          borderRadius: \"15px\",\r\n          background: \"rgba(4, 85, 191, 0.15)\",\r\n          boxShadow: \"0 8px 32px 0 rgba(4, 85, 191, 0.37)\",\r\n          backdropFilter: \"blur(10px)\",\r\n          WebkitBackdropFilter: \"blur(10px)\",\r\n          border: \"1px solid rgba(4, 85, 191, 0.18)\",\r\n          maxWidth: \"400px\",\r\n          width: \"100%\",\r\n          animation: \"shine 3s infinite\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>Admin Resister</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={() => setNameTouched(true)}\r\n              error={nameTouched && !isNameValid}\r\n              helperText={nameTouched && !isNameValid && \"Name must be at least 3 characters long.\"}\r\n              InputProps={{ style: { color: \"white\" } }}\r\n              InputLabelProps={{ style: { color: \"white\" } }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Gmail\"\r\n              variant=\"outlined\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              error={gmailTouched && !isGmailValid}\r\n              helperText={gmailTouched && !isGmailValid && \"Gmail must include '@gmail.com'.\"}\r\n              InputProps={{ style: { color: \"white\" } }}\r\n              InputLabelProps={{ style: { color: \"white\" } }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              error={passwordTouched && !isPasswordValid}\r\n              helperText={passwordTouched && !isPasswordValid && \"Password must be more than 6 characters long.\"}\r\n              InputProps={{ style: { color: \"white\" } }}\r\n              InputLabelProps={{ style: { color: \"white\" } }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n            style={{ backgroundColor: \"rgba(4, 85, 191, 0.3)\", color: \"#fff\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n\r\n        {responseMessage && (\r\n          <p style={{ textAlign: \"center\", marginTop: \"20px\", color: \"#fff\" }}>{responseMessage}</p>\r\n        )}\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n          @keyframes shine {\r\n            0% {\r\n              box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);\r\n            }\r\n            50% {\r\n              box-shadow: 0 0 40px rgba(255, 255, 255, 0.4);\r\n            }\r\n            100% {\r\n              box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;;AAIA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}