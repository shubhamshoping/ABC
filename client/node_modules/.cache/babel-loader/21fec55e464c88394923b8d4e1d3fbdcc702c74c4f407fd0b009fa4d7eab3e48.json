{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customergmail.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function Customergmail() {\n//   const [gmail, setGmail] = useState(\"\");\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isGmailValid) {\n//       alert(\"Gmail is invalid\");\n//       return;\n//     }\n//     alert(`Gmail: ${gmail}`);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Customer GMAIL</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\n//           )}\n//         </div>\n//         <button type=\"submit\" disabled={!isGmailValid}>\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// ..................................original code.......................................\n\n// import React, { useState } from \"react\";\n\n// export default function Customergmail() {\n//   const [gmail, setGmail] = useState(\"\");\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isGmailValid) {\n//       alert(\"Gmail is invalid\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/sendCustomerLink\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ gmail }),\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert(result.message);\n//       } else {\n//         alert(result.error);\n//       }\n//     } catch (error) {\n//       alert(\"An error occurred: \" + error.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Customer GMAIL</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\n//           )}\n//         </div>\n//         <button type=\"submit\" disabled={!isGmailValid}>\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customergmail() {\n  _s();\n  const [gmail, setGmail] = useState(\"\");\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isGmailValid) {\n      alert(\"Gmail is invalid\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/sendCustomerLink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gmail\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message);\n      } else {\n        alert(result.error);\n      }\n    } catch (error) {\n      alert(\"An error occurred: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        height: \"300px\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"50%\",\n        boxShadow: \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n        border: \"5px solid rgba(255, 255, 255, 0.3)\",\n        padding: \"30px\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#fff\",\n          marginBottom: \"20px\"\n        },\n        children: \"Customer GMAIL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Gmail is invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isGmailValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(0, 0, 0, 0.7)\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(Customergmail, \"RN7EDJ8BsRnRF4fQf0Rg44g6OMg=\");\n_c = Customergmail;\nvar _c;\n$RefreshReg$(_c, \"Customergmail\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Customergmail","_s","gmail","setGmail","gmailTouched","setGmailTouched","isGmailValid","includes","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","style","display","justifyContent","alignItems","height","background","children","width","borderRadius","boxShadow","border","padding","backdropFilter","flexDirection","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","onSubmit","type","value","onChange","target","onFocus","outline","fontSize","disabled","fontWeight","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customergmail.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export default function Customergmail() {\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isGmailValid) {\r\n//       alert(\"Gmail is invalid\");\r\n//       return;\r\n//     }\r\n//     alert(`Gmail: ${gmail}`);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1>Customer GMAIL</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\r\n//           )}\r\n//         </div>\r\n//         <button type=\"submit\" disabled={!isGmailValid}>\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..................................original code.......................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function Customergmail() {\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isGmailValid) {\r\n//       alert(\"Gmail is invalid\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/sendCustomerLink\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ gmail }),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         alert(result.message);\r\n//       } else {\r\n//         alert(result.error);\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"An error occurred: \" + error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Customer GMAIL</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\r\n//           )}\r\n//         </div>\r\n//         <button type=\"submit\" disabled={!isGmailValid}>\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Customergmail() {\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isGmailValid) {\r\n      alert(\"Gmail is invalid\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/sendCustomerLink\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ gmail }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        alert(result.message);\r\n      } else {\r\n        alert(result.error);\r\n      }\r\n    } catch (error) {\r\n      alert(\"An error occurred: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          height: \"300px\",\r\n          background: \"rgba(255, 255, 255, 0.1)\",\r\n          borderRadius: \"50%\",\r\n          boxShadow:\r\n            \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n          border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n          padding: \"30px\",\r\n          backdropFilter: \"blur(10px)\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer GMAIL</h1>\r\n        <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Gmail is invalid\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isGmailValid}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(0, 0, 0, 0.7)\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}