{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert(data.message);\n//       } else {\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\n//       }\n//     } catch (err) {\n//       console.error(\"Error during registration:\", err);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>ADMIN REGISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Gmail</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span>Enter a valid password (at least 5 characters)</span>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// ..........................................original code................................................................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert(data.message);\n//         window.location.reload(); // Auto-refresh the page\n//       } else {\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\n//       }\n//     } catch (err) {\n//       console.error(\"Error during registration:\", err);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>ADMIN REGISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Gmail</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span>Enter a valid password (at least 5 characters)</span>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// ..........................................original codes......................................................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminRegister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         alert(data.message);\n//         window.location.reload(); // Auto-refresh the page\n//       } else {\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\n//       }\n//     } catch (err) {\n//       console.error(\"Error during registration:\", err);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(90deg, #000000, #222222)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           padding: \"20px\",\n//           borderRadius: \"10px\",\n//           backgroundColor: \"#333\",\n//           color: \"white\",\n//           boxShadow: \"0 0 20px rgba(0, 255, 0, 0.5)\",\n//           border: \"2px solid rgba(0, 255, 0, 0.8)\",\n//         }}\n//       >\n//         <h1 style={{ textAlign: \"center\", color: \"#0f0\", marginBottom: \"20px\" }}>\n//           ADMIN REGISTER\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Name</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #555\",\n//                 backgroundColor: \"#222\",\n//                 color: \"white\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={(e) => setGmail(e.target.value)}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #555\",\n//                 backgroundColor: \"#222\",\n//                 color: \"white\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Password</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               onFocus={() => setPasswordTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #555\",\n//                 backgroundColor: \"#222\",\n//                 color: \"white\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               backgroundColor: \"#0f0\",\n//               color: \"black\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRegister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const navigate = useNavigate();\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Registration successful!\");\n        navigate(\"/ADMINLOGIN\"); // Navigate to ADMINLOGIN\n      } else {\n        alert(data.message);\n      }\n    } catch (err) {\n      console.error(\"Error during registration:\", err);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(90deg, #000000, #222222)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n        boxShadow: \"0 0 20px rgba(0, 255, 0, 0.5)\",\n        border: \"2px solid rgba(0, 255, 0, 0.8)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#0f0\",\n          marginBottom: \"20px\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            onFocus: () => setNameTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #555\",\n              backgroundColor: \"#222\",\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Gmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your Gmail\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #555\",\n              backgroundColor: \"#222\",\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid Gmail (must include @gmail.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onFocus: () => setPasswordTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid #555\",\n              backgroundColor: \"#222\",\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid password (at least 5 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#0f0\",\n            color: \"black\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminRegister, \"MVdD9dNCKPo9z+JXol3/RV+X2c8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminRegister;\nvar _c;\n$RefreshReg$(_c, \"AdminRegister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminRegister","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","navigate","isNameValid","test","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","err","console","error","style","display","justifyContent","alignItems","height","background","children","width","padding","borderRadius","backgroundColor","color","boxShadow","border","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onFocus","fontSize","disabled","fontWeight","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//       } else {\r\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during registration:\", err);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ADMIN REGISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Gmail</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span>Enter a valid password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..........................................original code................................................................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//         window.location.reload(); // Auto-refresh the page\r\n//       } else {\r\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during registration:\", err);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>ADMIN REGISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Gmail</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span>Enter a valid password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ..........................................original codes......................................................\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminRegister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(data.message);\r\n//         window.location.reload(); // Auto-refresh the page\r\n//       } else {\r\n//         alert(data.message); // Alert if \"adminresister is full, no space\"\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error during registration:\", err);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(90deg, #000000, #222222)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"10px\",\r\n//           backgroundColor: \"#333\",\r\n//           color: \"white\",\r\n//           boxShadow: \"0 0 20px rgba(0, 255, 0, 0.5)\",\r\n//           border: \"2px solid rgba(0, 255, 0, 0.8)\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ textAlign: \"center\", color: \"#0f0\", marginBottom: \"20px\" }}>\r\n//           ADMIN REGISTER\r\n//         </h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #555\",\r\n//                 backgroundColor: \"#222\",\r\n//                 color: \"white\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={(e) => setGmail(e.target.value)}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #555\",\r\n//                 backgroundColor: \"#222\",\r\n//                 color: \"white\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label style={{ display: \"block\", marginBottom: \"5px\" }}>Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #555\",\r\n//                 backgroundColor: \"#222\",\r\n//                 color: \"white\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               backgroundColor: \"#0f0\",\r\n//               color: \"black\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function AdminRegister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/adminresister\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name, gmail, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(\"Registration successful!\");\r\n        navigate(\"/ADMINLOGIN\"); // Navigate to ADMINLOGIN\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during registration:\", err);\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(90deg, #000000, #222222)\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\",\r\n          backgroundColor: \"#333\",\r\n          color: \"white\",\r\n          boxShadow: \"0 0 20px rgba(0, 255, 0, 0.5)\",\r\n          border: \"2px solid rgba(0, 255, 0, 0.8)\",\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\", color: \"#0f0\", marginBottom: \"20px\" }}>\r\n          ADMIN REGISTER\r\n        </h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ display: \"block\", marginBottom: \"5px\" }}>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #555\",\r\n                backgroundColor: \"#222\",\r\n                color: \"white\",\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid name (only letters and spaces, at least 3 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #555\",\r\n                backgroundColor: \"#222\",\r\n                color: \"white\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid Gmail (must include @gmail.com)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ display: \"block\", marginBottom: \"5px\" }}>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #555\",\r\n                backgroundColor: \"#222\",\r\n                color: \"white\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid password (at least 5 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              backgroundColor: \"#0f0\",\r\n              color: \"black\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAsBA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}