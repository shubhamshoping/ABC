{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\n\n// import React, { useState } from \"react\";\n// import PhoneInput from \"react-phone-input-2\";\n// import \"react-phone-input-2/lib/style.css\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = phone.length >= 10;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n//         <div>\n//           <PhoneInput\n//             country={\"in\"}\n//             value={phone}\n//             onChange={(phone) => setPhone(phone)}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import PhoneInput from \"react-phone-input-2\";\n// import \"react-phone-input-2/lib/style.css\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = phone.length >= 10;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\n//           )}\n//         </div>\n//         <div>\n//           <PhoneInput\n//             country={\"in\"}\n//             value={phone}\n//             onChange={(phone) => setPhone(phone)}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminResister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const [phoneTouched, setPhoneTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const isPhoneValid = phone.length >= 10;\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    alert(`Form submitted successfully!`);\n    console.log({\n      name,\n      gmail,\n      password,\n      phone\n    });\n    window.location.reload();\n  };\n  const nameChange = e => setName(e.target.value);\n  const gmailChange = e => setGmail(e.target.value);\n  const passwordChange = e => setPassword(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      background: \"linear-gradient(120deg, #3a3d40, #18191a)\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"200px\",\n        height: \"200px\",\n        background: \"linear-gradient(to bottom, #ff7b00, #ff4500)\",\n        borderRadius: \"50%\",\n        top: \"10%\",\n        left: \"15%\",\n        zIndex: 0,\n        filter: \"blur(100px)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"150px\",\n        height: \"150px\",\n        background: \"linear-gradient(to bottom, #ffdd00, #ff7b00)\",\n        borderRadius: \"50%\",\n        bottom: \"15%\",\n        right: \"20%\",\n        zIndex: 0,\n        filter: \"blur(100px)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        zIndex: 1,\n        width: \"350px\",\n        padding: \"30px\",\n        background: \"rgba(255, 255, 255, 0.15)\",\n        borderRadius: \"15px\",\n        backdropFilter: \"blur(10px)\",\n        WebkitBackdropFilter: \"blur(10px)\",\n        border: \"1px solid rgba(255, 255, 255, 0.3)\",\n        boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.5)\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: \"20px\",\n          fontSize: \"24px\",\n          color: \"#ffffff\",\n          letterSpacing: \"2px\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: nameChange,\n          onFocus: () => setNameTouched(true),\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(255, 255, 255, 0.2)\",\n            color: \"#fff\",\n            outline: \"none\",\n            fontSize: \"14px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Enter a valid name (at least 3 characters)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n          country: \"in\",\n          value: phone,\n          onChange: phone => setPhone(phone),\n          onFocus: () => setPhoneTouched(true),\n          inputStyle: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            background: \"rgba(255, 255, 255, 0.2)\",\n            border: \"none\",\n            color: \"#fff\",\n            fontSize: \"14px\"\n          },\n          buttonStyle: {\n            background: \"rgba(255, 255, 255, 0.2)\",\n            border: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), phoneTouched && !isPhoneValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Enter a valid phone number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Gmail\",\n          value: gmail,\n          onChange: gmailChange,\n          onFocus: () => setGmailTouched(true),\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(255, 255, 255, 0.2)\",\n            color: \"#fff\",\n            outline: \"none\",\n            fontSize: \"14px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Enter a valid Gmail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: passwordChange,\n          onFocus: () => setPasswordTouched(true),\n          autoComplete: \"off\",\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(255, 255, 255, 0.2)\",\n            color: \"#fff\",\n            outline: \"none\",\n            fontSize: \"14px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            fontSize: \"12px\"\n          },\n          children: \"Enter a valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid,\n        style: {\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          background: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid ? \"gray\" : \"#4CAF50\",\n          color: \"white\",\n          cursor: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid ? \"not-allowed\" : \"pointer\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n          letterSpacing: \"1px\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminResister, \"T+kegp1StLWImINPj5xdXMvesEE=\");\n_c = AdminResister;\nvar _c;\n$RefreshReg$(_c, \"AdminResister\");","map":{"version":3,"names":["React","useState","PhoneInput","jsxDEV","_jsxDEV","AdminResister","_s","name","setName","gmail","setGmail","password","setPassword","phone","setPhone","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","phoneTouched","setPhoneTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","isPhoneValid","handleSubmit","e","preventDefault","alert","console","log","window","location","reload","nameChange","target","value","gmailChange","passwordChange","style","height","display","justifyContent","alignItems","background","position","overflow","children","width","borderRadius","top","left","zIndex","filter","fileName","_jsxFileName","lineNumber","columnNumber","bottom","right","onSubmit","padding","backdropFilter","WebkitBackdropFilter","border","boxShadow","textAlign","marginBottom","fontSize","color","letterSpacing","type","placeholder","onChange","onFocus","outline","country","inputStyle","buttonStyle","autoComplete","disabled","cursor","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = phone.length >= 10;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <PhoneInput\r\n//             country={\"in\"}\r\n//             value={phone}\r\n//             onChange={(phone) => setPhone(phone)}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import PhoneInput from \"react-phone-input-2\";\r\n// import \"react-phone-input-2/lib/style.css\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = phone.length >= 10;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid name (only letters and spaces, at least 3 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <PhoneInput\r\n//             country={\"in\"}\r\n//             value={phone}\r\n//             onChange={(phone) => setPhone(phone)}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the phone number (at least 10 digits)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Enter a valid Gmail (must include @gmail.com)</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Enter the password (at least 5 characters)</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nexport default function AdminResister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n  const isPhoneValid = phone.length >= 10;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n    alert(`Form submitted successfully!`);\r\n    console.log({ name, gmail, password, phone });\r\n    window.location.reload();\r\n  };\r\n\r\n  const nameChange = (e) => setName(e.target.value);\r\n  const gmailChange = (e) => setGmail(e.target.value);\r\n  const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"linear-gradient(120deg, #3a3d40, #18191a)\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Floating background circles */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"200px\",\r\n          height: \"200px\",\r\n          background: \"linear-gradient(to bottom, #ff7b00, #ff4500)\",\r\n          borderRadius: \"50%\",\r\n          top: \"10%\",\r\n          left: \"15%\",\r\n          zIndex: 0,\r\n          filter: \"blur(100px)\",\r\n        }}\r\n      ></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"150px\",\r\n          height: \"150px\",\r\n          background: \"linear-gradient(to bottom, #ffdd00, #ff7b00)\",\r\n          borderRadius: \"50%\",\r\n          bottom: \"15%\",\r\n          right: \"20%\",\r\n          zIndex: 0,\r\n          filter: \"blur(100px)\",\r\n        }}\r\n      ></div>\r\n\r\n      {/* Glass effect container */}\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        style={{\r\n          zIndex: 1,\r\n          width: \"350px\",\r\n          padding: \"30px\",\r\n          background: \"rgba(255, 255, 255, 0.15)\",\r\n          borderRadius: \"15px\",\r\n          backdropFilter: \"blur(10px)\",\r\n          WebkitBackdropFilter: \"blur(10px)\",\r\n          border: \"1px solid rgba(255, 255, 255, 0.3)\",\r\n          boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.5)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            marginBottom: \"20px\",\r\n            fontSize: \"24px\",\r\n            color: \"#ffffff\",\r\n            letterSpacing: \"2px\",\r\n          }}\r\n        >\r\n          ADMIN REGISTER\r\n        </h1>\r\n\r\n        {/* Name Field */}\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={nameChange}\r\n            onFocus={() => setNameTouched(true)}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(255, 255, 255, 0.2)\",\r\n              color: \"#fff\",\r\n              outline: \"none\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          />\r\n          {nameTouched && !isNameValid && (\r\n            <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              Enter a valid name (at least 3 characters)\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Phone Field */}\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <PhoneInput\r\n            country={\"in\"}\r\n            value={phone}\r\n            onChange={(phone) => setPhone(phone)}\r\n            onFocus={() => setPhoneTouched(true)}\r\n            inputStyle={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              background: \"rgba(255, 255, 255, 0.2)\",\r\n              border: \"none\",\r\n              color: \"#fff\",\r\n              fontSize: \"14px\",\r\n            }}\r\n            buttonStyle={{\r\n              background: \"rgba(255, 255, 255, 0.2)\",\r\n              border: \"none\",\r\n            }}\r\n          />\r\n          {phoneTouched && !isPhoneValid && (\r\n            <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              Enter a valid phone number\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Gmail Field */}\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your Gmail\"\r\n            value={gmail}\r\n            onChange={gmailChange}\r\n            onFocus={() => setGmailTouched(true)}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(255, 255, 255, 0.2)\",\r\n              color: \"#fff\",\r\n              outline: \"none\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          />\r\n          {gmailTouched && !isGmailValid && (\r\n            <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              Enter a valid Gmail\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Password Field */}\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={passwordChange}\r\n            onFocus={() => setPasswordTouched(true)}\r\n            autoComplete=\"off\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(255, 255, 255, 0.2)\",\r\n              color: \"#fff\",\r\n              outline: \"none\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          />\r\n          {passwordTouched && !isPasswordValid && (\r\n            <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              Enter a valid password\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"submit\"\r\n          disabled={\r\n            !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n          }\r\n          style={{\r\n            padding: \"10px\",\r\n            borderRadius: \"5px\",\r\n            border: \"none\",\r\n            background:\r\n              !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n                ? \"gray\"\r\n                : \"#4CAF50\",\r\n            color: \"white\",\r\n            cursor:\r\n              !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n                ? \"not-allowed\"\r\n                : \"pointer\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"bold\",\r\n            letterSpacing: \"1px\",\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}