{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Admindelete.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admindelete() {\n  _s();\n  const [email, setEmail] = useState(\"\"); // State to store the Gmail to be deleted\n  const handleDelete = async () => {\n    if (!email.includes(\"@\")) {\n      alert(\"Please provide a valid email address.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/delete-admin\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        }) // Send the email to the server\n      });\n      if (response.ok) {\n        alert(\"Admin account deleted successfully!\");\n        setEmail(\"\"); // Reset the input field\n      } else {\n        alert(\"Failed to delete the admin account. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting admin account:\", error);\n      alert(\"An error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter admin Gmail to delete\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      style: {\n        marginRight: \"10px\",\n        padding: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Admin Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Admindelete, \"Pe1zWWKcsJK82m3WyFiCTurRPxo=\");\n_c = Admindelete;\nvar _c;\n$RefreshReg$(_c, \"Admindelete\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Admindelete","_s","email","setEmail","handleDelete","includes","alert","response","fetch","method","headers","body","JSON","stringify","ok","error","console","children","type","placeholder","value","onChange","e","target","style","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Admindelete.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Admindelete() {\r\n  const [email, setEmail] = useState(\"\"); // State to store the Gmail to be deleted\r\n  const handleDelete = async () => {\r\n    if (!email.includes(\"@\")) {\r\n      alert(\"Please provide a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/delete-admin\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }), // Send the email to the server\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Admin account deleted successfully!\");\r\n        setEmail(\"\"); // Reset the input field\r\n      } else {\r\n        alert(\"Failed to delete the admin account. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting admin account:\", error);\r\n      alert(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter admin Gmail to delete\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        style={{ marginRight: \"10px\", padding: \"5px\" }}\r\n      />\r\n      <button onClick={handleDelete}>Delete Admin Account</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACxBC,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAM,CAAC,CAAC,CAAE;MACnC,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;QACfR,KAAK,CAAC,qCAAqC,CAAC;QAC5CH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM;QACLG,KAAK,CAAC,uDAAuD,CAAC;MAChE;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDT,KAAK,CAAC,4CAA4C,CAAC;IACrD;EACF,CAAC;EAED,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,6BAA6B;MACzCC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,KAAK,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF/B,OAAA;MAAQgC,OAAO,EAAE3B,YAAa;MAAAa,QAAA,EAAC;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAAC7B,EAAA,CAzCuBD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}