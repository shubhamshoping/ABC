{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerresister.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// export default function Customerresister() {\n//  const [name, setName] = useState(\"\");\n//  const [gmail, setGmail] = useState(\"\");\n//  const [password, setPassword] = useState(\"\");\n//  const [nameTouched, setNameTouched] = useState(false);\n//  const [gmailTouched, setGmailTouched] = useState(false);\n//  const [passwordTouched, setPasswordTouched] = useState(false);\n//  const isNameValid = name.length >= 3;\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\n//  const isPasswordValid = password.length > 6;\n//  const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid) {\n//     alert(\"name is error\");\n//     return;\n//     }\n//     if (!isGmailValid) {\n//     alert(\"gmail is error\");\n//     return;\n//     }\n//     if (!isPasswordValid) {\n//     alert(\"password is error\");\n//     return;\n//     }\n//     alert(`${name} ${gmail} ${password}`);\n//  };\n//  const nameChange = (e) => {\n//  setName(e.target.value);\n//  };\n//  const gmailChange = (e) => {\n//  setGmail(e.target.value);\n//  };\n//  const passwordChange = (e) => {\n//  setPassword(e.target.value);\n//  };\n//  return (\n//     <div>\n//     <form onSubmit={handleSubmit}>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={name}\n//     onChange={nameChange}\n//     onFocus={() => setNameTouched(true)}\n//     />\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={gmail}\n//     onChange={gmailChange}\n//     onFocus={() => setGmailTouched(true)}\n//     />\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={password}\n//     onChange={passwordChange}\n//     onFocus={() => setPasswordTouched(true)}\n//     />\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\n// }}>password is error</span>}\n//  </div>\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\n// !isPasswordValid}>\n//  submit\n//  </button>\n//  </form>\n//  </div>\n//  );\n// }\n\n// ........................................................original code......................................\n\n// import React, { useState } from \"react\";\n\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function Customerresister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//  const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid) {\n//       alert(\"Name is invalid\");\n//       return;\n//     }\n//     if (!isGmailValid) {\n//       alert(\"Gmail is invalid\");\n//       return;\n//     }\n//     if (!isPasswordValid) {\n//       alert(\"Password is invalid\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customer-resister\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ name, gmail, password }),\n//       });\n\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert(\"Customer registered successfully!\");\n//         navigate(\"/customerlogin\"); \n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error submitting the form:\", error);\n//       alert(\"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Customer RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Name is invalid</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={(e) => setGmail(e.target.value)}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Password is invalid</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customerresister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const navigate = useNavigate();\n  const isNameValid = name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid) {\n      alert(\"Name is invalid\");\n      return;\n    }\n    if (!isGmailValid) {\n      alert(\"Gmail is invalid\");\n      return;\n    }\n    if (!isPasswordValid) {\n      alert(\"Password is invalid\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/customer-resister\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          gmail,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(\"Customer registered successfully!\");\n        navigate(\"/customerlogin\");\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 backdrop-blur-md p-10 rounded-2xl shadow-2xl w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-3xl font-bold text-white mb-6\",\n        children: \"Customer RESISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            onFocus: () => setNameTouched(true),\n            placeholder: \"Enter name\",\n            className: \"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"Name is invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            placeholder: \"Enter gmail\",\n            className: \"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"Gmail is invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onFocus: () => setPasswordTouched(true),\n            placeholder: \"Enter password\",\n            className: \"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"Password is invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n          className: \"w-full p-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-500\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(Customerresister, \"MVdD9dNCKPo9z+JXol3/RV+X2c8=\", false, function () {\n  return [useNavigate];\n});\n_c = Customerresister;\nvar _c;\n$RefreshReg$(_c, \"Customerresister\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Customerresister","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","navigate","isNameValid","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","onFocus","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerresister.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// export default function Customerresister() {\r\n//  const [name, setName] = useState(\"\");\r\n//  const [gmail, setGmail] = useState(\"\");\r\n//  const [password, setPassword] = useState(\"\");\r\n//  const [nameTouched, setNameTouched] = useState(false);\r\n//  const [gmailTouched, setGmailTouched] = useState(false);\r\n//  const [passwordTouched, setPasswordTouched] = useState(false);\r\n//  const isNameValid = name.length >= 3;\r\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//  const isPasswordValid = password.length > 6;\r\n//  const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid) {\r\n//     alert(\"name is error\");\r\n//     return;\r\n//     }\r\n//     if (!isGmailValid) {\r\n//     alert(\"gmail is error\");\r\n//     return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//     alert(\"password is error\");\r\n//     return;\r\n//     }\r\n//     alert(`${name} ${gmail} ${password}`);\r\n//  };\r\n//  const nameChange = (e) => {\r\n//  setName(e.target.value);\r\n//  };\r\n//  const gmailChange = (e) => {\r\n//  setGmail(e.target.value);\r\n//  };\r\n//  const passwordChange = (e) => {\r\n//  setPassword(e.target.value);\r\n//  };\r\n//  return (\r\n//     <div>\r\n//     <form onSubmit={handleSubmit}>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={name}\r\n//     onChange={nameChange}\r\n//     onFocus={() => setNameTouched(true)}\r\n//     />\r\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={gmail}\r\n//     onChange={gmailChange}\r\n//     onFocus={() => setGmailTouched(true)}\r\n//     />\r\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={password}\r\n//     onChange={passwordChange}\r\n//     onFocus={() => setPasswordTouched(true)}\r\n//     />\r\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\r\n// }}>password is error</span>}\r\n//  </div>\r\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\r\n// !isPasswordValid}>\r\n//  submit\r\n//  </button>\r\n//  </form>\r\n//  </div>\r\n//  );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ........................................................original code......................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export default function Customerresister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n\r\n//  const navigate = useNavigate();\r\n\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid) {\r\n//       alert(\"Name is invalid\");\r\n//       return;\r\n//     }\r\n//     if (!isGmailValid) {\r\n//       alert(\"Gmail is invalid\");\r\n//       return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//       alert(\"Password is invalid\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customer-resister\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ name, gmail, password }),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n//       if (response.ok) {\r\n//         alert(\"Customer registered successfully!\");\r\n//         navigate(\"/customerlogin\"); \r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting the form:\", error);\r\n//       alert(\"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Customer RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Name is invalid</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={(e) => setGmail(e.target.value)}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail is invalid</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Password is invalid</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Customerresister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isNameValid = name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid) {\r\n      alert(\"Name is invalid\");\r\n      return;\r\n    }\r\n    if (!isGmailValid) {\r\n      alert(\"Gmail is invalid\");\r\n      return;\r\n    }\r\n    if (!isPasswordValid) {\r\n      alert(\"Password is invalid\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/customer-resister\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, gmail, password }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Customer registered successfully!\");\r\n        navigate(\"/customerlogin\");\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting the form:\", error);\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\">\r\n      <div className=\"bg-white bg-opacity-20 backdrop-blur-md p-10 rounded-2xl shadow-2xl w-full max-w-md\">\r\n        <h1 className=\"text-center text-3xl font-bold text-white mb-6\">Customer RESISTER</h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={() => setNameTouched(true)}\r\n              placeholder=\"Enter name\"\r\n              className=\"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span className=\"text-red-500\">Name is invalid</span>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              placeholder=\"Enter gmail\"\r\n              className=\"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span className=\"text-red-500\">Gmail is invalid</span>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              placeholder=\"Enter password\"\r\n              className=\"w-full p-3 bg-white bg-opacity-30 placeholder-gray-200 text-white rounded-lg focus:outline-none\"\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span className=\"text-red-500\">Password is invalid</span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n            className=\"w-full p-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-500\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;;AAUA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAsBA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}