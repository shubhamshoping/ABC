{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerpassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function Customerpassword() {\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isGmailValid) {\n//       alert(\"gmail is error\");\n//       return;\n//     }\n//     if (!isPasswordValid) {\n//       alert(\"password is error\");\n//       return;\n//     }\n//     alert(`${gmail} ${password}`);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Customer PASSWORD</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: 'red' }}>gmail is error</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: 'red' }}>password is error</span>\n//           )}\n//         </div>\n//         <button type=\"submit\" disabled={!isGmailValid || !isPasswordValid}>\n//           submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// Customerpassword Component with Fetch PUT Method\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customerpassword() {\n  _s();\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isGmailValid) {\n      alert(\"Gmail is invalid.\");\n      return;\n    }\n    if (!isPasswordValid) {\n      alert(\"Password must be at least 7 characters.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/CustomerResister\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gmail,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message);\n      } else {\n        alert(result.error);\n      }\n    } catch (error) {\n      alert(\"An error occurred: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Password Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Gmail\",\n          value: gmail,\n          onChange: e => setGmail(e.target.value),\n          onFocus: () => setGmailTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Gmail is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onFocus: () => setPasswordTouched(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Password must be at least 7 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isGmailValid || !isPasswordValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(Customerpassword, \"JH56gwXSMDEOGomqI+4K3D+2LAQ=\");\n_c = Customerpassword;\nvar _c;\n$RefreshReg$(_c, \"Customerpassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Customerpassword","_s","gmail","setGmail","password","setPassword","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","isGmailValid","includes","isPasswordValid","length","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onFocus","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerpassword.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export default function Customerpassword() {\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isGmailValid) {\r\n//       alert(\"gmail is error\");\r\n//       return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//       alert(\"password is error\");\r\n//       return;\r\n//     }\r\n//     alert(`${gmail} ${password}`);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1>Customer PASSWORD</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: 'red' }}>gmail is error</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: 'red' }}>password is error</span>\r\n//           )}\r\n//         </div>\r\n//         <button type=\"submit\" disabled={!isGmailValid || !isPasswordValid}>\r\n//           submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Customerpassword Component with Fetch PUT Method\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Customerpassword() {\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isGmailValid) {\r\n      alert(\"Gmail is invalid.\");\r\n      return;\r\n    }\r\n    if (!isPasswordValid) {\r\n      alert(\"Password must be at least 7 characters.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/CustomerResister\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ gmail, password }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        alert(result.message);\r\n      } else {\r\n        alert(result.error);\r\n      }\r\n    } catch (error) {\r\n      alert(\"An error occurred: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Customer Password Update</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Gmail\"\r\n            value={gmail}\r\n            onChange={(e) => setGmail(e.target.value)}\r\n            onFocus={() => setGmailTouched(true)}\r\n          />\r\n          {gmailTouched && !isGmailValid && (\r\n            <span style={{ color: \"red\" }}>Gmail is invalid</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter New Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onFocus={() => setPasswordTouched(true)}\r\n          />\r\n          {passwordTouched && !isPasswordValid && (\r\n            <span style={{ color: \"red\" }}>Password must be at least 7 characters</span>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" disabled={!isGmailValid || !isPasswordValid}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}