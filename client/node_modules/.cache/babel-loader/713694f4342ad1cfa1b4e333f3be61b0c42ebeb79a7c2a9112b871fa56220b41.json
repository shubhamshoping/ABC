{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// .......... correct code .........\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]); // New state for table data\n\n//   useEffect(() => {\n//     // Fetch the next productId from the server when the component mounts\n//     const fetchProductId = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(response.data.productId);\n//       } catch (error) {\n//         console.error(\"Error fetching product ID:\", error);\n//         alert(\"Failed to fetch product ID\");\n//       }\n//     };\n\n//     fetchProductId();\n\n//     // Fetch existing products from the database\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(response.data); // Assuming the server returns an array of products\n//       } catch (error) {\n//         console.error(\"Error fetching products:\", error);\n//         alert(\"Failed to fetch products\");\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\n\n//       // Fetch updated product list\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\n//       setProducts(updatedProducts.data);\n//     } catch (error) {\n//       console.error(\"Error uploading image:\", error);\n//       alert(\"Failed to upload image\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* Existing form code */}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productId}\n//             readOnly\n//             placeholder=\"Product ID\"\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             name=\"image\"\n//             onChange={(e) => handleChange(e, setImage)}\n//           />\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={price}\n//             onChange={(e) => handleChange(e, setPrice)}\n//             placeholder=\"Enter price (number or text)\"\n//           />\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={productName}\n//             onChange={(e) => handleChange(e, setProductName)}\n//             placeholder=\"Enter product name\"\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       {/* Add some spacing */}\n//       <div style={{ marginTop: \"50px\" }}>\n//         <h2>Product List</h2>\n//         {products.length === 0 ? (\n//           <p>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//             <thead>\n//               <tr>\n//                 <th>Product ID</th>\n//                 <th>Product Name</th>\n//                 <th>Price</th>\n//                 <th>Image</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td>{product.productId}</td>\n//                   <td>{product.productName}</td>\n//                   <td>{product.price}</td>\n//                   <td>\n//                     <img\n//                       src={product.imageUrl}\n//                       alt={product.productName}\n//                       style={{ width: \"100px\", height: \"100px\" }}\n//                     />\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/products\");\n        setProducts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        alert(\"Failed to fetch products\");\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleEdit = product => {\n    setEditingId(product.productId);\n    setProductName(product.productName);\n    setPrice(product.price);\n    setImage(product.imageUrl);\n  };\n  const handleUpdate = async id => {\n    const formData = new FormData();\n    formData.append(\"productName\", productName);\n    formData.append(\"price\", price);\n    if (image && image instanceof File) {\n      formData.append(\"image\", image);\n    }\n    try {\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Product updated successfully!\");\n\n      // Refresh the product list\n      const response = await axios.get(\"http://localhost:5000/products\");\n      setProducts(response.data);\n      setEditingId(null); // Exit edit mode\n    } catch (error) {\n      console.error(\"Error updating product:\", error);\n      alert(\"Failed to update product\");\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/products/${id}`);\n      alert(\"Product deleted successfully!\");\n\n      // Refresh the product list\n      const response = await axios.get(\"http://localhost:5000/products\");\n      setProducts(response.data);\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n      alert(\"Failed to delete product\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      cellSpacing: \"0\",\n      style: {\n        width: \"100%\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: productName,\n              onChange: e => setProductName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 21\n            }, this) : product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this) : product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setImage(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.imageUrl,\n              alt: product.productName,\n              style: {\n                width: \"100px\",\n                height: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(product.productId),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(product),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(product.productId),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this)]\n        }, product.productId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"YXJxEbIHsiTk4yGECm3IMMhyeIk=\");\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Adminhome","_s","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editingId","setEditingId","fetchProducts","response","get","data","error","console","alert","handleEdit","product","imageUrl","handleUpdate","id","formData","FormData","append","File","put","headers","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","cellSpacing","style","width","textAlign","map","type","value","onChange","e","target","accept","files","src","alt","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......... correct code .........\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]); // New state for table data\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the next productId from the server when the component mounts\r\n//     const fetchProductId = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(response.data.productId);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching product ID:\", error);\r\n//         alert(\"Failed to fetch product ID\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProductId();\r\n\r\n//     // Fetch existing products from the database\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(response.data); // Assuming the server returns an array of products\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching products:\", error);\r\n//         alert(\"Failed to fetch products\");\r\n//       }\r\n//     };\r\n\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(`Product ID: ${response.data.productId}\\nImage: ${response.data.imageUrl}\\nPrice: ${price}\\nProduct Name: ${productName}`);\r\n\r\n//       // Fetch updated product list\r\n//       const updatedProducts = await axios.get(\"http://localhost:5000/products\");\r\n//       setProducts(updatedProducts.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading image:\", error);\r\n//       alert(\"Failed to upload image\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Existing form code */}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productId}\r\n//             readOnly\r\n//             placeholder=\"Product ID\"\r\n//             style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\" }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             name=\"image\"\r\n//             onChange={(e) => handleChange(e, setImage)}\r\n//           />\r\n//           {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={price}\r\n//             onChange={(e) => handleChange(e, setPrice)}\r\n//             placeholder=\"Enter price (number or text)\"\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={productName}\r\n//             onChange={(e) => handleChange(e, setProductName)}\r\n//             placeholder=\"Enter product name\"\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       {/* Add some spacing */}\r\n//       <div style={{ marginTop: \"50px\" }}>\r\n//         <h2>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Product ID</th>\r\n//                 <th>Product Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Image</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td>{product.productId}</td>\r\n//                   <td>{product.productName}</td>\r\n//                   <td>{product.price}</td>\r\n//                   <td>\r\n//                     <img\r\n//                       src={product.imageUrl}\r\n//                       alt={product.productName}\r\n//                       style={{ width: \"100px\", height: \"100px\" }}\r\n//                     />\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Adminhome() {\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/products\");\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n        alert(\"Failed to fetch products\");\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleEdit = (product) => {\r\n    setEditingId(product.productId);\r\n    setProductName(product.productName);\r\n    setPrice(product.price);\r\n    setImage(product.imageUrl);\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", productName);\r\n    formData.append(\"price\", price);\r\n    if (image && image instanceof File) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Product updated successfully!\");\r\n\r\n      // Refresh the product list\r\n      const response = await axios.get(\"http://localhost:5000/products\");\r\n      setProducts(response.data);\r\n      setEditingId(null); // Exit edit mode\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/products/${id}`);\r\n      alert(\"Product deleted successfully!\");\r\n\r\n      // Refresh the product list\r\n      const response = await axios.get(\"http://localhost:5000/products\");\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Product List</h2>\r\n      {products.length === 0 ? (\r\n        <p>No products available</p>\r\n      ) : (\r\n        <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Product ID</th>\r\n              <th>Product Name</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.productId}>\r\n                <td>{product.productId}</td>\r\n                <td>\r\n                  {editingId === product.productId ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={productName}\r\n                      onChange={(e) => setProductName(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    product.productName\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === product.productId ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={price}\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    product.price\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === product.productId ? (\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={product.imageUrl}\r\n                      alt={product.productName}\r\n                      style={{ width: \"100px\", height: \"100px\" }}\r\n                    />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === product.productId ? (\r\n                    <button onClick={() => handleUpdate(product.productId)}>Save</button>\r\n                  ) : (\r\n                    <button onClick={() => handleEdit(product)}>Edit</button>\r\n                  )}\r\n                  <button onClick={() => handleDelete(product.productId)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}