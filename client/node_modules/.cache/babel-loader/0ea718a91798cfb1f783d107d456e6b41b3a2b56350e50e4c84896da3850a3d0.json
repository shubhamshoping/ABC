{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Adminhome.js\",\n  _s = $RefreshSig$();\n// ..............................original code.........................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// .......................... copy of above original code.......................................................\n\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\n// import axios from \"axios\"; // Import axios\n\n// export default function Adminhome() {\n//   const [image, setImage] = useState(null);\n//   const [price, setPrice] = useState(\"\");\n//   const [productName, setProductName] = useState(\"\");\n//   const [productId, setProductId] = useState(\"\");\n//   const [products, setProducts] = useState([]);\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n//   // Fetch product data and the next productId on component mount\n//   useEffect(() => {\n//     const fetchInitialData = async () => {\n//       try {\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\n//         setProductId(productIdResponse.data.productId);\n\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\n//         setProducts(productsResponse.data);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//         alert(\"Failed to fetch initial data\");\n//       }\n//     };\n\n//     fetchInitialData();\n//   }, []);\n\n//   // Handle form input changes\n//   const handleChange = (e, setter) =>\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n//   // Handle form submission to add a new product\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!image || !price || !productName) {\n//       return alert(\"Please fill all fields.\");\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"image\", e.target.image.files[0]);\n//     formData.append(\"price\", price);\n//     formData.append(\"productName\", productName);\n\n//     try {\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product added successfully!\");\n//       window.location.reload();  // Auto refresh after successful submit\n\n//       // Reset form fields\n//       setImage(null);\n//       setPrice(\"\");\n//       setProductName(\"\");\n//     } catch (error) {\n//       console.error(\"Error adding product:\", error);\n//       alert(\"Failed to add product\");\n//     }\n//   };\n\n//   // Handle edit and update of a product\n//   const handleEdit = (product) => {\n//     setEditingId(product.productId);\n//     setProductName(product.productName);\n//     setPrice(product.price);\n//     setImage(product.imageUrl);\n//   };\n\n//   const handleUpdate = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"productName\", productName);\n//     formData.append(\"price\", price);\n//     if (image && image instanceof File) {\n//       formData.append(\"image\", image);\n//     }\n\n//     try {\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Product updated successfully!\");\n//       window.location.reload();  // Auto refresh after successful update\n\n//       setEditingId(null); // Exit edit mode\n//     } catch (error) {\n//       console.error(\"Error updating product:\", error);\n//       alert(\"Failed to update product\");\n//     }\n//   };\n\n//   // Handle deletion of a product\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/products/${id}`);\n//       alert(\"Product and image deleted successfully!\");\n//       window.location.reload();  // Auto refresh after successful delete\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//       alert(\"Failed to delete product\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\n//       {/* Product Form */}\n//       <div style={{ flex: 1 }}>\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\n\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productId}\n//               readOnly\n//               placeholder=\"Product ID\"\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               name=\"image\"\n//               onChange={(e) => handleChange(e, setImage)}\n//               disabled={editingId !== null} // Disable image input if editing\n//               style={{ padding: \"10px\", width: \"100%\" }}\n//             />\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={price}\n//               onChange={(e) => handleChange(e, setPrice)}\n//               placeholder=\"Enter price\"\n//               disabled={editingId !== null} // Disable price input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={productName}\n//               onChange={(e) => handleChange(e, setProductName)}\n//               placeholder=\"Enter product name\"\n//               disabled={editingId !== null} // Disable product name input if editing\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\n//             />\n//           </div>\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\n//         {products.length === 0 ? (\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\n//         ) : (\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n//             <thead>\n//               <tr>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product.productId}>\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={productName}\n//                         onChange={(e) => setProductName(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.productName\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"text\"\n//                         value={price}\n//                         onChange={(e) => setPrice(e.target.value)}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       product.price\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <input\n//                         type=\"file\"\n//                         accept=\"image/*\"\n//                         onChange={(e) => setImage(e.target.files[0])}\n//                         style={{ padding: \"5px\", width: \"100%\" }}\n//                       />\n//                     ) : (\n//                       <img\n//                         src={product.imageUrl}\n//                         alt={product.productName}\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//                       />\n//                     )}\n//                   </td>\n//                   <td style={{ padding: \"10px\" }}>\n//                     {editingId === product.productId ? (\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Save\n//                       </button>\n//                     ) : (\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\n//                         Edit\n//                       </button>\n//                     )}\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\n//                       Delete\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// ....................................... testing code.................................................................\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminhome() {\n  _s();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [price, setPrice] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\n\n  // Check for authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    if (!token) {\n      navigate('/adminlogin');\n    }\n  }, [navigate]);\n\n  // Fetch product data and the next productId on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const token = localStorage.getItem('adminToken');\n        const headers = {\n          Authorization: `Bearer ${token}`\n        };\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\", {\n          headers\n        });\n        setProductId(productIdResponse.data.productId);\n        const productsResponse = await axios.get(\"http://localhost:5000/products\", {\n          headers\n        });\n        setProducts(productsResponse.data);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching data:\", error);\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n          navigate('/adminlogin');\n        }\n        alert(\"Failed to fetch initial data\");\n      }\n    };\n    fetchInitialData();\n  }, [navigate]);\n\n  // Handle form input changes\n  const handleChange = (e, setter) => setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\n\n  // Handle form submission to add a new product\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !price || !productName) {\n      return alert(\"Please fill all fields.\");\n    }\n    const formData = new FormData();\n    formData.append(\"image\", e.target.image.files[0]);\n    formData.append(\"price\", price);\n    formData.append(\"productName\", productName);\n    try {\n      const token = localStorage.getItem('adminToken');\n      await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Product added successfully!\");\n      window.location.reload(); // Auto refresh after successful submit\n\n      // Reset form fields\n      setImage(null);\n      setPrice(\"\");\n      setProductName(\"\");\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error adding product:\", error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        navigate('/adminlogin');\n      }\n      alert(\"Failed to add product\");\n    }\n  };\n\n  // Handle edit and update of a product\n  const handleEdit = product => {\n    setEditingId(product.productId);\n    setProductName(product.productName);\n    setPrice(product.price);\n    setImage(product.imageUrl);\n  };\n  const handleUpdate = async id => {\n    const formData = new FormData();\n    formData.append(\"productName\", productName);\n    formData.append(\"price\", price);\n    if (image && image instanceof File) {\n      formData.append(\"image\", image);\n    }\n    try {\n      const token = localStorage.getItem('adminToken');\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      await axios.put(`http://localhost:5000/products/${id}`, formData, {\n        headers\n      });\n      alert(\"Product updated successfully!\");\n      window.location.reload(); // Auto refresh after successful update\n\n      setEditingId(null); // Exit edit mode\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error updating product:\", error);\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        navigate('/adminlogin');\n      }\n      alert(\"Failed to update product\");\n    }\n  };\n\n  // Handle deletion of a product\n  const handleDelete = async id => {\n    try {\n      const token = localStorage.getItem('adminToken');\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      await axios.delete(`http://localhost:5000/products/${id}`, {\n        headers\n      });\n      alert(\"Product and image deleted successfully!\");\n      window.location.reload(); // Auto refresh after successful delete\n    } catch (error) {\n      var _error$response4;\n      console.error(\"Error deleting product:\", error);\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        navigate('/adminlogin');\n      }\n      alert(\"Failed to delete product\");\n    }\n  };\n\n  // Add logout handler\n  const handleLogout = () => {\n    localStorage.removeItem('adminToken');\n    navigate('/adminlogin');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"20px\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#333\"\n        },\n        children: \"ADMIN HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          backgroundColor: \"#dc3545\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          fontSize: \"16px\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            backgroundColor: \"#fff\",\n            padding: \"20px\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: productId,\n              readOnly: true,\n              placeholder: \"Product ID\",\n              style: {\n                marginBottom: \"10px\",\n                cursor: \"not-allowed\",\n                backgroundColor: \"#f0f0f0\",\n                width: \"100%\",\n                padding: \"10px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              name: \"image\",\n              onChange: e => handleChange(e, setImage),\n              disabled: editingId !== null // Disable image input if editing\n              ,\n              style: {\n                padding: \"10px\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image || \"/placeholder.svg\",\n              alt: \"Selected\",\n              style: {\n                width: 100,\n                height: 100,\n                marginTop: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: price,\n              onChange: e => handleChange(e, setPrice),\n              placeholder: \"Enter price\",\n              disabled: editingId !== null // Disable price input if editing\n              ,\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                marginTop: \"5px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: productName,\n              onChange: e => handleChange(e, setProductName),\n              placeholder: \"Enter product name\",\n              disabled: editingId !== null // Disable product name input if editing\n              ,\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                marginTop: \"5px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: editingId !== null,\n            style: {\n              backgroundColor: \"#4CAF50\",\n              color: \"white\",\n              padding: \"10px 20px\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              fontSize: \"16px\",\n              cursor: \"pointer\",\n              width: \"100%\",\n              marginTop: \"10px\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 2,\n          overflowY: \"auto\",\n          maxHeight: \"600px\",\n          backgroundColor: \"rgba(135, 206, 250, 0.7)\",\n          padding: \"20px\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Product List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#333\"\n          },\n          children: \"No products available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          style: {\n            width: \"100%\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Product ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Product Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: \"left\",\n                  backgroundColor: \"#f2f2f2\",\n                  color: \"#333\",\n                  padding: \"10px\"\n                },\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: product.productId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: productName,\n                  onChange: e => setProductName(e.target.value),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 25\n                }, this) : product.productName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 25\n                }, this) : product.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: e => setImage(e.target.files[0]),\n                  style: {\n                    padding: \"5px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: product.imageUrl || \"/placeholder.svg\",\n                  alt: product.productName,\n                  style: {\n                    width: \"100px\",\n                    height: \"100px\",\n                    objectFit: \"cover\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"10px\"\n                },\n                children: [editingId === product.productId ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdate(product.productId),\n                  style: {\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\"\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(product),\n                  style: {\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\"\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(product.productId),\n                  style: {\n                    backgroundColor: \"#ff6347\",\n                    color: \"white\",\n                    padding: \"5px 10px\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    cursor: \"pointer\",\n                    fontSize: \"14px\",\n                    marginLeft: \"5px\"\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 21\n              }, this)]\n            }, product.productId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 664,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminhome, \"XnA5L5WBeB0Y0KWTdTGxNjGVlas=\", false, function () {\n  return [useNavigate];\n});\n_c = Adminhome;\nvar _c;\n$RefreshReg$(_c, \"Adminhome\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Adminhome","_s","navigate","image","setImage","price","setPrice","productName","setProductName","productId","setProductId","products","setProducts","editingId","setEditingId","token","localStorage","getItem","fetchInitialData","headers","Authorization","productIdResponse","get","data","productsResponse","error","_error$response","console","response","status","alert","handleChange","e","setter","target","type","URL","createObjectURL","files","value","handleSubmit","preventDefault","formData","FormData","append","post","window","location","reload","_error$response2","handleEdit","product","imageUrl","handleUpdate","id","File","put","_error$response3","handleDelete","delete","_error$response4","handleLogout","removeItem","style","display","flexDirection","gap","padding","children","justifyContent","alignItems","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","border","borderRadius","cursor","fontSize","flex","onSubmit","boxShadow","readOnly","placeholder","marginBottom","width","accept","name","onChange","disabled","src","alt","height","marginTop","overflowY","maxHeight","textAlign","length","cellPadding","cellSpacing","borderCollapse","map","objectFit","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Adminhome.js"],"sourcesContent":["\r\n\r\n\r\n// ..............................original code.........................................................\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......................... copy of above original code.......................................................\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\"; // Import React, useState, and useEffect\r\n// import axios from \"axios\"; // Import axios\r\n\r\n// export default function Adminhome() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [productName, setProductName] = useState(\"\");\r\n//   const [productId, setProductId] = useState(\"\");\r\n//   const [products, setProducts] = useState([]);\r\n//   const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n//   // Fetch product data and the next productId on component mount\r\n//   useEffect(() => {\r\n//     const fetchInitialData = async () => {\r\n//       try {\r\n//         const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\");\r\n//         setProductId(productIdResponse.data.productId);\r\n\r\n//         const productsResponse = await axios.get(\"http://localhost:5000/products\");\r\n//         setProducts(productsResponse.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         alert(\"Failed to fetch initial data\");\r\n//       }\r\n//     };\r\n\r\n//     fetchInitialData();\r\n//   }, []);\r\n\r\n//   // Handle form input changes\r\n//   const handleChange = (e, setter) =>\r\n//     setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n//   // Handle form submission to add a new product\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!image || !price || !productName) {\r\n//       return alert(\"Please fill all fields.\");\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", e.target.image.files[0]);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"productName\", productName);\r\n\r\n//     try {\r\n//       await axios.post(\"http://localhost:5000/upload\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product added successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful submit\r\n\r\n//       // Reset form fields\r\n//       setImage(null);\r\n//       setPrice(\"\");\r\n//       setProductName(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error adding product:\", error);\r\n//       alert(\"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle edit and update of a product\r\n//   const handleEdit = (product) => {\r\n//     setEditingId(product.productId);\r\n//     setProductName(product.productName);\r\n//     setPrice(product.price);\r\n//     setImage(product.imageUrl);\r\n//   };\r\n\r\n//   const handleUpdate = async (id) => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"productName\", productName);\r\n//     formData.append(\"price\", price);\r\n//     if (image && image instanceof File) {\r\n//       formData.append(\"image\", image);\r\n//     }\r\n\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/products/${id}`, formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Product updated successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful update\r\n\r\n//       setEditingId(null); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error(\"Error updating product:\", error);\r\n//       alert(\"Failed to update product\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle deletion of a product\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/products/${id}`);\r\n//       alert(\"Product and image deleted successfully!\");\r\n//       window.location.reload();  // Auto refresh after successful delete\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting product:\", error);\r\n//       alert(\"Failed to delete product\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\", padding: \"20px\" }}>\r\n//       {/* Product Form */}\r\n//       <div style={{ flex: 1 }}>\r\n//         <h1 style={{ color: \"#333\", textAlign: \"center\" }}>ADMIN HOME</h1>\r\n\r\n//         <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productId}\r\n//               readOnly\r\n//               placeholder=\"Product ID\"\r\n//               style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               name=\"image\"\r\n//               onChange={(e) => handleChange(e, setImage)}\r\n//               disabled={editingId !== null} // Disable image input if editing\r\n//               style={{ padding: \"10px\", width: \"100%\" }}\r\n//             />\r\n//             {image && <img src={image} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={price}\r\n//               onChange={(e) => handleChange(e, setPrice)}\r\n//               placeholder=\"Enter price\"\r\n//               disabled={editingId !== null} // Disable price input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={productName}\r\n//               onChange={(e) => handleChange(e, setProductName)}\r\n//               placeholder=\"Enter product name\"\r\n//               disabled={editingId !== null} // Disable product name input if editing\r\n//               style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Product Table */}\r\n//       <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n//         <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n//         {products.length === 0 ? (\r\n//           <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n//         ) : (\r\n//           <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n//                 <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product.productId}>\r\n//                   <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={productName}\r\n//                         onChange={(e) => setProductName(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.productName\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={price}\r\n//                         onChange={(e) => setPrice(e.target.value)}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       product.price\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <input\r\n//                         type=\"file\"\r\n//                         accept=\"image/*\"\r\n//                         onChange={(e) => setImage(e.target.files[0])}\r\n//                         style={{ padding: \"5px\", width: \"100%\" }}\r\n//                       />\r\n//                     ) : (\r\n//                       <img\r\n//                         src={product.imageUrl}\r\n//                         alt={product.productName}\r\n//                         style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//                       />\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: \"10px\" }}>\r\n//                     {editingId === product.productId ? (\r\n//                       <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Save\r\n//                       </button>\r\n//                     ) : (\r\n//                       <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n//                         Edit\r\n//                       </button>\r\n//                     )}\r\n//                     <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n//                       Delete\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ....................................... testing code.................................................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Adminhome() {\r\n  const navigate = useNavigate();\r\n  const [image, setImage] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [editingId, setEditingId] = useState(null); // Track the product being edited\r\n\r\n  // Check for authentication on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (!token) {\r\n      navigate('/adminlogin');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Fetch product data and the next productId on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('adminToken');\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n\r\n        const productIdResponse = await axios.get(\"http://localhost:5000/nextProductId\", { headers });\r\n        setProductId(productIdResponse.data.productId);\r\n\r\n        const productsResponse = await axios.get(\"http://localhost:5000/products\", { headers });\r\n        setProducts(productsResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        if (error.response?.status === 401) {\r\n          navigate('/adminlogin');\r\n        }\r\n        alert(\"Failed to fetch initial data\");\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, [navigate]);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e, setter) =>\r\n    setter(e.target.type === \"file\" ? URL.createObjectURL(e.target.files[0]) : e.target.value);\r\n\r\n  // Handle form submission to add a new product\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!image || !price || !productName) {\r\n      return alert(\"Please fill all fields.\");\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.image.files[0]);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"productName\", productName);\r\n\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      await axios.post(\"http://localhost:5000/upload\", formData, {\r\n        headers: { \r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n      });\r\n\r\n      alert(\"Product added successfully!\");\r\n      window.location.reload();  // Auto refresh after successful submit\r\n\r\n      // Reset form fields\r\n      setImage(null);\r\n      setPrice(\"\");\r\n      setProductName(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      if (error.response?.status === 401) {\r\n        navigate('/adminlogin');\r\n      }\r\n      alert(\"Failed to add product\");\r\n    }\r\n  };\r\n\r\n  // Handle edit and update of a product\r\n  const handleEdit = (product) => {\r\n    setEditingId(product.productId);\r\n    setProductName(product.productName);\r\n    setPrice(product.price);\r\n    setImage(product.imageUrl);\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    const formData = new FormData();\r\n    formData.append(\"productName\", productName);\r\n    formData.append(\"price\", price);\r\n    if (image && image instanceof File) {\r\n      formData.append(\"image\", image);\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      await axios.put(`http://localhost:5000/products/${id}`, formData, { headers });\r\n\r\n      alert(\"Product updated successfully!\");\r\n      window.location.reload();  // Auto refresh after successful update\r\n\r\n      setEditingId(null); // Exit edit mode\r\n    } catch (error) {\r\n      console.error(\"Error updating product:\", error);\r\n      if (error.response?.status === 401) {\r\n        navigate('/adminlogin');\r\n      }\r\n      alert(\"Failed to update product\");\r\n    }\r\n  };\r\n\r\n  // Handle deletion of a product\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      await axios.delete(`http://localhost:5000/products/${id}`, { headers });\r\n      alert(\"Product and image deleted successfully!\");\r\n      window.location.reload();  // Auto refresh after successful delete\r\n    } catch (error) {\r\n      console.error(\"Error deleting product:\", error);\r\n      if (error.response?.status === 401) {\r\n        navigate('/adminlogin');\r\n      }\r\n      alert(\"Failed to delete product\");\r\n    }\r\n  };\r\n\r\n  // Add logout handler\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    navigate('/adminlogin');\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\", padding: \"20px\" }}>\r\n      {/* Add logout button */}\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h1 style={{ color: \"#333\" }}>ADMIN HOME</h1>\r\n        <button \r\n          onClick={handleLogout}\r\n          style={{\r\n            backgroundColor: \"#dc3545\",\r\n            color: \"white\",\r\n            padding: \"10px 20px\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"16px\"\r\n          }}\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Product Form and Table */}\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"50px\" }}>\r\n        {/* Product Form */}\r\n        <div style={{ flex: 1 }}>\r\n          <form onSubmit={handleSubmit} style={{ backgroundColor: \"#fff\", padding: \"20px\", borderRadius: \"8px\", boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\" }}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={productId}\r\n                readOnly\r\n                placeholder=\"Product ID\"\r\n                style={{ marginBottom: \"10px\", cursor: \"not-allowed\", backgroundColor: \"#f0f0f0\", width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                onChange={(e) => handleChange(e, setImage)}\r\n                disabled={editingId !== null} // Disable image input if editing\r\n                style={{ padding: \"10px\", width: \"100%\" }}\r\n              />\r\n              {image && <img src={image || \"/placeholder.svg\"} alt=\"Selected\" style={{ width: 100, height: 100, marginTop: 10 }} />}\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={price}\r\n                onChange={(e) => handleChange(e, setPrice)}\r\n                placeholder=\"Enter price\"\r\n                disabled={editingId !== null} // Disable price input if editing\r\n                style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={productName}\r\n                onChange={(e) => handleChange(e, setProductName)}\r\n                placeholder=\"Enter product name\"\r\n                disabled={editingId !== null} // Disable product name input if editing\r\n                style={{ width: \"100%\", padding: \"10px\", marginTop: \"5px\", border: \"1px solid #ccc\", borderRadius: \"4px\" }}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" disabled={editingId !== null} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"10px 20px\", border: \"none\", borderRadius: \"4px\", fontSize: \"16px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\" }}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Product Table */}\r\n        <div style={{ flex: 2, overflowY: \"auto\", maxHeight: \"600px\", backgroundColor: \"rgba(135, 206, 250, 0.7)\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n          <h2 style={{ textAlign: \"center\" }}>Product List</h2>\r\n          {products.length === 0 ? (\r\n            <p style={{ textAlign: \"center\", color: \"#333\" }}>No products available</p>\r\n          ) : (\r\n            <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product ID</th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Product Name</th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Price</th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Image</th>\r\n                  <th style={{ textAlign: \"left\", backgroundColor: \"#f2f2f2\", color: \"#333\", padding: \"10px\" }}>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.map((product) => (\r\n                  <tr key={product.productId}>\r\n                    <td style={{ padding: \"10px\" }}>{product.productId}</td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={productName}\r\n                          onChange={(e) => setProductName(e.target.value)}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        product.productName\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        product.price\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={(e) => setImage(e.target.files[0])}\r\n                          style={{ padding: \"5px\", width: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={product.imageUrl || \"/placeholder.svg\"}\r\n                          alt={product.productName}\r\n                          style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td style={{ padding: \"10px\" }}>\r\n                      {editingId === product.productId ? (\r\n                        <button onClick={() => handleUpdate(product.productId)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                          Save\r\n                        </button>\r\n                      ) : (\r\n                        <button onClick={() => handleEdit(product)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\" }}>\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                      <button onClick={() => handleDelete(product.productId)} style={{ backgroundColor: \"#ff6347\", color: \"white\", padding: \"5px 10px\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"14px\", marginLeft: \"5px\" }}>\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAGA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,S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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}