{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Productpage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n\n// export default function Productpage() {\n//   const [products, setProducts] = useState([]);\n\n//   // Fetch product data from the server\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/products\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error(\"Error fetching products:\", error));\n//   }, []);\n\n//   const handleAddToCart = (product) => {\n//     alert(`Added ${product.productName} to cart!`);\n//   };\n\n//   const handleBuyNow = (product) => {\n//     alert(`Buying ${product.productName} for $${product.price}`);\n//   };\n\n//   return (\n//     <div>\n//       <h1>PRODUCT PAGE</h1>\n//       {products.length > 0 ? (\n//         <div\n//           style={{\n//             display: \"flex\",\n//             flexWrap: \"wrap\",\n//             gap: \"20px\",\n//             padding: \"10px\",\n//           }}\n//         >\n//           {products.map((product) => (\n//             <div\n//               key={product.productId}\n//               style={{\n//                 minWidth: \"200px\",\n//                 textAlign: \"center\",\n//                 flex: \"1 0 calc(14.28% - 20px)\", // 7 products per row\n//                 maxWidth: \"14.28%\",\n//               }}\n//             >\n//               <h3>{product.productName}</h3>\n//               <p>Price: ${product.price}</p>\n//               <img\n//                 src={product.imageUrl}\n//                 alt={product.productName}\n//                 style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\n//               />\n//               <div style={{ marginTop: \"10px\" }}>\n//                 <button\n//                   onClick={() => handleAddToCart(product)}\n//                   style={{\n//                     marginRight: \"10px\",\n//                     padding: \"5px 10px\",\n//                     cursor: \"pointer\",\n//                     backgroundColor:\"#d90166\",\n//                     borderRadius:\"15px\"\n//                   }}\n//                 >\n//                   Add to Cart\n//                 </button>\n//                 <button\n//                   onClick={() => handleBuyNow(product)}\n//                   style={{\n//                     padding: \"5px 10px\",\n//                     cursor: \"pointer\",\n//                     backgroundColor:\"#006400\",\n//                      borderRadius:\"15px\"\n//                   }}\n//                 >\n//                   Buy Now\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// ....................testing.................................\n\n// import React, { useEffect, useState } from \"react\";\n\n// export default function Productpage() {\n//   const [products, setProducts] = useState([]);\n\n//   // Fetch product data from the server\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/products\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data))\n//       .catch((error) => console.error(\"Error fetching products:\", error));\n//   }, []);\n\n//   const handleAddToCart = async (product) => {\n//     try {\n//       const formData = new FormData();\n//       const response = await fetch(product.imageUrl); // Fetch the image blob\n//       const blob = await response.blob();\n\n//       formData.append(\"image\", blob, product.productName + \".jpg\");\n//       formData.append(\"productName\", product.productName);\n//       formData.append(\"price\", product.price);\n\n//       const res = await fetch(\"http://localhost:5000/add-to-cart\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       const result = await res.json();\n//       if (result.success) {\n//         alert(`Added ${product.productName} to cart!`);\n//       } else {\n//         alert(\"Failed to add product to cart.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error adding to cart:\", error);\n//     }\n//   };\n\n//   const handleBuyNow = (product) => {\n//     alert(`Buying ${product.productName} for $${product.price}`);\n//   };\n\n//   return (\n//     <div>\n//       <h1>PRODUCT PAGE</h1>\n//       {products.length > 0 ? (\n//         <div\n//           style={{\n//             display: \"flex\",\n//             flexWrap: \"wrap\",\n//             gap: \"20px\",\n//             padding: \"10px\",\n//           }}\n//         >\n//           {products.map((product) => (\n//             <div\n//               key={product.productId}\n//               style={{\n//                 minWidth: \"200px\",\n//                 textAlign: \"center\",\n//                 flex: \"1 0 calc(14.28% - 20px)\",\n//                 maxWidth: \"14.28%\",\n//               }}\n//             >\n//               <h3>{product.productName}</h3>\n//               <p>Price: ${product.price}</p>\n//               <img\n//                 src={product.imageUrl}\n//                 alt={product.productName}\n//                 style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\n//               />\n//               <div style={{ marginTop: \"10px\" }}>\n//                 <button\n//                   onClick={() => handleAddToCart(product)}\n//                   style={{\n//                     marginRight: \"10px\",\n//                     padding: \"5px 10px\",\n//                     cursor: \"pointer\",\n//                     backgroundColor: \"#d90166\",\n//                     borderRadius: \"15px\",\n//                   }}\n//                 >\n//                   Add to Cart\n//                 </button>\n//                 <button\n//                   onClick={() => handleBuyNow(product)}\n//                   style={{\n//                     padding: \"5px 10px\",\n//                     cursor: \"pointer\",\n//                     backgroundColor: \"#006400\",\n//                     borderRadius: \"15px\",\n//                   }}\n//                 >\n//                   Buy Now\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// Client-side code\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Productpage() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/products\").then(response => response.json()).then(data => setProducts(data)).catch(error => console.error(\"Error fetching products:\", error));\n  }, []);\n  const handleAddToCart = product => {\n    const formData = new FormData();\n    formData.append(\"image\", product.imageFile); // Assuming product contains an imageFile field\n    formData.append(\"productName\", product.productName);\n    formData.append(\"price\", product.price);\n    fetch(\"http://localhost:5000/addToCart\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      alert(data.message);\n    }).catch(error => console.error(\"Error adding product to cart:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PRODUCT PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\",\n        padding: \"10px\"\n      },\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: \"200px\",\n          textAlign: \"center\",\n          flex: \"1 0 calc(14.28% - 20px)\",\n          maxWidth: \"14.28%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.imageUrl,\n          alt: product.productName,\n          style: {\n            width: \"200px\",\n            height: \"200px\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(product),\n            style: {\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              backgroundColor: \"#d90166\",\n              borderRadius: \"15px\"\n            },\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)]\n      }, product.productId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s(Productpage, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = Productpage;\nvar _c;\n$RefreshReg$(_c, \"Productpage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Productpage","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","handleAddToCart","product","formData","FormData","append","imageFile","productName","price","method","body","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","display","flexWrap","gap","padding","map","minWidth","textAlign","flex","maxWidth","src","imageUrl","alt","width","height","objectFit","marginTop","onClick","cursor","backgroundColor","borderRadius","productId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Productpage.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n\r\n// export default function Productpage() {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   // Fetch product data from the server\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/products\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data))\r\n//       .catch((error) => console.error(\"Error fetching products:\", error));\r\n//   }, []);\r\n\r\n//   const handleAddToCart = (product) => {\r\n//     alert(`Added ${product.productName} to cart!`);\r\n//   };\r\n\r\n//   const handleBuyNow = (product) => {\r\n//     alert(`Buying ${product.productName} for $${product.price}`);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>PRODUCT PAGE</h1>\r\n//       {products.length > 0 ? (\r\n//         <div\r\n//           style={{\r\n//             display: \"flex\",\r\n//             flexWrap: \"wrap\",\r\n//             gap: \"20px\",\r\n//             padding: \"10px\",\r\n//           }}\r\n//         >\r\n//           {products.map((product) => (\r\n//             <div\r\n//               key={product.productId}\r\n//               style={{\r\n//                 minWidth: \"200px\",\r\n//                 textAlign: \"center\",\r\n//                 flex: \"1 0 calc(14.28% - 20px)\", // 7 products per row\r\n//                 maxWidth: \"14.28%\",\r\n//               }}\r\n//             >\r\n//               <h3>{product.productName}</h3>\r\n//               <p>Price: ${product.price}</p>\r\n//               <img\r\n//                 src={product.imageUrl}\r\n//                 alt={product.productName}\r\n//                 style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\r\n//               />\r\n//               <div style={{ marginTop: \"10px\" }}>\r\n//                 <button\r\n//                   onClick={() => handleAddToCart(product)}\r\n//                   style={{\r\n//                     marginRight: \"10px\",\r\n//                     padding: \"5px 10px\",\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor:\"#d90166\",\r\n//                     borderRadius:\"15px\"\r\n//                   }}\r\n//                 >\r\n//                   Add to Cart\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleBuyNow(product)}\r\n//                   style={{\r\n//                     padding: \"5px 10px\",\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor:\"#006400\",\r\n//                      borderRadius:\"15px\"\r\n//                   }}\r\n//                 >\r\n//                   Buy Now\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ) : (\r\n//         <p>No products available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n// ....................testing.................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n\r\n// export default function Productpage() {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   // Fetch product data from the server\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/products\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data))\r\n//       .catch((error) => console.error(\"Error fetching products:\", error));\r\n//   }, []);\r\n\r\n//   const handleAddToCart = async (product) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       const response = await fetch(product.imageUrl); // Fetch the image blob\r\n//       const blob = await response.blob();\r\n\r\n//       formData.append(\"image\", blob, product.productName + \".jpg\");\r\n//       formData.append(\"productName\", product.productName);\r\n//       formData.append(\"price\", product.price);\r\n\r\n//       const res = await fetch(\"http://localhost:5000/add-to-cart\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n\r\n//       const result = await res.json();\r\n//       if (result.success) {\r\n//         alert(`Added ${product.productName} to cart!`);\r\n//       } else {\r\n//         alert(\"Failed to add product to cart.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error adding to cart:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBuyNow = (product) => {\r\n//     alert(`Buying ${product.productName} for $${product.price}`);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>PRODUCT PAGE</h1>\r\n//       {products.length > 0 ? (\r\n//         <div\r\n//           style={{\r\n//             display: \"flex\",\r\n//             flexWrap: \"wrap\",\r\n//             gap: \"20px\",\r\n//             padding: \"10px\",\r\n//           }}\r\n//         >\r\n//           {products.map((product) => (\r\n//             <div\r\n//               key={product.productId}\r\n//               style={{\r\n//                 minWidth: \"200px\",\r\n//                 textAlign: \"center\",\r\n//                 flex: \"1 0 calc(14.28% - 20px)\",\r\n//                 maxWidth: \"14.28%\",\r\n//               }}\r\n//             >\r\n//               <h3>{product.productName}</h3>\r\n//               <p>Price: ${product.price}</p>\r\n//               <img\r\n//                 src={product.imageUrl}\r\n//                 alt={product.productName}\r\n//                 style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\r\n//               />\r\n//               <div style={{ marginTop: \"10px\" }}>\r\n//                 <button\r\n//                   onClick={() => handleAddToCart(product)}\r\n//                   style={{\r\n//                     marginRight: \"10px\",\r\n//                     padding: \"5px 10px\",\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor: \"#d90166\",\r\n//                     borderRadius: \"15px\",\r\n//                   }}\r\n//                 >\r\n//                   Add to Cart\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleBuyNow(product)}\r\n//                   style={{\r\n//                     padding: \"5px 10px\",\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor: \"#006400\",\r\n//                     borderRadius: \"15px\",\r\n//                   }}\r\n//                 >\r\n//                   Buy Now\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ) : (\r\n//         <p>No products available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Client-side code\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Productpage() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/products\")\r\n      .then((response) => response.json())\r\n      .then((data) => setProducts(data))\r\n      .catch((error) => console.error(\"Error fetching products:\", error));\r\n  }, []);\r\n\r\n  const handleAddToCart = (product) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", product.imageFile); // Assuming product contains an imageFile field\r\n    formData.append(\"productName\", product.productName);\r\n    formData.append(\"price\", product.price);\r\n\r\n    fetch(\"http://localhost:5000/addToCart\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        alert(data.message);\r\n      })\r\n      .catch((error) => console.error(\"Error adding product to cart:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PRODUCT PAGE</h1>\r\n      {products.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"20px\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          {products.map((product) => (\r\n            <div\r\n              key={product.productId}\r\n              style={{\r\n                minWidth: \"200px\",\r\n                textAlign: \"center\",\r\n                flex: \"1 0 calc(14.28% - 20px)\",\r\n                maxWidth: \"14.28%\",\r\n              }}\r\n            >\r\n              <h3>{product.productName}</h3>\r\n              <p>Price: ${product.price}</p>\r\n              <img\r\n                src={product.imageUrl}\r\n                alt={product.productName}\r\n                style={{ width: \"200px\", height: \"200px\", objectFit: \"cover\" }}\r\n              />\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <button\r\n                  onClick={() => handleAddToCart(product)}\r\n                  style={{\r\n                    padding: \"5px 10px\",\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#d90166\",\r\n                    borderRadius: \"15px\",\r\n                  }}\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No products available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAQA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}