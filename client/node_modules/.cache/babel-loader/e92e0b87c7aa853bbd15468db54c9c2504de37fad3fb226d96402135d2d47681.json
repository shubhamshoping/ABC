{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\Customerlogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// export default function Customerlogin() {\n//  const [name, setName] = useState(\"\");\n//  const [gmail, setGmail] = useState(\"\");\n//  const [password, setPassword] = useState(\"\");\n//  const [nameTouched, setNameTouched] = useState(false);\n//  const [gmailTouched, setGmailTouched] = useState(false);\n//  const [passwordTouched, setPasswordTouched] = useState(false);\n//  const isNameValid = name.length >= 3;\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\n//  const isPasswordValid = password.length > 6;\n//  const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid) {\n//     alert(\"name is error\");\n//     return;\n//     }\n//     if (!isGmailValid) {\n//     alert(\"gmail is error\");\n//     return;\n//     }\n//     if (!isPasswordValid) {\n//     alert(\"password is error\");\n//     return;\n//     }\n//     alert(`${name} ${gmail} ${password}`);\n//  };\n//  const nameChange = (e) => {\n//  setName(e.target.value);\n//  };\n//  const gmailChange = (e) => {\n//  setGmail(e.target.value);\n//  };\n//  const passwordChange = (e) => {\n//  setPassword(e.target.value);\n//  };\n//  return (\n//     <div>\n//     <form onSubmit={handleSubmit}>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={name}\n//     onChange={nameChange}\n//     onFocus={() => setNameTouched(true)}\n//     />\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={gmail}\n//     onChange={gmailChange}\n//     onFocus={() => setGmailTouched(true)}\n//     />\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\n//    error</span>}\n//     </div>\n//     <div>\n//     <input\n//     type=\"text\"\n//     value={password}\n//     onChange={passwordChange}\n//     onFocus={() => setPasswordTouched(true)}\n//     />\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\n// }}>password is error</span>}\n//  </div>\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\n// !isPasswordValid}>\n//  submit\n//  </button>\n//  </form>\n//  </div>\n//  );\n// }\n\n// ......................original code .......................................................\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n\n// export default function Customerlogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//  const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix the errors in the form\");\n//       return;\n//     }\n\n//     const data = { name, gmail, password };\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         alert(result.message);\n//         navigate(\"/Productpage\");\n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div>\n//       <h1>Customer LOGIN </h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>Gmail must include '@gmail.com'</span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>Password must be longer than 6 characters</span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       <button onClick={() => navigate(\"/Customergmail\")}>\n//         {/* New code: Navigate to Customergmail when clicked */}\n//         Forget password\n//       </button>\n\n//     </div>\n//   );\n// }\n\n// .......................perfect original code..............................................\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n\n// export default function Customerlogin() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const isNameValid = name.length >= 3;\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 6;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\n//       alert(\"Please fix the errors in the form\");\n//       return;\n//     }\n\n//     const data = { name, gmail, password };\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(data),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         alert(result.message);\n//         navigate(\"/Productpage\");\n//       } else {\n//         alert(result.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"An error occurred while submitting the form.\");\n//     }\n//   };\n\n//   const nameChange = (e) => setName(e.target.value);\n//   const gmailChange = (e) => setGmail(e.target.value);\n//   const passwordChange = (e) => setPassword(e.target.value);\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           height: \"500px\",\n//           background: \"rgba(255, 255, 255, 0.1)\",\n//           borderRadius: \"50%\",\n//           boxShadow:\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\n//           padding: \"30px\",\n//           backdropFilter: \"blur(10px)\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//         }}\n//       >\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"name\"\n//               type=\"text\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Name must be at least 3 characters long\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"@gmail.com\"\n//               type=\"text\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Gmail must include \"@gmail.com\"\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//             placeholder=\"PASSWORD\"\n//               type=\"text\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"none\",\n//                 outline: \"none\",\n//                 background: \"rgba(255, 255, 255, 0.3)\",\n//                 color: \"#fff\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Password must be longer than 6 characters\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"rgba(0, 0, 0, 0.7)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n\n//         <button\n//           onClick={() => navigate(\"/Customergmail\")}\n//           style={{\n//             marginTop: \"20px\",\n//             padding: \"10px 20px\",\n//             borderRadius: \"25px\",\n//             background: \"rgba(0, 0, 0, 0.7)\",\n//             color: \"green\",\n//             fontWeight: \"bold\",\n//             cursor: \"pointer\"\n\n//           }}\n//         >\n//           Forget password\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ......................testing......................................\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Customerlogin() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const navigate = useNavigate();\n  const isNameValid = name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 6;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\n      alert(\"Please fix the errors in the form\");\n      return;\n    }\n    const data = {\n      name,\n      gmail,\n      password\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/customerlogin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Store the JWT token in localStorage\n        localStorage.setItem(\"customerToken\", result.token);\n        alert(result.message);\n        navigate(\"/Productpage\");\n      } else {\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while submitting the form.\");\n    }\n  };\n  const nameChange = e => setName(e.target.value);\n  const gmailChange = e => setGmail(e.target.value);\n  const passwordChange = e => setPassword(e.target.value);\n  const handleLogout = () => {\n    // Clear the token from localStorage\n    localStorage.removeItem(\"customerToken\");\n\n    // Navigate to Mainpage\n    navigate(\"/Mainpage\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        height: \"500px\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"50%\",\n        boxShadow: \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n        border: \"5px solid rgba(255, 255, 255, 0.3)\",\n        padding: \"30px\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#fff\",\n          marginBottom: \"20px\"\n        },\n        children: \"Customer LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"name\",\n            type: \"text\",\n            value: name,\n            onChange: nameChange,\n            onFocus: () => setNameTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Name must be at least 3 characters long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"@gmail.com\",\n            type: \"text\",\n            value: gmail,\n            onChange: gmailChange,\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Gmail must include \\\"@gmail.com\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"PASSWORD\",\n            type: \"text\",\n            value: password,\n            onChange: passwordChange,\n            onFocus: () => setPasswordTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Password must be longer than 6 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(0, 0, 0, 0.7)\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/Customergmail\"),\n        style: {\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          borderRadius: \"25px\",\n          background: \"rgba(0, 0, 0, 0.7)\",\n          color: \"green\",\n          fontWeight: \"bold\",\n          cursor: \"pointer\"\n        },\n        children: \"Forget password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n}\n_s(Customerlogin, \"MVdD9dNCKPo9z+JXol3/RV+X2c8=\", false, function () {\n  return [useNavigate];\n});\n_c = Customerlogin;\nvar _c;\n$RefreshReg$(_c, \"Customerlogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Customerlogin","_s","name","setName","gmail","setGmail","password","setPassword","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","navigate","isNameValid","length","isGmailValid","includes","isPasswordValid","handleSubmit","e","preventDefault","alert","data","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","token","message","error","console","nameChange","target","value","gmailChange","passwordChange","handleLogout","removeItem","style","display","justifyContent","alignItems","height","background","children","width","borderRadius","boxShadow","border","padding","backdropFilter","flexDirection","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","onSubmit","placeholder","type","onChange","onFocus","outline","fontSize","disabled","fontWeight","cursor","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/Customerlogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// export default function Customerlogin() {\r\n//  const [name, setName] = useState(\"\");\r\n//  const [gmail, setGmail] = useState(\"\");\r\n//  const [password, setPassword] = useState(\"\");\r\n//  const [nameTouched, setNameTouched] = useState(false);\r\n//  const [gmailTouched, setGmailTouched] = useState(false);\r\n//  const [passwordTouched, setPasswordTouched] = useState(false);\r\n//  const isNameValid = name.length >= 3;\r\n//  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//  const isPasswordValid = password.length > 6;\r\n//  const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid) {\r\n//     alert(\"name is error\");\r\n//     return;\r\n//     }\r\n//     if (!isGmailValid) {\r\n//     alert(\"gmail is error\");\r\n//     return;\r\n//     }\r\n//     if (!isPasswordValid) {\r\n//     alert(\"password is error\");\r\n//     return;\r\n//     }\r\n//     alert(`${name} ${gmail} ${password}`);\r\n//  };\r\n//  const nameChange = (e) => {\r\n//  setName(e.target.value);\r\n//  };\r\n//  const gmailChange = (e) => {\r\n//  setGmail(e.target.value);\r\n//  };\r\n//  const passwordChange = (e) => {\r\n//  setPassword(e.target.value);\r\n//  };\r\n//  return (\r\n//     <div>\r\n//     <form onSubmit={handleSubmit}>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={name}\r\n//     onChange={nameChange}\r\n//     onFocus={() => setNameTouched(true)}\r\n//     />\r\n//     {nameTouched && !isNameValid && <span style={{ color: 'red' }}>name is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={gmail}\r\n//     onChange={gmailChange}\r\n//     onFocus={() => setGmailTouched(true)}\r\n//     />\r\n//     {gmailTouched && !isGmailValid && <span style={{ color: 'red' }}>gmail is\r\n//    error</span>}\r\n//     </div>\r\n//     <div>\r\n//     <input\r\n//     type=\"text\"\r\n//     value={password}\r\n//     onChange={passwordChange}\r\n//     onFocus={() => setPasswordTouched(true)}\r\n//     />\r\n//     {passwordTouched && !isPasswordValid && <span style={{ color: 'red'\r\n// }}>password is error</span>}\r\n//  </div>\r\n//  <button type=\"submit\" disabled={!isNameValid || !isGmailValid ||\r\n// !isPasswordValid}>\r\n//  submit\r\n//  </button>\r\n//  </form>\r\n//  </div>\r\n//  );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ......................original code .......................................................\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// export default function Customerlogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n\r\n//  const navigate = useNavigate();\r\n\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix the errors in the form\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = { name, gmail, password };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(result.message);\r\n//         navigate(\"/Productpage\");\r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Customer LOGIN </h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>Name must be at least 3 characters long</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>Gmail must include '@gmail.com'</span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>Password must be longer than 6 characters</span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n\r\n//       <button onClick={() => navigate(\"/Customergmail\")}>\r\n//         {/* New code: Navigate to Customergmail when clicked */}\r\n//         Forget password\r\n//       </button>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// .......................perfect original code..............................................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; \r\n\r\n// export default function Customerlogin() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const isNameValid = name.length >= 3;\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 6;\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n//       alert(\"Please fix the errors in the form\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = { name, gmail, password };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(data),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         alert(result.message);\r\n//         navigate(\"/Productpage\");\r\n//       } else {\r\n//         alert(result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"An error occurred while submitting the form.\");\r\n//     }\r\n//   };\r\n\r\n//   const nameChange = (e) => setName(e.target.value);\r\n//   const gmailChange = (e) => setGmail(e.target.value);\r\n//   const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           height: \"500px\",\r\n//           background: \"rgba(255, 255, 255, 0.1)\",\r\n//           borderRadius: \"50%\",\r\n//           boxShadow:\r\n//             \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n//           border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n//           padding: \"30px\",\r\n//           backdropFilter: \"blur(10px)\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\r\n//         <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"name\"\r\n//               type=\"text\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Name must be at least 3 characters long\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"@gmail.com\"\r\n//               type=\"text\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Gmail must include \"@gmail.com\"\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//             placeholder=\"PASSWORD\"\r\n//               type=\"text\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"none\",\r\n//                 outline: \"none\",\r\n//                 background: \"rgba(255, 255, 255, 0.3)\",\r\n//                 color: \"#fff\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Password must be longer than 6 characters\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"rgba(0, 0, 0, 0.7)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n\r\n//         <button\r\n//           onClick={() => navigate(\"/Customergmail\")}\r\n//           style={{\r\n//             marginTop: \"20px\",\r\n//             padding: \"10px 20px\",\r\n//             borderRadius: \"25px\",\r\n//             background: \"rgba(0, 0, 0, 0.7)\",\r\n//             color: \"green\",\r\n//             fontWeight: \"bold\",\r\n//             cursor: \"pointer\"\r\n            \r\n//           }}\r\n//         >\r\n//           Forget password\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ......................testing......................................\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nexport default function Customerlogin() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isNameValid = name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 6;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid) {\r\n      alert(\"Please fix the errors in the form\");\r\n      return;\r\n    }\r\n\r\n    const data = { name, gmail, password };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/customerlogin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Store the JWT token in localStorage\r\n        localStorage.setItem(\"customerToken\", result.token);\r\n        alert(result.message);\r\n        navigate(\"/Productpage\");\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"An error occurred while submitting the form.\");\r\n    }\r\n  };\r\n\r\n  const nameChange = (e) => setName(e.target.value);\r\n  const gmailChange = (e) => setGmail(e.target.value);\r\n  const passwordChange = (e) => setPassword(e.target.value);\r\n\r\n\r\n\r\n  const handleLogout = () => {\r\n    // Clear the token from localStorage\r\n    localStorage.removeItem(\"customerToken\");\r\n  \r\n    // Navigate to Mainpage\r\n    navigate(\"/Mainpage\");\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          height: \"500px\",\r\n          background: \"rgba(255, 255, 255, 0.1)\",\r\n          borderRadius: \"50%\",\r\n          boxShadow:\r\n            \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n          border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n          padding: \"30px\",\r\n          backdropFilter: \"blur(10px)\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>Customer LOGIN</h1>\r\n        <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              placeholder=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={nameChange}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Name must be at least 3 characters long\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              placeholder=\"@gmail.com\"\r\n              type=\"text\"\r\n              value={gmail}\r\n              onChange={gmailChange}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Gmail must include \"@gmail.com\"\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <input\r\n              placeholder=\"PASSWORD\"\r\n              type=\"text\"\r\n              value={password}\r\n              onChange={passwordChange}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Password must be longer than 6 characters\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(0, 0, 0, 0.7)\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        <button\r\n          onClick={() => navigate(\"/Customergmail\")}\r\n          style={{\r\n            marginTop: \"20px\",\r\n            padding: \"10px 20px\",\r\n            borderRadius: \"25px\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n            color: \"green\",\r\n            fontWeight: \"bold\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Forget password\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AASA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,WAAW,GAAGb,IAAI,CAACc,MAAM,IAAI,CAAC;EAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}