{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\testing\\\\chandan-enterprises\\\\src\\\\AdminResister.js\",\n  _s = $RefreshSig$();\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     setPhone(e.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (at least 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"name\">Name:</label>\n//           <input\n//             id=\"name\"\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={nameChange}\n//             onFocus={() => setNameTouched(true)}\n//           />\n//           {nameTouched && !isNameValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid name (only letters and spaces, at least 3 characters)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"phone\">Phone Number:</label>\n//           <input\n//             id=\"phone\"\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={phoneChange}\n//             onFocus={() => setPhoneTouched(true)}\n//           />\n//           {phoneTouched && !isPhoneValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid phone number (exactly 10 digits)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"gmail\">Gmail:</label>\n//           <input\n//             id=\"gmail\"\n//             type=\"text\"\n//             placeholder=\"Enter your Gmail\"\n//             value={gmail}\n//             onChange={gmailChange}\n//             onFocus={() => setGmailTouched(true)}\n//           />\n//           {gmailTouched && !isGmailValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter a valid Gmail (must include @gmail.com)\n//             </span>\n//           )}\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={passwordChange}\n//             onFocus={() => setPasswordTouched(true)}\n//             autoComplete=\"off\" // Prevent password manager from showing\n//           />\n//           {passwordTouched && !isPasswordValid && (\n//             <span style={{ color: \"red\" }}>\n//               Enter the password (at least 5 characters)\n//             </span>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           disabled={\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//           }\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// export default function AdminResister() {\n//   const [name, setName] = useState(\"\");\n//   const [gmail, setGmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [nameTouched, setNameTouched] = useState(false);\n//   const [gmailTouched, setGmailTouched] = useState(false);\n//   const [passwordTouched, setPasswordTouched] = useState(false);\n//   const [phoneTouched, setPhoneTouched] = useState(false);\n\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n//       alert(\"Please fill out all fields correctly.\");\n//       return;\n//     }\n//     alert(`Form submitted successfully!`);\n//     console.log({ name, gmail, password, phone });\n//     window.location.reload(); // Refresh the page after successful submission\n//   };\n\n//   const nameChange = (e) => {\n//     setName(e.target.value);\n//   };\n\n//   const gmailChange = (e) => {\n//     setGmail(e.target.value);\n//   };\n\n//   const passwordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n\n//   const phoneChange = (e) => {\n//     const value = e.target.value;\n//     if (/^\\d{0,10}$/.test(value)) {\n//       setPhone(value);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(to right, #434343, #000000)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"400px\",\n//           padding: \"20px\",\n//           borderRadius: \"50%\",\n//           background: \"#fff\",\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\n//             <input\n//               id=\"name\"\n//               type=\"text\"\n//               placeholder=\"Enter your name\"\n//               value={name}\n//               onChange={nameChange}\n//               onFocus={() => setNameTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {nameTouched && !isNameValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\n//             <input\n//               id=\"phone\"\n//               type=\"text\"\n//               placeholder=\"Enter your phone number\"\n//               value={phone}\n//               onChange={phoneChange}\n//               onFocus={() => setPhoneTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {phoneTouched && !isPhoneValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid phone number (exactly 10 digits)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\n//             <input\n//               id=\"gmail\"\n//               type=\"text\"\n//               placeholder=\"Enter your Gmail\"\n//               value={gmail}\n//               onChange={gmailChange}\n//               onFocus={() => setGmailTouched(true)}\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {gmailTouched && !isGmailValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter a valid Gmail (must include @gmail.com)\n//               </span>\n//             )}\n//           </div>\n//           <div style={{ marginBottom: \"20px\" }}>\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\n//             <input\n//               id=\"password\"\n//               type=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={passwordChange}\n//               onFocus={() => setPasswordTouched(true)}\n//               autoComplete=\"off\"\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"10px\",\n//                 borderRadius: \"5px\",\n//                 border: \"1px solid #ccc\",\n//               }}\n//             />\n//             {passwordTouched && !isPasswordValid && (\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\n//                 Enter the password (at least 5 characters)\n//               </span>\n//             )}\n//           </div>\n//           <button\n//             type=\"submit\"\n//             disabled={\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\n//             }\n//             style={{\n//               width: \"100%\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               border: \"none\",\n//               background: \"linear-gradient(to right, #434343, #000000)\",\n//               color: \"#fff\",\n//               fontWeight: \"bold\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ...........................original code.............................................\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRegister() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [nameTouched, setNameTouched] = useState(false);\n  const [gmailTouched, setGmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n  const [phoneTouched, setPhoneTouched] = useState(false);\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\n  const isGmailValid = gmail.includes(\"@gmail.com\");\n  const isPasswordValid = password.length > 4;\n  const isPhoneValid = /^\\d{10}$/.test(phone);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\n      alert(\"Please fill out all fields correctly.\");\n      return;\n    }\n    alert(\"Form submitted successfully!\");\n    console.log({\n      name,\n      gmail,\n      password,\n      phone\n    });\n    window.location.reload();\n  };\n  const reverseText = text => text.split(\"\").reverse().join(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\n      padding: \"0 50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"350px\",\n        height: \"auto\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"50%\",\n        boxShadow: \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n        border: \"5px solid rgba(255, 255, 255, 0.3)\",\n        padding: \"30px\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#fff\",\n          marginBottom: \"20px\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            onFocus: () => setNameTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), nameTouched && !isNameValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid name (only letters and spaces, at least 3 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your phone number\",\n            value: phone,\n            onChange: e => setPhone(e.target.value),\n            onFocus: () => setPhoneTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), phoneTouched && !isPhoneValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid phone number (exactly 10 digits)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Gmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your Gmail\",\n            value: gmail,\n            onChange: e => setGmail(e.target.value),\n            onFocus: () => setGmailTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), gmailTouched && !isGmailValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid Gmail (must include @gmail.com)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\"\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            onFocus: () => setPasswordTouched(true),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), passwordTouched && !isPasswordValid && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\"\n            },\n            children: \"Enter a valid password (at least 5 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid,\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            background: \"rgba(0, 0, 0, 0.7)\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"350px\",\n        height: \"auto\",\n        transform: \"scaleX(-1)\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"50%\",\n        boxShadow: \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\n        border: \"5px solid rgba(255, 255, 255, 0.3)\",\n        padding: \"30px\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#fff\",\n          marginBottom: \"20px\",\n          transform: \"scaleX(-1)\"\n        },\n        children: \"ADMIN REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\",\n              transform: \"scaleX(-1)\"\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reverseText(name),\n            readOnly: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\",\n              transform: \"scaleX(-1)\"\n            },\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reverseText(phone),\n            readOnly: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\",\n              transform: \"scaleX(-1)\"\n            },\n            children: \"Gmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reverseText(gmail),\n            readOnly: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#fff\",\n              display: \"block\",\n              marginBottom: \"5px\",\n              transform: \"scaleX(-1)\"\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: reverseText(password),\n            readOnly: true,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              outline: \"none\",\n              background: \"rgba(255, 255, 255, 0.3)\",\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminRegister, \"T+kegp1StLWImINPj5xdXMvesEE=\");\n_c = AdminRegister;\nvar _c;\n$RefreshReg$(_c, \"AdminRegister\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminRegister","_s","name","setName","gmail","setGmail","password","setPassword","phone","setPhone","nameTouched","setNameTouched","gmailTouched","setGmailTouched","passwordTouched","setPasswordTouched","phoneTouched","setPhoneTouched","isNameValid","test","length","isGmailValid","includes","isPasswordValid","isPhoneValid","handleSubmit","e","preventDefault","alert","console","log","window","location","reload","reverseText","text","split","reverse","join","style","display","justifyContent","alignItems","height","background","padding","children","width","borderRadius","boxShadow","border","backdropFilter","flexDirection","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","onSubmit","type","placeholder","value","onChange","target","onFocus","outline","fontSize","disabled","fontWeight","cursor","transform","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/testing/chandan-enterprises/src/AdminResister.js"],"sourcesContent":["\r\n\r\n\r\n// .....................Main Root code for Admin Resister,signup,signin,Forgotpassword,logout..................\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10,}$/.test(phone); // Regex for at least 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     setPhone(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (at least 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 style={{ marginLeft: \"600px\" }}>ADMIN RESISTER</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             id=\"name\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={nameChange}\r\n//             onFocus={() => setNameTouched(true)}\r\n//           />\r\n//           {nameTouched && !isNameValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid name (only letters and spaces, at least 3 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"phone\">Phone Number:</label>\r\n//           <input\r\n//             id=\"phone\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your phone number\"\r\n//             value={phone}\r\n//             onChange={phoneChange}\r\n//             onFocus={() => setPhoneTouched(true)}\r\n//           />\r\n//           {phoneTouched && !isPhoneValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid phone number (exactly 10 digits)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"gmail\">Gmail:</label>\r\n//           <input\r\n//             id=\"gmail\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your Gmail\"\r\n//             value={gmail}\r\n//             onChange={gmailChange}\r\n//             onFocus={() => setGmailTouched(true)}\r\n//           />\r\n//           {gmailTouched && !isGmailValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter a valid Gmail (must include @gmail.com)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input\r\n//             id=\"password\"\r\n//             type=\"password\"\r\n//             placeholder=\"Enter your password\"\r\n//             value={password}\r\n//             onChange={passwordChange}\r\n//             onFocus={() => setPasswordTouched(true)}\r\n//             autoComplete=\"off\" // Prevent password manager from showing\r\n//           />\r\n//           {passwordTouched && !isPasswordValid && (\r\n//             <span style={{ color: \"red\" }}>\r\n//               Enter the password (at least 5 characters)\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={\r\n//             !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//           }\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// export default function AdminResister() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [gmail, setGmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const [nameTouched, setNameTouched] = useState(false);\r\n//   const [gmailTouched, setGmailTouched] = useState(false);\r\n//   const [passwordTouched, setPasswordTouched] = useState(false);\r\n//   const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n//   const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3; // Regex to allow only letters and spaces\r\n//   const isGmailValid = gmail.includes(\"@gmail.com\");\r\n//   const isPasswordValid = password.length > 4; // Updated condition for password validation\r\n//   const isPhoneValid = /^\\d{10}$/.test(phone); // Regex to ensure exactly 10 numeric digits\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n//       alert(\"Please fill out all fields correctly.\");\r\n//       return;\r\n//     }\r\n//     alert(`Form submitted successfully!`);\r\n//     console.log({ name, gmail, password, phone });\r\n//     window.location.reload(); // Refresh the page after successful submission\r\n//   };\r\n\r\n//   const nameChange = (e) => {\r\n//     setName(e.target.value);\r\n//   };\r\n\r\n//   const gmailChange = (e) => {\r\n//     setGmail(e.target.value);\r\n//   };\r\n\r\n//   const passwordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const phoneChange = (e) => {\r\n//     const value = e.target.value;\r\n//     if (/^\\d{0,10}$/.test(value)) {\r\n//       setPhone(value);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(to right, #434343, #000000)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"400px\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"50%\",\r\n//           background: \"#fff\",\r\n//           boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h1 style={{ marginBottom: \"20px\", color: \"#333\" }}>ADMIN REGISTER</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"name\" style={{ display: \"block\", marginBottom: \"5px\" }}>Name:</label>\r\n//             <input\r\n//               id=\"name\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your name\"\r\n//               value={name}\r\n//               onChange={nameChange}\r\n//               onFocus={() => setNameTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {nameTouched && !isNameValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid name (only letters and spaces, at least 3 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"phone\" style={{ display: \"block\", marginBottom: \"5px\" }}>Phone Number:</label>\r\n//             <input\r\n//               id=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your phone number\"\r\n//               value={phone}\r\n//               onChange={phoneChange}\r\n//               onFocus={() => setPhoneTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {phoneTouched && !isPhoneValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid phone number (exactly 10 digits)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <label htmlFor=\"gmail\" style={{ display: \"block\", marginBottom: \"5px\" }}>Gmail:</label>\r\n//             <input\r\n//               id=\"gmail\"\r\n//               type=\"text\"\r\n//               placeholder=\"Enter your Gmail\"\r\n//               value={gmail}\r\n//               onChange={gmailChange}\r\n//               onFocus={() => setGmailTouched(true)}\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {gmailTouched && !isGmailValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter a valid Gmail (must include @gmail.com)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div style={{ marginBottom: \"20px\" }}>\r\n//             <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>Password:</label>\r\n//             <input\r\n//               id=\"password\"\r\n//               type=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={passwordChange}\r\n//               onFocus={() => setPasswordTouched(true)}\r\n//               autoComplete=\"off\"\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 border: \"1px solid #ccc\",\r\n//               }}\r\n//             />\r\n//             {passwordTouched && !isPasswordValid && (\r\n//               <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n//                 Enter the password (at least 5 characters)\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={\r\n//               !isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid\r\n//             }\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               border: \"none\",\r\n//               background: \"linear-gradient(to right, #434343, #000000)\",\r\n//               color: \"#fff\",\r\n//               fontWeight: \"bold\",\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//           >\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ...........................original code.............................................\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function AdminRegister() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [nameTouched, setNameTouched] = useState(false);\r\n  const [gmailTouched, setGmailTouched] = useState(false);\r\n  const [passwordTouched, setPasswordTouched] = useState(false);\r\n  const [phoneTouched, setPhoneTouched] = useState(false);\r\n\r\n  const isNameValid = /^[A-Za-z\\s]+$/.test(name) && name.length >= 3;\r\n  const isGmailValid = gmail.includes(\"@gmail.com\");\r\n  const isPasswordValid = password.length > 4;\r\n  const isPhoneValid = /^\\d{10}$/.test(phone);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid) {\r\n      alert(\"Please fill out all fields correctly.\");\r\n      return;\r\n    }\r\n    alert(\"Form submitted successfully!\");\r\n    console.log({ name, gmail, password, phone });\r\n    window.location.reload();\r\n  };\r\n\r\n  const reverseText = (text) => text.split(\"\").reverse().join(\"\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        background: \"linear-gradient(135deg, #2c3e50, #4ca1af)\",\r\n        padding: \"0 50px\",\r\n      }}\r\n    >\r\n      {/* Original Form */}\r\n      <div\r\n        style={{\r\n          width: \"350px\",\r\n          height: \"auto\",\r\n          background: \"rgba(255, 255, 255, 0.1)\",\r\n          borderRadius: \"50%\",\r\n          boxShadow:\r\n            \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n          border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n          padding: \"30px\",\r\n          backdropFilter: \"blur(10px)\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ color: \"#fff\", marginBottom: \"20px\" }}>ADMIN REGISTER</h1>\r\n        <form style={{ width: \"100%\", textAlign: \"center\" }} onSubmit={handleSubmit}>\r\n          {/* Name Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              onFocus={() => setNameTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {nameTouched && !isNameValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid name (only letters and spaces, at least 3 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Phone Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n              Phone Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              onFocus={() => setPhoneTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {phoneTouched && !isPhoneValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid phone number (exactly 10 digits)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Gmail Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n              Gmail\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={gmail}\r\n              onChange={(e) => setGmail(e.target.value)}\r\n              onFocus={() => setGmailTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {gmailTouched && !isGmailValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid Gmail (must include @gmail.com)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Password Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label style={{ color: \"#fff\", display: \"block\", marginBottom: \"5px\" }}>\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onFocus={() => setPasswordTouched(true)}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n            {passwordTouched && !isPasswordValid && (\r\n              <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                Enter a valid password (at least 5 characters)\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isNameValid || !isGmailValid || !isPasswordValid || !isPhoneValid}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              background: \"rgba(0, 0, 0, 0.7)\",\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Mirrored Form */}\r\n      <div\r\n        style={{\r\n          width: \"350px\",\r\n          height: \"auto\",\r\n          transform: \"scaleX(-1)\",\r\n          background: \"rgba(255, 255, 255, 0.1)\",\r\n          borderRadius: \"50%\",\r\n          boxShadow:\r\n            \"0 0 15px rgba(255, 0, 0, 0.6), 0 0 15px rgba(0, 255, 0, 0.6), 0 0 15px rgba(0, 0, 255, 0.6)\",\r\n          border: \"5px solid rgba(255, 255, 255, 0.3)\",\r\n          padding: \"30px\",\r\n          backdropFilter: \"blur(10px)\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            color: \"#fff\",\r\n            marginBottom: \"20px\",\r\n            transform: \"scaleX(-1)\",\r\n          }}\r\n        >\r\n          ADMIN REGISTER\r\n        </h1>\r\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n          {/* Name Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label\r\n              style={{\r\n                color: \"#fff\",\r\n                display: \"block\",\r\n                marginBottom: \"5px\",\r\n                transform: \"scaleX(-1)\",\r\n              }}\r\n            >\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={reverseText(name)}\r\n              readOnly\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Phone Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label\r\n              style={{\r\n                color: \"#fff\",\r\n                display: \"block\",\r\n                marginBottom: \"5px\",\r\n                transform: \"scaleX(-1)\",\r\n              }}\r\n            >\r\n              Phone Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={reverseText(phone)}\r\n              readOnly\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Gmail Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label\r\n              style={{\r\n                color: \"#fff\",\r\n                display: \"block\",\r\n                marginBottom: \"5px\",\r\n                transform: \"scaleX(-1)\",\r\n              }}\r\n            >\r\n              Gmail\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={reverseText(gmail)}\r\n              readOnly\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Password Field */}\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <label\r\n              style={{\r\n                color: \"#fff\",\r\n                display: \"block\",\r\n                marginBottom: \"5px\",\r\n                transform: \"scaleX(-1)\",\r\n              }}\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={reverseText(password)}\r\n              readOnly\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                background: \"rgba(255, 255, 255, 0.3)\",\r\n                color: \"#fff\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}